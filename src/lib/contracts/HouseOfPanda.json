{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_baseUri",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_stableCoin",
          "type": "address"
        },
        {
          "internalType": "contract IStaker",
          "name": "_staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_proxyAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "projectId",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "uint128",
          "name": "qty",
          "type": "uint128"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "burner",
          "type": "address"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "relayerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "functionSignature",
          "type": "bytes"
        }
      ],
      "name": "MetaTransactionExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "projectId",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "uint128",
          "name": "qty",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "id",
          "type": "uint32"
        }
      ],
      "name": "ProjectCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "projectId",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "bytes1",
          "name": "status",
          "type": "bytes1"
        }
      ],
      "name": "ProjectStatusChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ERC712_VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "projectId",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "qty",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "adminBurn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "projectId",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "qty",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            }
          ],
          "internalType": "struct Sig",
          "name": "sig",
          "type": "tuple"
        }
      ],
      "name": "authorizedMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "projectId",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "qty",
          "type": "uint32"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin_",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "typeId",
          "type": "uint16"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "authorizedOnly",
          "type": "bool"
        },
        {
          "internalType": "uint128",
          "name": "supplyLimit",
          "type": "uint128"
        },
        {
          "internalType": "uint16",
          "name": "term",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "apy",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakedApy",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "startTime",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "endTime",
          "type": "uint64"
        }
      ],
      "name": "createProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "functionSignature",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "sigR",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "sigS",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "sigV",
          "type": "uint8"
        }
      ],
      "name": "executeMetaTransaction",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "investor",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "projectId",
          "type": "uint32"
        }
      ],
      "name": "getAssetAlloc",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "qty",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "startTime",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "accumRewards",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "claimedRewards",
              "type": "uint256"
            }
          ],
          "internalType": "struct HoldingInfo",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "qty",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "term",
              "type": "uint32"
            },
            {
              "internalType": "uint64",
              "name": "startTime",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "accumRewards",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "claimedRewards",
              "type": "uint256"
            }
          ],
          "internalType": "struct StakeInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDomainSeperator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "projectId",
          "type": "uint32"
        }
      ],
      "name": "getHoldingInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "qty",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "startTime",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "accumRewards",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "claimedRewards",
              "type": "uint256"
            }
          ],
          "internalType": "struct HoldingInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "projectId",
          "type": "uint32"
        }
      ],
      "name": "getProject",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "id",
              "type": "uint32"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "typeId",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "authorizedOnly",
              "type": "bool"
            },
            {
              "internalType": "bytes1",
              "name": "status",
              "type": "bytes1"
            },
            {
              "internalType": "uint16",
              "name": "term",
              "type": "uint16"
            },
            {
              "internalType": "uint128",
              "name": "supplyLimit",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "apy",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakedApy",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "startTime",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "endTime",
              "type": "uint64"
            }
          ],
          "internalType": "struct ProjectInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOperator",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "projectId",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "qty",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_paused",
          "type": "bool"
        }
      ],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "projectId",
          "type": "uint32"
        }
      ],
      "name": "projectExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "projectIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_newURI",
          "type": "string"
        }
      ],
      "name": "setCustomURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "projectId",
          "type": "uint32"
        },
        {
          "internalType": "bytes1",
          "name": "status",
          "type": "bytes1"
        }
      ],
      "name": "setProjectStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newURI",
          "type": "string"
        }
      ],
      "name": "setURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "staker",
      "outputs": [
        {
          "internalType": "contract IStaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "projectId",
          "type": "uint32"
        }
      ],
      "name": "supplyFor",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "updateStaker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/patur/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/Ownable.sol",
    "1": "/Users/patur/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/security/ReentrancyGuard.sol",
    "10": "/Users/patur/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Address.sol",
    "11": "/Users/patur/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "12": "/Users/patur/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Strings.sol",
    "13": "/Users/patur/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/ERC165.sol",
    "14": "/Users/patur/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/IERC165.sol",
    "16": "contracts/ERC1155Tradable.sol",
    "17": "contracts/HasAdmin.sol",
    "18": "contracts/HouseOfPanda.sol",
    "19": "contracts/SigVerifier.sol",
    "2": "/Users/patur/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/ERC1155.sol",
    "20": "contracts/Staker.sol",
    "22": "contracts/common/meta-transactions/EIP712Base.sol",
    "23": "contracts/common/meta-transactions/Initializable.sol",
    "24": "contracts/common/meta-transactions/NativeMetaTransaction.sol",
    "25": "contracts/interfaces/ICoin.sol",
    "26": "contracts/interfaces/IProjectMan.sol",
    "27": "contracts/types/HoldingInfo.sol",
    "28": "contracts/types/ProjectInfo.sol",
    "29": "contracts/types/StakeInfo.sol",
    "3": "/Users/patur/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/IERC1155.sol",
    "5": "/Users/patur/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
    "7": "/Users/patur/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
    "9": "/Users/patur/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/utils/SafeERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/HouseOfPanda.sol",
    "exportedSymbols": {
      "ACTIVE": [
        4800
      ],
      "Address": [
        5205
      ],
      "CLOSED": [
        4806
      ],
      "Context": [
        5773
      ],
      "EIP712Base": [
        6844
      ],
      "ERC1155": [
        4652
      ],
      "ERC1155Tradable": [
        4791
      ],
      "ERC165": [
        5975
      ],
      "ERC20": [
        5751
      ],
      "HasAdmin": [
        3291
      ],
      "HoldingInfo": [
        3385
      ],
      "HouseOfPanda": [
        1398
      ],
      "ICoin": [
        3374
      ],
      "IERC1155": [
        5895
      ],
      "IERC1155MetadataURI": [
        5951
      ],
      "IERC1155Receiver": [
        5936
      ],
      "IERC165": [
        6728
      ],
      "IERC20": [
        4908
      ],
      "IERC20Metadata": [
        6716
      ],
      "IHasAdmin": [
        3235
      ],
      "IProjectMan": [
        4830
      ],
      "ISigVerifier": [
        3320
      ],
      "IStaker": [
        1504
      ],
      "MARKET_UNAVAILABLE": [
        4803
      ],
      "NOT_ACTIVE": [
        4797
      ],
      "NativeMetaTransaction": [
        6691
      ],
      "Ownable": [
        3531
      ],
      "OwnableDelegateProxy": [
        4661
      ],
      "PAUSED": [
        4809
      ],
      "ProjectInfo": [
        3414
      ],
      "ProxyRegistry": [
        4667
      ],
      "REWARD_TYPE_HOLDING": [
        1415
      ],
      "REWARD_TYPE_STAKING": [
        1418
      ],
      "ReentrancyGuard": [
        3571
      ],
      "SafeERC20": [
        3220
      ],
      "SafeMath": [
        6490
      ],
      "Sig": [
        3300
      ],
      "SigVerifier": [
        3366
      ],
      "StakeInfo": [
        3427
      ],
      "Staker": [
        2996
      ],
      "Strings": [
        6178
      ]
    },
    "id": 1399,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:18"
      },
      {
        "absolutePath": "/Users/patur/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1399,
        "sourceUnit": 3221,
        "src": "335:65:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/ICoin.sol",
        "file": "./interfaces/ICoin.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1399,
        "sourceUnit": 3375,
        "src": "402:32:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/types/ProjectInfo.sol",
        "file": "./types/ProjectInfo.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1399,
        "sourceUnit": 3415,
        "src": "435:33:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/types/HoldingInfo.sol",
        "file": "./types/HoldingInfo.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1399,
        "sourceUnit": 3386,
        "src": "469:33:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/types/StakeInfo.sol",
        "file": "./types/StakeInfo.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1399,
        "sourceUnit": 3428,
        "src": "503:31:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/HasAdmin.sol",
        "file": "./HasAdmin.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1399,
        "sourceUnit": 3292,
        "src": "535:24:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/SigVerifier.sol",
        "file": "./SigVerifier.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1399,
        "sourceUnit": 3367,
        "src": "560:27:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Staker.sol",
        "file": "./Staker.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1399,
        "sourceUnit": 2997,
        "src": "588:22:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10,
              "name": "ERC1155Tradable",
              "nameLocations": [
                "641:15:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4791,
              "src": "641:15:18"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "641:15:18"
          },
          {
            "baseName": {
              "id": 12,
              "name": "IProjectMan",
              "nameLocations": [
                "662:11:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4830,
              "src": "662:11:18"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "662:11:18"
          },
          {
            "baseName": {
              "id": 14,
              "name": "HasAdmin",
              "nameLocations": [
                "679:8:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3291,
              "src": "679:8:18"
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "679:8:18"
          },
          {
            "baseName": {
              "id": 16,
              "name": "SigVerifier",
              "nameLocations": [
                "693:11:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3366,
              "src": "693:11:18"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "693:11:18"
          },
          {
            "baseName": {
              "id": 18,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "710:15:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3571,
              "src": "710:15:18"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "710:15:18"
          }
        ],
        "canonicalName": "HouseOfPanda",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1398,
        "linearizedBaseContracts": [
          1398,
          3571,
          3366,
          3320,
          3291,
          3235,
          4830,
          4791,
          3531,
          6691,
          6844,
          6864,
          4652,
          5951,
          5895,
          5975,
          6728,
          5773
        ],
        "name": "HouseOfPanda",
        "nameLocation": "621:12:18",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 23,
            "libraryName": {
              "id": 20,
              "name": "SafeERC20",
              "nameLocations": [
                "738:9:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3220,
              "src": "738:9:18"
            },
            "nodeType": "UsingForDirective",
            "src": "732:26:18",
            "typeName": {
              "id": 22,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21,
                "name": "ICoin",
                "nameLocations": [
                  "752:5:18"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3374,
                "src": "752:5:18"
              },
              "referencedDeclaration": 3374,
              "src": "752:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICoin_$3374",
                "typeString": "contract ICoin"
              }
            }
          },
          {
            "global": false,
            "id": 26,
            "libraryName": {
              "id": 24,
              "name": "Strings",
              "nameLocations": [
                "769:7:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6178,
              "src": "769:7:18"
            },
            "nodeType": "UsingForDirective",
            "src": "763:26:18",
            "typeName": {
              "id": 25,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "781:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 29,
            "mutability": "mutable",
            "name": "stableCoin",
            "nameLocation": "810:10:18",
            "nodeType": "VariableDeclaration",
            "scope": 1398,
            "src": "795:25:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ICoin_$3374",
              "typeString": "contract ICoin"
            },
            "typeName": {
              "id": 28,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27,
                "name": "ICoin",
                "nameLocations": [
                  "795:5:18"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3374,
                "src": "795:5:18"
              },
              "referencedDeclaration": 3374,
              "src": "795:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICoin_$3374",
                "typeString": "contract ICoin"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "63184726",
            "id": 31,
            "mutability": "mutable",
            "name": "projectIndex",
            "nameLocation": "840:12:18",
            "nodeType": "VariableDeclaration",
            "scope": 1398,
            "src": "826:26:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 30,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "826:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5ebaf1db",
            "id": 34,
            "mutability": "mutable",
            "name": "staker",
            "nameLocation": "873:6:18",
            "nodeType": "VariableDeclaration",
            "scope": 1398,
            "src": "858:21:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStaker_$1504",
              "typeString": "contract IStaker"
            },
            "typeName": {
              "id": 33,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32,
                "name": "IStaker",
                "nameLocations": [
                  "858:7:18"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1504,
                "src": "858:7:18"
              },
              "referencedDeclaration": 1504,
              "src": "858:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStaker_$1504",
                "typeString": "contract IStaker"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 38,
            "mutability": "mutable",
            "name": "_supplyFor",
            "nameLocation": "921:10:18",
            "nodeType": "VariableDeclaration",
            "scope": 1398,
            "src": "886:45:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint32_$_t_uint128_$",
              "typeString": "mapping(uint32 => uint128)"
            },
            "typeName": {
              "id": 37,
              "keyType": {
                "id": 35,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "894:6:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "nodeType": "Mapping",
              "src": "886:26:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint32_$_t_uint128_$",
                "typeString": "mapping(uint32 => uint128)"
              },
              "valueType": {
                "id": 36,
                "name": "uint128",
                "nodeType": "ElementaryTypeName",
                "src": "904:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "5c975abb",
            "id": 41,
            "mutability": "mutable",
            "name": "paused",
            "nameLocation": "950:6:18",
            "nodeType": "VariableDeclaration",
            "scope": 1398,
            "src": "938:26:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 39,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "938:4:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 40,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "959:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "6f053dfbe49c7e82e9b2091b20e94c3bb32de62f97ed3dffe0213a33c0af15b3",
            "id": 45,
            "name": "ProjectCreated",
            "nameLocation": "977:14:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1007:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "992:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "991:19:18"
            },
            "src": "971:40:18"
          },
          {
            "anonymous": false,
            "eventSelector": "1e59e47af4d9b02977749192de0a0e8c70ae8ef5cf99cebb7e2f707571fd0ab7",
            "id": 51,
            "name": "ProjectStatusChanged",
            "nameLocation": "1022:20:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "1058:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "1043:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "1084:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "1069:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "bytes1",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1042:49:18"
            },
            "src": "1016:76:18"
          },
          {
            "anonymous": false,
            "eventSelector": "da1373dcde55aceb480442ee22608e2601f3639e5d1e81e6f9dcd8d231607899",
            "id": 61,
            "name": "Mint",
            "nameLocation": "1103:4:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "1132:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "1117:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "qty",
                  "nameLocation": "1167:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "1151:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1151:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "1188:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "1180:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1220:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "1204:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1204:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1107:121:18"
            },
            "src": "1097:132:18"
          },
          {
            "anonymous": false,
            "eventSelector": "51dc334a9a8f008638bdeb6c9a6f4aabf63ff2510e4be9998b7ecf63010ab8aa",
            "id": 69,
            "name": "Burn",
            "nameLocation": "1240:4:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "1269:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1254:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "qty",
                  "nameLocation": "1304:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1288:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "burner",
                  "nameLocation": "1333:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1317:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1317:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1244:101:18"
            },
            "src": "1234:112:18"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "2044:147:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 95,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2084:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HouseOfPanda_$1398",
                              "typeString": "contract HouseOfPanda"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HouseOfPanda_$1398",
                              "typeString": "contract HouseOfPanda"
                            }
                          ],
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2076:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 93,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2076:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2076:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 90,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "2054:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStaker_$1504",
                          "typeString": "contract IStaker"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2062:13:18",
                      "memberName": "setProjectMan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1423,
                      "src": "2054:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2054:36:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "2054:36:18"
                },
                {
                  "expression": {
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "2100:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStaker_$1504",
                        "typeString": "contract IStaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 100,
                      "name": "_staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "2109:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStaker_$1504",
                        "typeString": "contract IStaker"
                      }
                    },
                    "src": "2100:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStaker_$1504",
                      "typeString": "contract IStaker"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "2100:16:18"
                },
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103,
                      "name": "stableCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "2126:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICoin_$3374",
                        "typeString": "contract ICoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 105,
                          "name": "_stableCoin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "2145:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 104,
                        "name": "ICoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3374,
                        "src": "2139:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ICoin_$3374_$",
                          "typeString": "type(contract ICoin)"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2139:18:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICoin_$3374",
                        "typeString": "contract ICoin"
                      }
                    },
                    "src": "2126:31:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICoin_$3374",
                      "typeString": "contract ICoin"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "2126:31:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110,
                        "name": "_admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "2177:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 109,
                      "name": "_setAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3277
                      ],
                      "referencedDeclaration": 3277,
                      "src": "2167:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2167:17:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "2167:17:18"
                }
              ]
            },
            "documentation": {
              "id": 70,
              "nodeType": "StructuredDocumentation",
              "src": "1352:459:18",
              "text": " Constructor for the HouseOfPanda contract, which inherits from the\n ERC1155Tradable and Stake contracts.\n Set the contract's base URI and proxy address and set the admin address.\n @param _admin The contract's admin address.\n @param _baseUri The contract's base URI.\n @param _stableCoin The address of the stablecoin for calculating rewards.\n @param _proxyAddress The address of the proxy contract."
            },
            "id": 114,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "486f757365206f662050616e6461",
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1991:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ce43c022f1eeaa1cae0d6134c9bd982a0323ae791f62cce14dc0c0f2abf172c8",
                      "typeString": "literal_string \"House of Panda\""
                    },
                    "value": "House of Panda"
                  },
                  {
                    "hexValue": "484f504e4654",
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2009:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6f61f94811d14c0b0c9afd5ec7617f6ff7e9e95b403dd77ae1dc657d9e0474b0",
                      "typeString": "literal_string \"HOPNFT\""
                    },
                    "value": "HOPNFT"
                  },
                  {
                    "id": 86,
                    "name": "_baseUri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 74,
                    "src": "2019:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 87,
                    "name": "_proxyAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 81,
                    "src": "2029:13:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 88,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 83,
                  "name": "ERC1155Tradable",
                  "nameLocations": [
                    "1975:15:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4791,
                  "src": "1975:15:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "1975:68:18"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "1845:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1837:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1837:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "_baseUri",
                  "nameLocation": "1875:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1861:22:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1861:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "_stableCoin",
                  "nameLocation": "1901:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1893:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1893:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "1930:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1922:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStaker_$1504",
                    "typeString": "contract IStaker"
                  },
                  "typeName": {
                    "id": 78,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 77,
                      "name": "IStaker",
                      "nameLocations": [
                        "1922:7:18"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1504,
                      "src": "1922:7:18"
                    },
                    "referencedDeclaration": 1504,
                    "src": "1922:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStaker_$1504",
                      "typeString": "contract IStaker"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "_proxyAddress",
                  "nameLocation": "1955:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1947:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1947:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1827:147:18"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2044:0:18"
            },
            "scope": 1398,
            "src": "1816:375:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 125,
              "nodeType": "Block",
              "src": "2256:37:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 122,
                        "name": "newAdmin_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "2276:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 121,
                      "name": "_setAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3277
                      ],
                      "referencedDeclaration": 3277,
                      "src": "2266:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2266:20:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "2266:20:18"
                }
              ]
            },
            "functionSelector": "8f283970",
            "id": 126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 119,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 118,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2246:9:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3474,
                  "src": "2246:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "2246:9:18"
              }
            ],
            "name": "changeAdmin",
            "nameLocation": "2206:11:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "newAdmin_",
                  "nameLocation": "2226:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "2218:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2218:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2217:19:18"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2256:0:18"
            },
            "scope": 1398,
            "src": "2197:96:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "2327:98:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 130,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2354:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2358:6:18",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2354:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 129,
                            "name": "_isAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3290
                            ],
                            "referencedDeclaration": 3290,
                            "src": "2345:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2345:20:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 134,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2378:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2382:6:18",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2378:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 133,
                            "name": "_isOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "2369:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2369:20:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2345:44:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2161646d696e20216f776e6572",
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2391:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd6764a9e7eafb7e8794369ceed031aace7adcaf3d3d81be9fc0542819d46e52",
                          "typeString": "literal_string \"!admin !owner\""
                        },
                        "value": "!admin !owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd6764a9e7eafb7e8794369ceed031aace7adcaf3d3d81be9fc0542819d46e52",
                          "typeString": "literal_string \"!admin !owner\""
                        }
                      ],
                      "id": 128,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2337:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2337:70:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "2337:70:18"
                },
                {
                  "id": 141,
                  "nodeType": "PlaceholderStatement",
                  "src": "2417:1:18"
                }
              ]
            },
            "id": 143,
            "name": "onlyAdminOrOwner",
            "nameLocation": "2308:16:18",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2324:2:18"
            },
            "src": "2299:126:18",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "2744:42:18",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 151,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3460,
                        "src": "2761:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2761:7:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 153,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 146,
                      "src": "2772:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2761:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 150,
                  "id": 155,
                  "nodeType": "Return",
                  "src": "2754:25:18"
                }
              ]
            },
            "documentation": {
              "id": 144,
              "nodeType": "StructuredDocumentation",
              "src": "2431:244:18",
              "text": " This function checks if the parameter 'account' is the owner of the contract.\n @param account The address of the account to be checked.\n @return {bool} A boolean indicating whether the account is the owner or not."
            },
            "id": 157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isOwner",
            "nameLocation": "2689:8:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2706:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "2698:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2698:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2697:17:18"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "2738:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2738:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2737:6:18"
            },
            "scope": 1398,
            "src": "2680:106:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "2856:38:18",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 166,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "2873:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "id": 167,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "2878:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "src": "2873:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 170,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "2886:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2873:14:18",
                    "trueExpression": {
                      "id": 169,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "2882:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 165,
                  "id": 172,
                  "nodeType": "Return",
                  "src": "2866:21:18"
                }
              ]
            },
            "id": 174,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "min",
            "nameLocation": "2801:3:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "2812:1:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "2805:8:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2805:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "2822:1:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "2815:8:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2815:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2804:20:18"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "2848:6:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2848:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2847:8:18"
            },
            "scope": 1398,
            "src": "2792:102:18",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4495
            ],
            "body": {
              "id": 466,
              "nodeType": "Block",
              "src": "4041:2398:18",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 193,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "4055:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4071:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4063:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 194,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4063:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4063:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4055:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 199,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "4077:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4091:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4083:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 200,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4083:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4083:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4077:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4055:38:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 208,
                  "nodeType": "IfStatement",
                  "src": "4051:75:18",
                  "trueBody": {
                    "id": 207,
                    "nodeType": "Block",
                    "src": "4095:31:18",
                    "statements": [
                      {
                        "functionReturnParameters": 192,
                        "id": 206,
                        "nodeType": "Return",
                        "src": "4109:7:18"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    211
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 211,
                      "mutability": "mutable",
                      "name": "holding",
                      "nameLocation": "4155:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 466,
                      "src": "4136:26:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                        "typeString": "struct HoldingInfo"
                      },
                      "typeName": {
                        "id": 210,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 209,
                          "name": "HoldingInfo",
                          "nameLocations": [
                            "4136:11:18"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3385,
                          "src": "4136:11:18"
                        },
                        "referencedDeclaration": 3385,
                        "src": "4136:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_HoldingInfo_$3385_storage_ptr",
                          "typeString": "struct HoldingInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 212,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4136:26:18"
                },
                {
                  "body": {
                    "id": 464,
                    "nodeType": "Block",
                    "src": "4214:2219:18",
                    "statements": [
                      {
                        "assignments": [
                          225
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 225,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "4236:2:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 464,
                            "src": "4228:10:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 224,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4228:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 229,
                        "initialValue": {
                          "baseExpression": {
                            "id": 226,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 184,
                            "src": "4241:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 228,
                          "indexExpression": {
                            "id": 227,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "4245:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4241:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4228:19:18"
                      },
                      {
                        "assignments": [
                          231
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 231,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "4269:6:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 464,
                            "src": "4261:14:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 230,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4261:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 235,
                        "initialValue": {
                          "baseExpression": {
                            "id": 232,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 187,
                            "src": "4278:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 234,
                          "indexExpression": {
                            "id": 233,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "4286:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4278:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4261:27:18"
                      },
                      {
                        "assignments": [
                          238
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 238,
                            "mutability": "mutable",
                            "name": "project",
                            "nameLocation": "4322:7:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 464,
                            "src": "4303:26:18",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                              "typeString": "struct ProjectInfo"
                            },
                            "typeName": {
                              "id": 237,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 236,
                                "name": "ProjectInfo",
                                "nameLocations": [
                                  "4303:11:18"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3414,
                                "src": "4303:11:18"
                              },
                              "referencedDeclaration": 3414,
                              "src": "4303:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ProjectInfo_$3414_storage_ptr",
                                "typeString": "struct ProjectInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 245,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 242,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 225,
                                  "src": "4351:2:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 241,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4344:6:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint32_$",
                                  "typeString": "type(uint32)"
                                },
                                "typeName": {
                                  "id": 240,
                                  "name": "uint32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4344:6:18",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4344:10:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 239,
                            "name": "_getProject",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 614,
                            "src": "4332:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_struct$_ProjectInfo_$3414_memory_ptr_$",
                              "typeString": "function (uint32) view returns (struct ProjectInfo memory)"
                            }
                          },
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4332:23:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                            "typeString": "struct ProjectInfo memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4303:52:18"
                      },
                      {
                        "assignments": [
                          248
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 248,
                            "mutability": "mutable",
                            "name": "sti",
                            "nameLocation": "4438:3:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 464,
                            "src": "4421:20:18",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakeInfo_$3427_memory_ptr",
                              "typeString": "struct StakeInfo"
                            },
                            "typeName": {
                              "id": 247,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 246,
                                "name": "StakeInfo",
                                "nameLocations": [
                                  "4421:9:18"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3427,
                                "src": "4421:9:18"
                              },
                              "referencedDeclaration": 3427,
                              "src": "4421:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$3427_storage_ptr",
                                "typeString": "struct StakeInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 257,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 251,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 179,
                              "src": "4469:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 254,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 225,
                                  "src": "4482:2:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 253,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4475:6:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint32_$",
                                  "typeString": "type(uint32)"
                                },
                                "typeName": {
                                  "id": 252,
                                  "name": "uint32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4475:6:18",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4475:10:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "id": 249,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "4444:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStaker_$1504",
                                "typeString": "contract IStaker"
                              }
                            },
                            "id": 250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4451:17:18",
                            "memberName": "getStakingInfoRaw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1473,
                            "src": "4444:24:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint32_$returns$_t_struct$_StakeInfo_$3427_memory_ptr_$",
                              "typeString": "function (address,uint32) view external returns (struct StakeInfo memory)"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4444:42:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakeInfo_$3427_memory_ptr",
                            "typeString": "struct StakeInfo memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4421:65:18"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 258,
                              "name": "sti",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 248,
                              "src": "4504:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$3427_memory_ptr",
                                "typeString": "struct StakeInfo memory"
                              }
                            },
                            "id": 259,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4508:3:18",
                            "memberName": "qty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3418,
                            "src": "4504:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4514:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4504:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 279,
                        "nodeType": "IfStatement",
                        "src": "4500:120:18",
                        "trueBody": {
                          "id": 278,
                          "nodeType": "Block",
                          "src": "4517:103:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 274,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 271,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "id": 264,
                                            "name": "from",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 179,
                                            "src": "4553:4:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "id": 267,
                                                "name": "id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 225,
                                                "src": "4566:2:18",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 266,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "4559:6:18",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint32_$",
                                                "typeString": "type(uint32)"
                                              },
                                              "typeName": {
                                                "id": 265,
                                                "name": "uint32",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4559:6:18",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 268,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4559:10:18",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          ],
                                          "id": 263,
                                          "name": "balanceOf",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3687,
                                          "src": "4543:9:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                            "typeString": "function (address,uint256) view returns (uint256)"
                                          }
                                        },
                                        "id": 269,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4543:27:18",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 270,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 231,
                                        "src": "4573:6:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4543:36:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 272,
                                        "name": "sti",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 248,
                                        "src": "4583:3:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_StakeInfo_$3427_memory_ptr",
                                          "typeString": "struct StakeInfo memory"
                                        }
                                      },
                                      "id": 273,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4587:3:18",
                                      "memberName": "qty",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3418,
                                      "src": "4583:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "src": "4543:47:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "696e207374616b696e67",
                                    "id": 275,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4592:12:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c03900dec97dc9ad2ac6f1c455db30f16e3247a2bf6c006c4468316b2e757bec",
                                      "typeString": "literal_string \"in staking\""
                                    },
                                    "value": "in staking"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c03900dec97dc9ad2ac6f1c455db30f16e3247a2bf6c006c4468316b2e757bec",
                                      "typeString": "literal_string \"in staking\""
                                    }
                                  ],
                                  "id": 262,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "4535:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 276,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4535:70:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 277,
                              "nodeType": "ExpressionStatement",
                              "src": "4535:70:18"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          281
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 281,
                            "mutability": "mutable",
                            "name": "prevStartTime",
                            "nameLocation": "4641:13:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 464,
                            "src": "4634:20:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "typeName": {
                              "id": 280,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "4634:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 287,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 284,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "4664:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4670:9:18",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "4664:15:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4657:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
                              "id": 282,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "4657:6:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4657:23:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4634:46:18"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 288,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 179,
                            "src": "4699:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4715:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4707:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 289,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4707:7:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4707:10:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4699:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 380,
                        "nodeType": "IfStatement",
                        "src": "4695:963:18",
                        "trueBody": {
                          "id": 379,
                          "nodeType": "Block",
                          "src": "4719:939:18",
                          "statements": [
                            {
                              "expression": {
                                "id": 303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 294,
                                  "name": "holding",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 211,
                                  "src": "4737:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                    "typeString": "struct HoldingInfo memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 297,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 179,
                                      "src": "4772:4:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 300,
                                          "name": "id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 225,
                                          "src": "4785:2:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 299,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4778:6:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint32_$",
                                          "typeString": "type(uint32)"
                                        },
                                        "typeName": {
                                          "id": 298,
                                          "name": "uint32",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4778:6:18",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 301,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4778:10:18",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    ],
                                    "expression": {
                                      "id": 295,
                                      "name": "staker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 34,
                                      "src": "4747:6:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IStaker_$1504",
                                        "typeString": "contract IStaker"
                                      }
                                    },
                                    "id": 296,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4754:17:18",
                                    "memberName": "getHoldingInfoRaw",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1443,
                                    "src": "4747:24:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$_t_uint32_$returns$_t_struct$_HoldingInfo_$3385_memory_ptr_$",
                                      "typeString": "function (address,uint32) view external returns (struct HoldingInfo memory)"
                                    }
                                  },
                                  "id": 302,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4747:42:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                    "typeString": "struct HoldingInfo memory"
                                  }
                                },
                                "src": "4737:52:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                  "typeString": "struct HoldingInfo memory"
                                }
                              },
                              "id": 304,
                              "nodeType": "ExpressionStatement",
                              "src": "4737:52:18"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 305,
                                    "name": "holding",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 211,
                                    "src": "4875:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                      "typeString": "struct HoldingInfo memory"
                                    }
                                  },
                                  "id": 306,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4883:3:18",
                                  "memberName": "qty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3378,
                                  "src": "4875:11:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 307,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4889:1:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4875:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 352,
                              "nodeType": "IfStatement",
                              "src": "4871:538:18",
                              "trueBody": {
                                "id": 351,
                                "nodeType": "Block",
                                "src": "4892:517:18",
                                "statements": [
                                  {
                                    "assignments": [
                                      310
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 310,
                                        "mutability": "mutable",
                                        "name": "endTime",
                                        "nameLocation": "4922:7:18",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 351,
                                        "src": "4915:14:18",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        },
                                        "typeName": {
                                          "id": 309,
                                          "name": "uint64",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4915:6:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint64",
                                            "typeString": "uint64"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 320,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 314,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "4943:5:18",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 315,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "4949:9:18",
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "src": "4943:15:18",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 313,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "4936:6:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint64_$",
                                              "typeString": "type(uint64)"
                                            },
                                            "typeName": {
                                              "id": 312,
                                              "name": "uint64",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "4936:6:18",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 316,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4936:23:18",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint64",
                                            "typeString": "uint64"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 317,
                                            "name": "project",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 238,
                                            "src": "4961:7:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                                              "typeString": "struct ProjectInfo memory"
                                            }
                                          },
                                          "id": 318,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "4969:7:18",
                                          "memberName": "endTime",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3413,
                                          "src": "4961:15:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint64",
                                            "typeString": "uint64"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint64",
                                            "typeString": "uint64"
                                          },
                                          {
                                            "typeIdentifier": "t_uint64",
                                            "typeString": "uint64"
                                          }
                                        ],
                                        "id": 311,
                                        "name": "min",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 174,
                                        "src": "4932:3:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint64_$_t_uint64_$returns$_t_uint64_$",
                                          "typeString": "function (uint64,uint64) pure returns (uint64)"
                                        }
                                      },
                                      "id": 319,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4932:45:18",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "4915:62:18"
                                  },
                                  {
                                    "expression": {
                                      "id": 325,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 321,
                                          "name": "holding",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 211,
                                          "src": "5000:7:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                            "typeString": "struct HoldingInfo memory"
                                          }
                                        },
                                        "id": 323,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "5008:3:18",
                                        "memberName": "qty",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3378,
                                        "src": "5000:11:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "-=",
                                      "rightHandSide": {
                                        "id": 324,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 231,
                                        "src": "5015:6:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5000:21:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 326,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5000:21:18"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      },
                                      "id": 330,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 327,
                                        "name": "endTime",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 310,
                                        "src": "5047:7:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 328,
                                          "name": "holding",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 211,
                                          "src": "5057:7:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                            "typeString": "struct HoldingInfo memory"
                                          }
                                        },
                                        "id": 329,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5065:9:18",
                                        "memberName": "startTime",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3380,
                                        "src": "5057:17:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      },
                                      "src": "5047:27:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 350,
                                    "nodeType": "IfStatement",
                                    "src": "5043:348:18",
                                    "trueBody": {
                                      "id": 349,
                                      "nodeType": "Block",
                                      "src": "5076:315:18",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 347,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "expression": {
                                                "id": 331,
                                                "name": "holding",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 211,
                                                "src": "5102:7:18",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                                  "typeString": "struct HoldingInfo memory"
                                                }
                                              },
                                              "id": 333,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "memberLocation": "5110:12:18",
                                              "memberName": "accumRewards",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 3382,
                                              "src": "5102:20:18",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "+=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 340,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "expression": {
                                                      "id": 336,
                                                      "name": "holding",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 211,
                                                      "src": "5179:7:18",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                                        "typeString": "struct HoldingInfo memory"
                                                      }
                                                    },
                                                    "id": 337,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "5187:3:18",
                                                    "memberName": "qty",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 3378,
                                                    "src": "5179:11:18",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "expression": {
                                                      "id": 338,
                                                      "name": "project",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 238,
                                                      "src": "5193:7:18",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                                                        "typeString": "struct ProjectInfo memory"
                                                      }
                                                    },
                                                    "id": 339,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "5201:5:18",
                                                    "memberName": "price",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 3397,
                                                    "src": "5193:13:18",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "src": "5179:27:18",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                {
                                                  "expression": {
                                                    "id": 341,
                                                    "name": "holding",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 211,
                                                    "src": "5236:7:18",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                                      "typeString": "struct HoldingInfo memory"
                                                    }
                                                  },
                                                  "id": 342,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberLocation": "5244:9:18",
                                                  "memberName": "startTime",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 3380,
                                                  "src": "5236:17:18",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint64",
                                                    "typeString": "uint64"
                                                  }
                                                },
                                                {
                                                  "id": 343,
                                                  "name": "endTime",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 310,
                                                  "src": "5283:7:18",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint64",
                                                    "typeString": "uint64"
                                                  }
                                                },
                                                {
                                                  "expression": {
                                                    "id": 344,
                                                    "name": "project",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 238,
                                                    "src": "5320:7:18",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                                                      "typeString": "struct ProjectInfo memory"
                                                    }
                                                  },
                                                  "id": 345,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberLocation": "5328:3:18",
                                                  "memberName": "apy",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 3407,
                                                  "src": "5320:11:18",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_uint64",
                                                    "typeString": "uint64"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_uint64",
                                                    "typeString": "uint64"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "expression": {
                                                  "id": 334,
                                                  "name": "staker",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 34,
                                                  "src": "5126:6:18",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IStaker_$1504",
                                                    "typeString": "contract IStaker"
                                                  }
                                                },
                                                "id": 335,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "5133:16:18",
                                                "memberName": "calculateRewards",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1486,
                                                "src": "5126:23:18",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_uint64_$_t_uint64_$_t_uint256_$returns$_t_uint256_$",
                                                  "typeString": "function (uint256,uint64,uint64,uint256) pure external returns (uint256)"
                                                }
                                              },
                                              "id": 346,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "5126:242:18",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "5102:266:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 348,
                                          "nodeType": "ExpressionStatement",
                                          "src": "5102:266:18"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 353,
                                  "name": "prevStartTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 281,
                                  "src": "5427:13:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 354,
                                    "name": "holding",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 211,
                                    "src": "5443:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                      "typeString": "struct HoldingInfo memory"
                                    }
                                  },
                                  "id": 355,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5451:9:18",
                                  "memberName": "startTime",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3380,
                                  "src": "5443:17:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "src": "5427:33:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "id": 357,
                              "nodeType": "ExpressionStatement",
                              "src": "5427:33:18"
                            },
                            {
                              "expression": {
                                "id": 366,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 358,
                                    "name": "holding",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 211,
                                    "src": "5479:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                      "typeString": "struct HoldingInfo memory"
                                    }
                                  },
                                  "id": 360,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "5487:9:18",
                                  "memberName": "startTime",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3380,
                                  "src": "5479:17:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 363,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "5506:5:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 364,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5512:9:18",
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "src": "5506:15:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 362,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5499:6:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint64_$",
                                      "typeString": "type(uint64)"
                                    },
                                    "typeName": {
                                      "id": 361,
                                      "name": "uint64",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5499:6:18",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 365,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5499:23:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "src": "5479:43:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "id": 367,
                              "nodeType": "ExpressionStatement",
                              "src": "5479:43:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 371,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 179,
                                    "src": "5617:4:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 374,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 225,
                                        "src": "5630:2:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 373,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5623:6:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint32_$",
                                        "typeString": "type(uint32)"
                                      },
                                      "typeName": {
                                        "id": 372,
                                        "name": "uint32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5623:6:18",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 375,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5623:10:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  {
                                    "id": 376,
                                    "name": "holding",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 211,
                                    "src": "5635:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                      "typeString": "struct HoldingInfo memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                      "typeString": "struct HoldingInfo memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 368,
                                    "name": "staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34,
                                    "src": "5591:6:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStaker_$1504",
                                      "typeString": "contract IStaker"
                                    }
                                  },
                                  "id": 370,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5598:18:18",
                                  "memberName": "setHoldingInfoData",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1453,
                                  "src": "5591:25:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint32_$_t_struct$_HoldingInfo_$3385_memory_ptr_$returns$__$",
                                    "typeString": "function (address,uint32,struct HoldingInfo memory) external"
                                  }
                                },
                                "id": 377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5591:52:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 378,
                              "nodeType": "ExpressionStatement",
                              "src": "5591:52:18"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 381,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 181,
                            "src": "5676:2:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5690:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5682:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 382,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5682:7:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5682:10:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5676:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 463,
                        "nodeType": "IfStatement",
                        "src": "5672:751:18",
                        "trueBody": {
                          "id": 462,
                          "nodeType": "Block",
                          "src": "5694:729:18",
                          "statements": [
                            {
                              "expression": {
                                "id": 396,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 387,
                                  "name": "holding",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 211,
                                  "src": "5760:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                    "typeString": "struct HoldingInfo memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 390,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 181,
                                      "src": "5795:2:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 393,
                                          "name": "id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 225,
                                          "src": "5806:2:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 392,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "5799:6:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint32_$",
                                          "typeString": "type(uint32)"
                                        },
                                        "typeName": {
                                          "id": 391,
                                          "name": "uint32",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5799:6:18",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 394,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5799:10:18",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    ],
                                    "expression": {
                                      "id": 388,
                                      "name": "staker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 34,
                                      "src": "5770:6:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IStaker_$1504",
                                        "typeString": "contract IStaker"
                                      }
                                    },
                                    "id": 389,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5777:17:18",
                                    "memberName": "getHoldingInfoRaw",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1443,
                                    "src": "5770:24:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$_t_uint32_$returns$_t_struct$_HoldingInfo_$3385_memory_ptr_$",
                                      "typeString": "function (address,uint32) view external returns (struct HoldingInfo memory)"
                                    }
                                  },
                                  "id": 395,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5770:40:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                    "typeString": "struct HoldingInfo memory"
                                  }
                                },
                                "src": "5760:50:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                  "typeString": "struct HoldingInfo memory"
                                }
                              },
                              "id": 397,
                              "nodeType": "ExpressionStatement",
                              "src": "5760:50:18"
                            },
                            {
                              "assignments": [
                                399
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 399,
                                  "mutability": "mutable",
                                  "name": "endTime",
                                  "nameLocation": "5836:7:18",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 462,
                                  "src": "5829:14:18",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  },
                                  "typeName": {
                                    "id": 398,
                                    "name": "uint64",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5829:6:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 409,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 403,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "5857:5:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 404,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5863:9:18",
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "5857:15:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 402,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5850:6:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint64_$",
                                        "typeString": "type(uint64)"
                                      },
                                      "typeName": {
                                        "id": 401,
                                        "name": "uint64",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5850:6:18",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 405,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5850:23:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 406,
                                      "name": "project",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 238,
                                      "src": "5875:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                                        "typeString": "struct ProjectInfo memory"
                                      }
                                    },
                                    "id": 407,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5883:7:18",
                                    "memberName": "endTime",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3413,
                                    "src": "5875:15:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    },
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  ],
                                  "id": 400,
                                  "name": "min",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 174,
                                  "src": "5846:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint64_$_t_uint64_$returns$_t_uint64_$",
                                    "typeString": "function (uint64,uint64) pure returns (uint64)"
                                  }
                                },
                                "id": 408,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5846:45:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5829:62:18"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 418,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 413,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 410,
                                      "name": "holding",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 211,
                                      "src": "5914:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                        "typeString": "struct HoldingInfo memory"
                                      }
                                    },
                                    "id": 411,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5922:3:18",
                                    "memberName": "qty",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3378,
                                    "src": "5914:11:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 412,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5928:1:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "5914:15:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  },
                                  "id": 417,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 414,
                                    "name": "endTime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 399,
                                    "src": "5933:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 415,
                                      "name": "holding",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 211,
                                      "src": "5943:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                        "typeString": "struct HoldingInfo memory"
                                      }
                                    },
                                    "id": 416,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5951:9:18",
                                    "memberName": "startTime",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3380,
                                    "src": "5943:17:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "src": "5933:27:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5914:46:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 438,
                              "nodeType": "IfStatement",
                              "src": "5910:339:18",
                              "trueBody": {
                                "id": 437,
                                "nodeType": "Block",
                                "src": "5962:287:18",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 435,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 419,
                                          "name": "holding",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 211,
                                          "src": "5984:7:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                            "typeString": "struct HoldingInfo memory"
                                          }
                                        },
                                        "id": 421,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "5992:12:18",
                                        "memberName": "accumRewards",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3382,
                                        "src": "5984:20:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 428,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "id": 424,
                                                "name": "holding",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 211,
                                                "src": "6057:7:18",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                                  "typeString": "struct HoldingInfo memory"
                                                }
                                              },
                                              "id": 425,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "6065:3:18",
                                              "memberName": "qty",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 3378,
                                              "src": "6057:11:18",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 426,
                                                "name": "project",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 238,
                                                "src": "6071:7:18",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                                                  "typeString": "struct ProjectInfo memory"
                                                }
                                              },
                                              "id": 427,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "6079:5:18",
                                              "memberName": "price",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 3397,
                                              "src": "6071:13:18",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "6057:27:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "id": 429,
                                              "name": "holding",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 211,
                                              "src": "6110:7:18",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                                "typeString": "struct HoldingInfo memory"
                                              }
                                            },
                                            "id": 430,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "6118:9:18",
                                            "memberName": "startTime",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3380,
                                            "src": "6110:17:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint64",
                                              "typeString": "uint64"
                                            }
                                          },
                                          {
                                            "id": 431,
                                            "name": "endTime",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 399,
                                            "src": "6153:7:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint64",
                                              "typeString": "uint64"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "id": 432,
                                              "name": "project",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 238,
                                              "src": "6186:7:18",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                                                "typeString": "struct ProjectInfo memory"
                                              }
                                            },
                                            "id": 433,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "6194:3:18",
                                            "memberName": "apy",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3407,
                                            "src": "6186:11:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint64",
                                              "typeString": "uint64"
                                            },
                                            {
                                              "typeIdentifier": "t_uint64",
                                              "typeString": "uint64"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 422,
                                            "name": "staker",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 34,
                                            "src": "6008:6:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IStaker_$1504",
                                              "typeString": "contract IStaker"
                                            }
                                          },
                                          "id": 423,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "6015:16:18",
                                          "memberName": "calculateRewards",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1486,
                                          "src": "6008:23:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_uint64_$_t_uint64_$_t_uint256_$returns$_t_uint256_$",
                                            "typeString": "function (uint256,uint64,uint64,uint256) pure external returns (uint256)"
                                          }
                                        },
                                        "id": 434,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6008:222:18",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5984:246:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 436,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5984:246:18"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 443,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 439,
                                    "name": "holding",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 211,
                                    "src": "6267:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                      "typeString": "struct HoldingInfo memory"
                                    }
                                  },
                                  "id": 441,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "6275:3:18",
                                  "memberName": "qty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3378,
                                  "src": "6267:11:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 442,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 231,
                                  "src": "6282:6:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6267:21:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 444,
                              "nodeType": "ExpressionStatement",
                              "src": "6267:21:18"
                            },
                            {
                              "expression": {
                                "id": 449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 445,
                                    "name": "holding",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 211,
                                    "src": "6306:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                      "typeString": "struct HoldingInfo memory"
                                    }
                                  },
                                  "id": 447,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "6314:9:18",
                                  "memberName": "startTime",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3380,
                                  "src": "6306:17:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 448,
                                  "name": "prevStartTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 281,
                                  "src": "6326:13:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "src": "6306:33:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "id": 450,
                              "nodeType": "ExpressionStatement",
                              "src": "6306:33:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 454,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 181,
                                    "src": "6384:2:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 457,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 225,
                                        "src": "6395:2:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 456,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6388:6:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint32_$",
                                        "typeString": "type(uint32)"
                                      },
                                      "typeName": {
                                        "id": 455,
                                        "name": "uint32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6388:6:18",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 458,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6388:10:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  {
                                    "id": 459,
                                    "name": "holding",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 211,
                                    "src": "6400:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                      "typeString": "struct HoldingInfo memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                                      "typeString": "struct HoldingInfo memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 451,
                                    "name": "staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34,
                                    "src": "6358:6:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStaker_$1504",
                                      "typeString": "contract IStaker"
                                    }
                                  },
                                  "id": 453,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6365:18:18",
                                  "memberName": "setHoldingInfoData",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1453,
                                  "src": "6358:25:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint32_$_t_struct$_HoldingInfo_$3385_memory_ptr_$returns$__$",
                                    "typeString": "function (address,uint32,struct HoldingInfo memory) external"
                                  }
                                },
                                "id": 460,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6358:50:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 461,
                              "nodeType": "ExpressionStatement",
                              "src": "6358:50:18"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 217,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "4193:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 218,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "4197:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4201:6:18",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4197:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4193:14:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 465,
                  "initializationExpression": {
                    "assignments": [
                      214
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 214,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4186:1:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "4178:9:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 213,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4178:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 216,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4190:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4178:13:18"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4209:3:18",
                      "subExpression": {
                        "id": 221,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "4209:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 223,
                    "nodeType": "ExpressionStatement",
                    "src": "4209:3:18"
                  },
                  "nodeType": "ForStatement",
                  "src": "4173:2260:18"
                }
              ]
            },
            "documentation": {
              "id": 175,
              "nodeType": "StructuredDocumentation",
              "src": "2900:923:18",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 467,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "3837:20:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 191,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4032:8:18"
            },
            "parameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3875:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 467,
                  "src": "3867:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3867:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3901:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 467,
                  "src": "3893:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3893:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3923:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 467,
                  "src": "3915:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3915:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 184,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "3952:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 467,
                  "src": "3935:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 182,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3935:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 183,
                    "nodeType": "ArrayTypeName",
                    "src": "3935:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "3982:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 467,
                  "src": "3965:24:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 185,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3965:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 186,
                    "nodeType": "ArrayTypeName",
                    "src": "3965:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4012:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 467,
                  "src": "3999:17:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3999:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3857:165:18"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4041:0:18"
            },
            "scope": 1398,
            "src": "3828:2611:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 555,
              "nodeType": "Block",
              "src": "7435:735:18",
              "statements": [
                {
                  "condition": {
                    "id": 493,
                    "name": "authorizedOnly",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 476,
                    "src": "7449:14:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 502,
                  "nodeType": "IfStatement",
                  "src": "7445:74:18",
                  "trueBody": {
                    "id": 501,
                    "nodeType": "Block",
                    "src": "7465:54:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 495,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 474,
                                "src": "7487:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 496,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7495:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7487:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "70726963653d30",
                              "id": 498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7498:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1d8b26c0a8604842caf846734bcf8aaf5fe1bb783fc906c283161f7bdee7b882",
                                "typeString": "literal_string \"price=0\""
                              },
                              "value": "price=0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1d8b26c0a8604842caf846734bcf8aaf5fe1bb783fc906c283161f7bdee7b882",
                                "typeString": "literal_string \"price=0\""
                              }
                            ],
                            "id": 494,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7479:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7479:29:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 500,
                        "nodeType": "ExpressionStatement",
                        "src": "7479:29:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 504,
                            "name": "term",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "7536:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7543:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7536:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 507,
                            "name": "term",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "7548:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "3630",
                            "id": 508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7556:2:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_60_by_1",
                              "typeString": "int_const 60"
                            },
                            "value": "60"
                          },
                          "src": "7548:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7536:22:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "78207465726d",
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7560:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f1884caba071499e91737fc3a35d8ba42972498a8fac1579c74986abae09d26",
                          "typeString": "literal_string \"x term\""
                        },
                        "value": "x term"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f1884caba071499e91737fc3a35d8ba42972498a8fac1579c74986abae09d26",
                          "typeString": "literal_string \"x term\""
                        }
                      ],
                      "id": 503,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7528:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7528:41:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 513,
                  "nodeType": "ExpressionStatement",
                  "src": "7528:41:18"
                },
                {
                  "assignments": [
                    515
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 515,
                      "mutability": "mutable",
                      "name": "pid",
                      "nameLocation": "7587:3:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 555,
                      "src": "7580:10:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 514,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7580:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 519,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 516,
                      "name": "projectIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "7593:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7608:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7593:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7580:29:18"
                },
                {
                  "assignments": [
                    522
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 522,
                      "mutability": "mutable",
                      "name": "project",
                      "nameLocation": "7638:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 555,
                      "src": "7619:26:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                        "typeString": "struct ProjectInfo"
                      },
                      "typeName": {
                        "id": 521,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 520,
                          "name": "ProjectInfo",
                          "nameLocations": [
                            "7619:11:18"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3414,
                          "src": "7619:11:18"
                        },
                        "referencedDeclaration": 3414,
                        "src": "7619:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectInfo_$3414_storage_ptr",
                          "typeString": "struct ProjectInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 539,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 524,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 515,
                        "src": "7678:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 525,
                        "name": "title",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 472,
                        "src": "7702:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 526,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7730:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7734:6:18",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7730:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 528,
                        "name": "typeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 470,
                        "src": "7762:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "id": 529,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "7789:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 530,
                        "name": "authorizedOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "7824:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 531,
                        "name": "ACTIVE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4800,
                        "src": "7860:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      },
                      {
                        "id": 532,
                        "name": "supplyLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "7893:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 533,
                        "name": "term",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "7924:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "id": 534,
                        "name": "apy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 482,
                        "src": "7947:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 535,
                        "name": "stakedApy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "7975:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 536,
                        "name": "startTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 486,
                        "src": "8009:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 537,
                        "name": "endTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 488,
                        "src": "8041:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 523,
                      "name": "ProjectInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3414,
                      "src": "7648:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ProjectInfo_$3414_storage_ptr_$",
                        "typeString": "type(struct ProjectInfo storage pointer)"
                      }
                    },
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "7674:2:18",
                      "7695:5:18",
                      "7721:7:18",
                      "7754:6:18",
                      "7782:5:18",
                      "7808:14:18",
                      "7852:6:18",
                      "7880:11:18",
                      "7918:4:18",
                      "7942:3:18",
                      "7964:9:18",
                      "7998:9:18",
                      "8032:7:18"
                    ],
                    "names": [
                      "id",
                      "title",
                      "creator",
                      "typeId",
                      "price",
                      "authorizedOnly",
                      "status",
                      "supplyLimit",
                      "term",
                      "apy",
                      "stakedApy",
                      "startTime",
                      "endTime"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "7648:411:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                      "typeString": "struct ProjectInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7619:440:18"
                },
                {
                  "expression": {
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 540,
                        "name": "_projects",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4814,
                        "src": "8069:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_ProjectInfo_$3414_storage_$",
                          "typeString": "mapping(uint32 => struct ProjectInfo storage ref)"
                        }
                      },
                      "id": 542,
                      "indexExpression": {
                        "id": 541,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 515,
                        "src": "8079:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8069:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectInfo_$3414_storage",
                        "typeString": "struct ProjectInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 543,
                      "name": "project",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 522,
                      "src": "8086:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                        "typeString": "struct ProjectInfo memory"
                      }
                    },
                    "src": "8069:24:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProjectInfo_$3414_storage",
                      "typeString": "struct ProjectInfo storage ref"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "8069:24:18"
                },
                {
                  "expression": {
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 546,
                      "name": "projectIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "8103:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 547,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 515,
                      "src": "8118:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "8103:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 549,
                  "nodeType": "ExpressionStatement",
                  "src": "8103:18:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 551,
                          "name": "project",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "8152:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                            "typeString": "struct ProjectInfo memory"
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8160:2:18",
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3389,
                        "src": "8152:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 550,
                      "name": "ProjectCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "8137:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32)"
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8137:26:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 554,
                  "nodeType": "EmitStatement",
                  "src": "8132:31:18"
                }
              ]
            },
            "documentation": {
              "id": 468,
              "nodeType": "StructuredDocumentation",
              "src": "6445:678:18",
              "text": " @dev Creates a new project. This can only be done by the contract admin or owner.\n @param typeId project type.\n @param title Title of the project.\n @param price Price to mint one NFT from this project (in wei). Cannot be zero if `authorizedOnly`=true.\n @param authorizedOnly If true the project only mintable by admin.\n @param supplyLimit Supply limit of the project. Minting will fail if max limit.\n @param term Term of the project in months.\n @param apy APY of the project.\n @param stakedApy APY for staked NFT.\n @param startTime Start time of the project.\n @param endTime End time of the project."
            },
            "functionSelector": "ae4cd7e0",
            "id": 556,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 491,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 490,
                  "name": "onlyAdminOrOwner",
                  "nameLocations": [
                    "7418:16:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 143,
                  "src": "7418:16:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "7418:16:18"
              }
            ],
            "name": "createProject",
            "nameLocation": "7137:13:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "mutability": "mutable",
                  "name": "typeId",
                  "nameLocation": "7167:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "7160:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "7160:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 472,
                  "mutability": "mutable",
                  "name": "title",
                  "nameLocation": "7197:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "7183:19:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 471,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7183:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "7220:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "7212:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7212:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 476,
                  "mutability": "mutable",
                  "name": "authorizedOnly",
                  "nameLocation": "7240:14:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "7235:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7235:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 478,
                  "mutability": "mutable",
                  "name": "supplyLimit",
                  "nameLocation": "7272:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "7264:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 477,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "7264:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "term",
                  "nameLocation": "7300:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "7293:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "7293:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 482,
                  "mutability": "mutable",
                  "name": "apy",
                  "nameLocation": "7322:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "7314:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7314:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 484,
                  "mutability": "mutable",
                  "name": "stakedApy",
                  "nameLocation": "7343:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "7335:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7335:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 486,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "7369:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "7362:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 485,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "7362:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 488,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "7395:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "7388:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "7388:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7150:258:18"
            },
            "returnParameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7435:0:18"
            },
            "scope": 1398,
            "src": "7128:1042:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 570,
              "nodeType": "Block",
              "src": "8240:60:18",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 563,
                          "name": "_projects",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4814,
                          "src": "8257:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_ProjectInfo_$3414_storage_$",
                            "typeString": "mapping(uint32 => struct ProjectInfo storage ref)"
                          }
                        },
                        "id": 565,
                        "indexExpression": {
                          "id": 564,
                          "name": "projectId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 558,
                          "src": "8267:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8257:20:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectInfo_$3414_storage",
                          "typeString": "struct ProjectInfo storage ref"
                        }
                      },
                      "id": 566,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8278:2:18",
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3389,
                      "src": "8257:23:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 567,
                      "name": "projectId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 558,
                      "src": "8284:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "8257:36:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 562,
                  "id": 569,
                  "nodeType": "Return",
                  "src": "8250:43:18"
                }
              ]
            },
            "id": 571,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "8185:7:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 558,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "8200:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 571,
                  "src": "8193:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 557,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8193:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8192:18:18"
            },
            "returnParameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 561,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 571,
                  "src": "8234:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8234:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8233:6:18"
            },
            "scope": 1398,
            "src": "8176:124:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4821
            ],
            "body": {
              "id": 583,
              "nodeType": "Block",
              "src": "8397:42:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 580,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 573,
                        "src": "8422:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 579,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 571,
                      "src": "8414:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_bool_$",
                        "typeString": "function (uint32) view returns (bool)"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8414:18:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 578,
                  "id": 582,
                  "nodeType": "Return",
                  "src": "8407:25:18"
                }
              ]
            },
            "functionSelector": "694d0797",
            "id": 584,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "projectExists",
            "nameLocation": "8315:13:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 575,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8373:8:18"
            },
            "parameters": {
              "id": 574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 573,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "8345:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "8338:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 572,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8338:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8328:32:18"
            },
            "returnParameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 577,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "8391:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 576,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8391:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8390:6:18"
            },
            "scope": 1398,
            "src": "8306:133:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 613,
              "nodeType": "Block",
              "src": "8541:157:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 593,
                          "name": "projectId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 586,
                          "src": "8559:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8571:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8559:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2170726f6a6563744964",
                        "id": 596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8574:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2968ddb0ef45da24b0223e500db89fb777100fa8e717076b0e84db9b35604943",
                          "typeString": "literal_string \"!projectId\""
                        },
                        "value": "!projectId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2968ddb0ef45da24b0223e500db89fb777100fa8e717076b0e84db9b35604943",
                          "typeString": "literal_string \"!projectId\""
                        }
                      ],
                      "id": 592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8551:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8551:36:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 598,
                  "nodeType": "ExpressionStatement",
                  "src": "8551:36:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 600,
                              "name": "_projects",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4814,
                              "src": "8605:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_ProjectInfo_$3414_storage_$",
                                "typeString": "mapping(uint32 => struct ProjectInfo storage ref)"
                              }
                            },
                            "id": 602,
                            "indexExpression": {
                              "id": 601,
                              "name": "projectId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 586,
                              "src": "8615:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8605:20:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProjectInfo_$3414_storage",
                              "typeString": "struct ProjectInfo storage ref"
                            }
                          },
                          "id": 603,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8626:2:18",
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3389,
                          "src": "8605:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 604,
                          "name": "projectId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 586,
                          "src": "8632:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "8605:36:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2170726f6a656374",
                        "id": 606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8643:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1df63df2376f83119180fcc1f27ba1a87e17829026a3a46d566ac1a060d833f7",
                          "typeString": "literal_string \"!project\""
                        },
                        "value": "!project"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1df63df2376f83119180fcc1f27ba1a87e17829026a3a46d566ac1a060d833f7",
                          "typeString": "literal_string \"!project\""
                        }
                      ],
                      "id": 599,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8597:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8597:57:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 608,
                  "nodeType": "ExpressionStatement",
                  "src": "8597:57:18"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 609,
                      "name": "_projects",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4814,
                      "src": "8671:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_ProjectInfo_$3414_storage_$",
                        "typeString": "mapping(uint32 => struct ProjectInfo storage ref)"
                      }
                    },
                    "id": 611,
                    "indexExpression": {
                      "id": 610,
                      "name": "projectId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 586,
                      "src": "8681:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8671:20:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProjectInfo_$3414_storage",
                      "typeString": "struct ProjectInfo storage ref"
                    }
                  },
                  "functionReturnParameters": 591,
                  "id": 612,
                  "nodeType": "Return",
                  "src": "8664:27:18"
                }
              ]
            },
            "id": 614,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getProject",
            "nameLocation": "8454:11:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 586,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "8482:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "8475:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 585,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8475:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8465:32:18"
            },
            "returnParameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "8521:18:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                    "typeString": "struct ProjectInfo"
                  },
                  "typeName": {
                    "id": 589,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 588,
                      "name": "ProjectInfo",
                      "nameLocations": [
                        "8521:11:18"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3414,
                      "src": "8521:11:18"
                    },
                    "referencedDeclaration": 3414,
                    "src": "8521:11:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProjectInfo_$3414_storage_ptr",
                      "typeString": "struct ProjectInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8520:20:18"
            },
            "scope": 1398,
            "src": "8445:253:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4829
            ],
            "body": {
              "id": 627,
              "nodeType": "Block",
              "src": "8806:46:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 624,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 616,
                        "src": "8835:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 623,
                      "name": "_getProject",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 614,
                      "src": "8823:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_struct$_ProjectInfo_$3414_memory_ptr_$",
                        "typeString": "function (uint32) view returns (struct ProjectInfo memory)"
                      }
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8823:22:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                      "typeString": "struct ProjectInfo memory"
                    }
                  },
                  "functionReturnParameters": 622,
                  "id": 626,
                  "nodeType": "Return",
                  "src": "8816:29:18"
                }
              ]
            },
            "functionSelector": "8206d49f",
            "id": 628,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProject",
            "nameLocation": "8713:10:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 618,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8768:8:18"
            },
            "parameters": {
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 616,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "8740:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 628,
                  "src": "8733:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8733:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8723:32:18"
            },
            "returnParameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 628,
                  "src": "8786:18:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                    "typeString": "struct ProjectInfo"
                  },
                  "typeName": {
                    "id": 620,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 619,
                      "name": "ProjectInfo",
                      "nameLocations": [
                        "8786:11:18"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3414,
                      "src": "8786:11:18"
                    },
                    "referencedDeclaration": 3414,
                    "src": "8786:11:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProjectInfo_$3414_storage_ptr",
                      "typeString": "struct ProjectInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8785:20:18"
            },
            "scope": 1398,
            "src": "8704:148:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 643,
              "nodeType": "Block",
              "src": "8975:52:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 636,
                            "name": "project",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 632,
                            "src": "8993:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                              "typeString": "struct ProjectInfo memory"
                            }
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9001:2:18",
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3389,
                          "src": "8993:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9006:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8993:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2170726f6a656374",
                        "id": 640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9009:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1df63df2376f83119180fcc1f27ba1a87e17829026a3a46d566ac1a060d833f7",
                          "typeString": "literal_string \"!project\""
                        },
                        "value": "!project"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1df63df2376f83119180fcc1f27ba1a87e17829026a3a46d566ac1a060d833f7",
                          "typeString": "literal_string \"!project\""
                        }
                      ],
                      "id": 635,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8985:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8985:35:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 642,
                  "nodeType": "ExpressionStatement",
                  "src": "8985:35:18"
                }
              ]
            },
            "documentation": {
              "id": 629,
              "nodeType": "StructuredDocumentation",
              "src": "8858:47:18",
              "text": " @dev check is project exists"
            },
            "id": 644,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkProject",
            "nameLocation": "8919:13:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 632,
                  "mutability": "mutable",
                  "name": "project",
                  "nameLocation": "8952:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "8933:26:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                    "typeString": "struct ProjectInfo"
                  },
                  "typeName": {
                    "id": 631,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 630,
                      "name": "ProjectInfo",
                      "nameLocations": [
                        "8933:11:18"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3414,
                      "src": "8933:11:18"
                    },
                    "referencedDeclaration": 3414,
                    "src": "8933:11:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProjectInfo_$3414_storage_ptr",
                      "typeString": "struct ProjectInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8932:28:18"
            },
            "returnParameters": {
              "id": 634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8975:0:18"
            },
            "scope": 1398,
            "src": "8910:117:18",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 673,
              "nodeType": "Block",
              "src": "9648:156:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 656,
                            "name": "projectId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 647,
                            "src": "9674:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 655,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 571,
                          "src": "9666:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_bool_$",
                            "typeString": "function (uint32) view returns (bool)"
                          }
                        },
                        "id": 657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9666:18:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2170726f6a656374",
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9686:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1df63df2376f83119180fcc1f27ba1a87e17829026a3a46d566ac1a060d833f7",
                          "typeString": "literal_string \"!project\""
                        },
                        "value": "!project"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1df63df2376f83119180fcc1f27ba1a87e17829026a3a46d566ac1a060d833f7",
                          "typeString": "literal_string \"!project\""
                        }
                      ],
                      "id": 654,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9658:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9658:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 660,
                  "nodeType": "ExpressionStatement",
                  "src": "9658:39:18"
                },
                {
                  "expression": {
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 661,
                          "name": "_projects",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4814,
                          "src": "9707:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_ProjectInfo_$3414_storage_$",
                            "typeString": "mapping(uint32 => struct ProjectInfo storage ref)"
                          }
                        },
                        "id": 663,
                        "indexExpression": {
                          "id": 662,
                          "name": "projectId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 647,
                          "src": "9717:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9707:20:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectInfo_$3414_storage",
                          "typeString": "struct ProjectInfo storage ref"
                        }
                      },
                      "id": 664,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9728:6:18",
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3401,
                      "src": "9707:27:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 665,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "9737:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "9707:36:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 667,
                  "nodeType": "ExpressionStatement",
                  "src": "9707:36:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 669,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "9779:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 670,
                        "name": "status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "9790:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 668,
                      "name": "ProjectStatusChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "9758:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_bytes1_$returns$__$",
                        "typeString": "function (uint32,bytes1)"
                      }
                    },
                    "id": 671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9758:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 672,
                  "nodeType": "EmitStatement",
                  "src": "9753:44:18"
                }
              ]
            },
            "documentation": {
              "id": 645,
              "nodeType": "StructuredDocumentation",
              "src": "9033:503:18",
              "text": " This function is used to set the status of a project.\n The caller of this function must be either the owner or an admin of the\n contract.\n It takes in two parameters: the projectId and a bytes1 status.\n It first checks to make sure the project exists, before setting the status\n and emitting a ProjectStatusChanged event.\n @param projectId The ID of the project to set the status for.\n @param status A bytes1 indicating the new status."
            },
            "functionSelector": "c7ba34f4",
            "id": 674,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 652,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 651,
                  "name": "onlyAdminOrOwner",
                  "nameLocations": [
                    "9631:16:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 143,
                  "src": "9631:16:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "9631:16:18"
              }
            ],
            "name": "setProjectStatus",
            "nameLocation": "9550:16:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 647,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "9583:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 674,
                  "src": "9576:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9576:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 649,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "9609:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 674,
                  "src": "9602:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "bytes1",
                    "nodeType": "ElementaryTypeName",
                    "src": "9602:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9566:55:18"
            },
            "returnParameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9648:0:18"
            },
            "scope": 1398,
            "src": "9541:263:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 838,
              "nodeType": "Block",
              "src": "10188:1353:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10206:7:18",
                        "subExpression": {
                          "id": 689,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "10207:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "706175736564",
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10215:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee35723ac350a69d2a92d3703f17439cbaadf2f093a21ba5bf5f1a53eb2a14d9",
                          "typeString": "literal_string \"paused\""
                        },
                        "value": "paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee35723ac350a69d2a92d3703f17439cbaadf2f093a21ba5bf5f1a53eb2a14d9",
                          "typeString": "literal_string \"paused\""
                        }
                      ],
                      "id": 688,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10198:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10198:26:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 693,
                  "nodeType": "ExpressionStatement",
                  "src": "10198:26:18"
                },
                {
                  "assignments": [
                    696
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 696,
                      "mutability": "mutable",
                      "name": "project",
                      "nameLocation": "10253:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 838,
                      "src": "10234:26:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                        "typeString": "struct ProjectInfo"
                      },
                      "typeName": {
                        "id": 695,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 694,
                          "name": "ProjectInfo",
                          "nameLocations": [
                            "10234:11:18"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3414,
                          "src": "10234:11:18"
                        },
                        "referencedDeclaration": 3414,
                        "src": "10234:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectInfo_$3414_storage_ptr",
                          "typeString": "struct ProjectInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 700,
                  "initialValue": {
                    "baseExpression": {
                      "id": 697,
                      "name": "_projects",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4814,
                      "src": "10263:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_ProjectInfo_$3414_storage_$",
                        "typeString": "mapping(uint32 => struct ProjectInfo storage ref)"
                      }
                    },
                    "id": 699,
                    "indexExpression": {
                      "id": 698,
                      "name": "projectId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 677,
                      "src": "10273:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10263:20:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProjectInfo_$3414_storage",
                      "typeString": "struct ProjectInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10234:49:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 702,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 696,
                        "src": "10307:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                          "typeString": "struct ProjectInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                          "typeString": "struct ProjectInfo memory"
                        }
                      ],
                      "id": 701,
                      "name": "_checkProject",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 644,
                      "src": "10293:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_ProjectInfo_$3414_memory_ptr_$returns$__$",
                        "typeString": "function (struct ProjectInfo memory) pure"
                      }
                    },
                    "id": 703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10293:22:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 704,
                  "nodeType": "ExpressionStatement",
                  "src": "10293:22:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 706,
                            "name": "project",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "10333:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                              "typeString": "struct ProjectInfo memory"
                            }
                          },
                          "id": 707,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10341:6:18",
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3401,
                          "src": "10333:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 708,
                          "name": "ACTIVE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4800,
                          "src": "10351:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "10333:24:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21616374697665",
                        "id": 710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10359:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f3f69ce5e4606b03ed1bd946f699844049b6ab1cd761baf995ff8e6b07a265f",
                          "typeString": "literal_string \"!active\""
                        },
                        "value": "!active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f3f69ce5e4606b03ed1bd946f699844049b6ab1cd761baf995ff8e6b07a265f",
                          "typeString": "literal_string \"!active\""
                        }
                      ],
                      "id": 705,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10325:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10325:44:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 712,
                  "nodeType": "ExpressionStatement",
                  "src": "10325:44:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 714,
                            "name": "project",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "10387:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                              "typeString": "struct ProjectInfo memory"
                            }
                          },
                          "id": 715,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10395:9:18",
                          "memberName": "startTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3411,
                          "src": "10387:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 716,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10408:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10414:9:18",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10408:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10387:36:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "217374617274",
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10425:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8aa2d44dcfdb120fea3dc7f28ab034207598fccd12631bc01958fb8d900dbccd",
                          "typeString": "literal_string \"!start\""
                        },
                        "value": "!start"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8aa2d44dcfdb120fea3dc7f28ab034207598fccd12631bc01958fb8d900dbccd",
                          "typeString": "literal_string \"!start\""
                        }
                      ],
                      "id": 713,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10379:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10379:55:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 721,
                  "nodeType": "ExpressionStatement",
                  "src": "10379:55:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 723,
                            "name": "project",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "10452:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                              "typeString": "struct ProjectInfo memory"
                            }
                          },
                          "id": 724,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10460:7:18",
                          "memberName": "endTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3413,
                          "src": "10452:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 725,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10470:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10476:9:18",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10470:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10452:33:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21656e646564",
                        "id": 728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10487:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd466a237314543bc1df2d490d2bf30b641767dbb894a94e6004fc207a2dcd1f",
                          "typeString": "literal_string \"!ended\""
                        },
                        "value": "!ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd466a237314543bc1df2d490d2bf30b641767dbb894a94e6004fc207a2dcd1f",
                          "typeString": "literal_string \"!ended\""
                        }
                      ],
                      "id": 722,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10444:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10444:52:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 730,
                  "nodeType": "ExpressionStatement",
                  "src": "10444:52:18"
                },
                {
                  "assignments": [
                    732
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 732,
                      "mutability": "mutable",
                      "name": "_sender",
                      "nameLocation": "10515:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 838,
                      "src": "10507:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 731,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10507:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 735,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 733,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5763,
                      "src": "10525:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10525:12:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10507:30:18"
                },
                {
                  "assignments": [
                    737
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 737,
                      "mutability": "mutable",
                      "name": "isAuthority",
                      "nameLocation": "10553:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 838,
                      "src": "10548:16:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 736,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10548:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 745,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 739,
                          "name": "_sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 732,
                          "src": "10576:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 738,
                        "name": "_isAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          3290
                        ],
                        "referencedDeclaration": 3290,
                        "src": "10567:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10567:17:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 742,
                          "name": "_sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 732,
                          "src": "10597:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 741,
                        "name": "_isOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "10588:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10588:17:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10567:38:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10548:57:18"
                },
                {
                  "condition": {
                    "expression": {
                      "id": 746,
                      "name": "project",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 696,
                      "src": "10620:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                        "typeString": "struct ProjectInfo memory"
                      }
                    },
                    "id": 747,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "10628:14:18",
                    "memberName": "authorizedOnly",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3399,
                    "src": "10620:22:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 769,
                    "nodeType": "Block",
                    "src": "10711:180:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 755,
                                "name": "isAuthority",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 737,
                                "src": "10750:11:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 758,
                                      "name": "_sender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 732,
                                      "src": "10806:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 756,
                                      "name": "stableCoin",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 29,
                                      "src": "10785:10:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ICoin_$3374",
                                        "typeString": "contract ICoin"
                                      }
                                    },
                                    "id": 757,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "10796:9:18",
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4847,
                                    "src": "10785:20:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 759,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10785:29:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 763,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 760,
                                    "name": "qty",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 679,
                                    "src": "10818:3:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 761,
                                      "name": "project",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 696,
                                      "src": "10824:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                                        "typeString": "struct ProjectInfo memory"
                                      }
                                    },
                                    "id": 762,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "10832:5:18",
                                    "memberName": "price",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3397,
                                    "src": "10824:13:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10818:19:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10785:52:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "10750:87:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "62616c616e6365203c",
                              "id": 766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10855:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_208f24d7a1cd76f7f6c7a386106e976000541dbadc3dcc74ed2c23104ae19c73",
                                "typeString": "literal_string \"balance <\""
                              },
                              "value": "balance <"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_208f24d7a1cd76f7f6c7a386106e976000541dbadc3dcc74ed2c23104ae19c73",
                                "typeString": "literal_string \"balance <\""
                              }
                            ],
                            "id": 754,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10725:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10725:155:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 768,
                        "nodeType": "ExpressionStatement",
                        "src": "10725:155:18"
                      }
                    ]
                  },
                  "id": 770,
                  "nodeType": "IfStatement",
                  "src": "10616:275:18",
                  "trueBody": {
                    "id": 753,
                    "nodeType": "Block",
                    "src": "10644:61:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 749,
                              "name": "isAuthority",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 737,
                              "src": "10666:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "756e617574686f72697a6564",
                              "id": 750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10679:14:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_926a1b84b861d31f2d45224162461e1d5ff4377725d977d8f792bb84825a0348",
                                "typeString": "literal_string \"unauthorized\""
                              },
                              "value": "unauthorized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_926a1b84b861d31f2d45224162461e1d5ff4377725d977d8f792bb84825a0348",
                                "typeString": "literal_string \"unauthorized\""
                              }
                            ],
                            "id": 748,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10658:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10658:36:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 752,
                        "nodeType": "ExpressionStatement",
                        "src": "10658:36:18"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    772
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 772,
                      "mutability": "mutable",
                      "name": "supply",
                      "nameLocation": "10975:6:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 838,
                      "src": "10967:14:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 771,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "10967:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 776,
                  "initialValue": {
                    "baseExpression": {
                      "id": 773,
                      "name": "_supplyFor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "10984:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint32_$_t_uint128_$",
                        "typeString": "mapping(uint32 => uint128)"
                      }
                    },
                    "id": 775,
                    "indexExpression": {
                      "id": 774,
                      "name": "projectId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 677,
                      "src": "10995:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10984:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10967:38:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 777,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 696,
                        "src": "11019:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                          "typeString": "struct ProjectInfo memory"
                        }
                      },
                      "id": 778,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11027:11:18",
                      "memberName": "supplyLimit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3405,
                      "src": "11019:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11041:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11019:23:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 792,
                  "nodeType": "IfStatement",
                  "src": "11015:107:18",
                  "trueBody": {
                    "id": 791,
                    "nodeType": "Block",
                    "src": "11044:78:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 784,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 782,
                                  "name": "supply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 772,
                                  "src": "11066:6:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 783,
                                  "name": "qty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 679,
                                  "src": "11075:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "11066:12:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 785,
                                  "name": "project",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 696,
                                  "src": "11082:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                                    "typeString": "struct ProjectInfo memory"
                                  }
                                },
                                "id": 786,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11090:11:18",
                                "memberName": "supplyLimit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3405,
                                "src": "11082:19:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "src": "11066:35:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6c696d6974",
                              "id": 788,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11103:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7fc4c77395fcdec81e476481a08f1375d8dae0ef9d902795df834781daa81fb0",
                                "typeString": "literal_string \"limit\""
                              },
                              "value": "limit"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7fc4c77395fcdec81e476481a08f1375d8dae0ef9d902795df834781daa81fb0",
                                "typeString": "literal_string \"limit\""
                              }
                            ],
                            "id": 781,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11058:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11058:53:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 790,
                        "nodeType": "ExpressionStatement",
                        "src": "11058:53:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 793,
                        "name": "_supplyFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "11132:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_uint128_$",
                          "typeString": "mapping(uint32 => uint128)"
                        }
                      },
                      "id": 795,
                      "indexExpression": {
                        "id": 794,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "11143:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11132:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 796,
                      "name": "qty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 679,
                      "src": "11157:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "11132:28:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 798,
                  "nodeType": "ExpressionStatement",
                  "src": "11132:28:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "11217:23:18",
                      "subExpression": {
                        "expression": {
                          "id": 799,
                          "name": "project",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 696,
                          "src": "11218:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                            "typeString": "struct ProjectInfo memory"
                          }
                        },
                        "id": 800,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11226:14:18",
                        "memberName": "authorizedOnly",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3399,
                        "src": "11218:22:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "11244:12:18",
                      "subExpression": {
                        "id": 802,
                        "name": "isAuthority",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 737,
                        "src": "11245:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11217:39:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 820,
                  "nodeType": "IfStatement",
                  "src": "11213:206:18",
                  "trueBody": {
                    "id": 819,
                    "nodeType": "Block",
                    "src": "11258:161:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 808,
                              "name": "_sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 732,
                              "src": "11317:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 811,
                                  "name": "staker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34,
                                  "src": "11350:6:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStaker_$1504",
                                    "typeString": "contract IStaker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IStaker_$1504",
                                    "typeString": "contract IStaker"
                                  }
                                ],
                                "id": 810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11342:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 809,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11342:7:18",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11342:15:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 813,
                                "name": "qty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 679,
                                "src": "11375:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 814,
                                  "name": "project",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 696,
                                  "src": "11381:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                                    "typeString": "struct ProjectInfo memory"
                                  }
                                },
                                "id": 815,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11389:5:18",
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3397,
                                "src": "11381:13:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11375:19:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 805,
                              "name": "stableCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "11272:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICoin_$3374",
                                "typeString": "contract ICoin"
                              }
                            },
                            "id": 807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11283:16:18",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3053,
                            "src": "11272:27:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4908_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4908_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11272:136:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 818,
                        "nodeType": "ExpressionStatement",
                        "src": "11272:136:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 822,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "11435:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 823,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "11439:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 824,
                        "name": "qty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "11450:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11455:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 821,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4187,
                      "src": "11429:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11429:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 827,
                  "nodeType": "ExpressionStatement",
                  "src": "11429:29:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 829,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "11479:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 830,
                        "name": "qty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "11490:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 831,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5763,
                          "src": "11495:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11495:12:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 833,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "11509:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 828,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "11474:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_uint128_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint32,uint128,address,address)"
                      }
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11474:38:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 835,
                  "nodeType": "EmitStatement",
                  "src": "11469:43:18"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11530:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 687,
                  "id": 837,
                  "nodeType": "Return",
                  "src": "11523:11:18"
                }
              ]
            },
            "documentation": {
              "id": 675,
              "nodeType": "StructuredDocumentation",
              "src": "9810:242:18",
              "text": " @dev Mint NFT for specific project. This payable function demands the exact amount of price,\n      except for the authorizedOnly project.\n @param projectId Project id.\n @param qty Quantity of NFTs to mint."
            },
            "functionSelector": "51248b4e",
            "id": 839,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 684,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 683,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "10160:12:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3570,
                  "src": "10160:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "10160:12:18"
              }
            ],
            "name": "mint",
            "nameLocation": "10066:4:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "10087:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "10080:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10080:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 679,
                  "mutability": "mutable",
                  "name": "qty",
                  "nameLocation": "10113:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "10106:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10106:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 681,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10134:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "10126:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10126:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10070:72:18"
            },
            "returnParameters": {
              "id": 687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 686,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "10182:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 685,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10182:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10181:6:18"
            },
            "scope": 1398,
            "src": "10057:1484:18",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 998,
              "nodeType": "Block",
              "src": "11879:1165:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 859,
                          "name": "nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 848,
                          "src": "11897:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 862,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "11913:5:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11919:9:18",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "11913:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11906:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 860,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "11906:6:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11906:23:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3630",
                            "id": 865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11932:2:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_60_by_1",
                              "typeString": "int_const 60"
                            },
                            "value": "60"
                          },
                          "src": "11906:28:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "11897:37:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "78206e6f6e6365",
                        "id": 868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11936:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c97ead9fd3401dd9535e16d8c84307fdf467a74442c9895491dd20097aefcdd0",
                          "typeString": "literal_string \"x nonce\""
                        },
                        "value": "x nonce"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c97ead9fd3401dd9535e16d8c84307fdf467a74442c9895491dd20097aefcdd0",
                          "typeString": "literal_string \"x nonce\""
                        }
                      ],
                      "id": 858,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11889:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11889:57:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 870,
                  "nodeType": "ExpressionStatement",
                  "src": "11889:57:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 872,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 846,
                        "src": "11970:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 871,
                      "name": "_checkAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1096,
                      "src": "11956:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11956:17:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 874,
                  "nodeType": "ExpressionStatement",
                  "src": "11956:17:18"
                },
                {
                  "assignments": [
                    877
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 877,
                      "mutability": "mutable",
                      "name": "project",
                      "nameLocation": "12030:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 998,
                      "src": "12011:26:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                        "typeString": "struct ProjectInfo"
                      },
                      "typeName": {
                        "id": 876,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 875,
                          "name": "ProjectInfo",
                          "nameLocations": [
                            "12011:11:18"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3414,
                          "src": "12011:11:18"
                        },
                        "referencedDeclaration": 3414,
                        "src": "12011:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectInfo_$3414_storage_ptr",
                          "typeString": "struct ProjectInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 881,
                  "initialValue": {
                    "baseExpression": {
                      "id": 878,
                      "name": "_projects",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4814,
                      "src": "12040:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_ProjectInfo_$3414_storage_$",
                        "typeString": "mapping(uint32 => struct ProjectInfo storage ref)"
                      }
                    },
                    "id": 880,
                    "indexExpression": {
                      "id": 879,
                      "name": "projectId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "12050:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12040:20:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProjectInfo_$3414_storage",
                      "typeString": "struct ProjectInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12011:49:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 883,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 877,
                        "src": "12084:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                          "typeString": "struct ProjectInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                          "typeString": "struct ProjectInfo memory"
                        }
                      ],
                      "id": 882,
                      "name": "_checkProject",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 644,
                      "src": "12070:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_ProjectInfo_$3414_memory_ptr_$returns$__$",
                        "typeString": "function (struct ProjectInfo memory) pure"
                      }
                    },
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12070:22:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 885,
                  "nodeType": "ExpressionStatement",
                  "src": "12070:22:18"
                },
                {
                  "assignments": [
                    887
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 887,
                      "mutability": "mutable",
                      "name": "supply",
                      "nameLocation": "12135:6:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 998,
                      "src": "12127:14:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 886,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "12127:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 891,
                  "initialValue": {
                    "baseExpression": {
                      "id": 888,
                      "name": "_supplyFor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "12144:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint32_$_t_uint128_$",
                        "typeString": "mapping(uint32 => uint128)"
                      }
                    },
                    "id": 890,
                    "indexExpression": {
                      "id": 889,
                      "name": "projectId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "12155:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12144:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12127:38:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 892,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 877,
                        "src": "12179:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                          "typeString": "struct ProjectInfo memory"
                        }
                      },
                      "id": 893,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12187:11:18",
                      "memberName": "supplyLimit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3405,
                      "src": "12179:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12201:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12179:23:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 907,
                  "nodeType": "IfStatement",
                  "src": "12175:107:18",
                  "trueBody": {
                    "id": 906,
                    "nodeType": "Block",
                    "src": "12204:78:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 899,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 897,
                                  "name": "supply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 887,
                                  "src": "12226:6:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 898,
                                  "name": "qty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 844,
                                  "src": "12235:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "12226:12:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 900,
                                  "name": "project",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 877,
                                  "src": "12242:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                                    "typeString": "struct ProjectInfo memory"
                                  }
                                },
                                "id": 901,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12250:11:18",
                                "memberName": "supplyLimit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3405,
                                "src": "12242:19:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "src": "12226:35:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6c696d6974",
                              "id": 903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12263:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7fc4c77395fcdec81e476481a08f1375d8dae0ef9d902795df834781daa81fb0",
                                "typeString": "literal_string \"limit\""
                              },
                              "value": "limit"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7fc4c77395fcdec81e476481a08f1375d8dae0ef9d902795df834781daa81fb0",
                                "typeString": "literal_string \"limit\""
                              }
                            ],
                            "id": 896,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12218:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12218:53:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 905,
                        "nodeType": "ExpressionStatement",
                        "src": "12218:53:18"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    909
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 909,
                      "mutability": "mutable",
                      "name": "_sender",
                      "nameLocation": "12300:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 998,
                      "src": "12292:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 908,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12292:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 912,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 910,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5763,
                      "src": "12310:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12310:12:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12292:30:18"
                },
                {
                  "assignments": [
                    914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 914,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "12341:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 998,
                      "src": "12333:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 913,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12333:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 927,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 919,
                                "name": "projectId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 842,
                                "src": "12403:9:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              {
                                "id": 920,
                                "name": "_sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 909,
                                "src": "12414:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 921,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 846,
                                "src": "12423:2:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 922,
                                "name": "qty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 844,
                                "src": "12427:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              {
                                "id": 923,
                                "name": "nonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 848,
                                "src": "12432:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "expression": {
                                "id": 917,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "12386:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 918,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "12390:12:18",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "12386:16:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12386:52:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 916,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "12376:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12376:63:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 915,
                      "name": "sigPrefixed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3339
                      ],
                      "referencedDeclaration": 3339,
                      "src": "12351:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12351:98:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12333:116:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 930,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3239,
                            "src": "12478:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 931,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 914,
                            "src": "12485:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 932,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 851,
                            "src": "12494:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Sig_$3300_memory_ptr",
                              "typeString": "struct Sig memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_struct$_Sig_$3300_memory_ptr",
                              "typeString": "struct Sig memory"
                            }
                          ],
                          "id": 929,
                          "name": "_isSigner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            3365
                          ],
                          "referencedDeclaration": 3365,
                          "src": "12468:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_struct$_Sig_$3300_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,bytes32,struct Sig memory) pure returns (bool)"
                          }
                        },
                        "id": 933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12468:30:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "78207369676e6174757265",
                        "id": 934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12500:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c843c677eecfc44cd819c7fcbf445b15eb82d349af4a733aa0a0af264becde5c",
                          "typeString": "literal_string \"x signature\""
                        },
                        "value": "x signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c843c677eecfc44cd819c7fcbf445b15eb82d349af4a733aa0a0af264becde5c",
                          "typeString": "literal_string \"x signature\""
                        }
                      ],
                      "id": 928,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12460:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12460:54:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 936,
                  "nodeType": "ExpressionStatement",
                  "src": "12460:54:18"
                },
                {
                  "assignments": [
                    938
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 938,
                      "mutability": "mutable",
                      "name": "isAuthority",
                      "nameLocation": "12530:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 998,
                      "src": "12525:16:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 937,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12525:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 946,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 940,
                          "name": "_sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 909,
                          "src": "12553:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 939,
                        "name": "_isAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          3290
                        ],
                        "referencedDeclaration": 3290,
                        "src": "12544:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12544:17:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 943,
                          "name": "_sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 909,
                          "src": "12574:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 942,
                        "name": "_isOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "12565:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12565:17:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12544:38:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12525:57:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 948,
                          "name": "isAuthority",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 938,
                          "src": "12614:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 951,
                                "name": "_sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 909,
                                "src": "12650:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 949,
                                "name": "stableCoin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29,
                                "src": "12629:10:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICoin_$3374",
                                  "typeString": "contract ICoin"
                                }
                              },
                              "id": 950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12640:9:18",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4847,
                              "src": "12629:20:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12629:29:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 953,
                              "name": "qty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 844,
                              "src": "12662:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "id": 954,
                                "name": "project",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 877,
                                "src": "12668:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                                  "typeString": "struct ProjectInfo memory"
                                }
                              },
                              "id": 955,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12676:5:18",
                              "memberName": "price",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3397,
                              "src": "12668:13:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12662:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12629:52:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12614:67:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "62616c616e6365203c",
                        "id": 959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12695:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_208f24d7a1cd76f7f6c7a386106e976000541dbadc3dcc74ed2c23104ae19c73",
                          "typeString": "literal_string \"balance <\""
                        },
                        "value": "balance <"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_208f24d7a1cd76f7f6c7a386106e976000541dbadc3dcc74ed2c23104ae19c73",
                          "typeString": "literal_string \"balance <\""
                        }
                      ],
                      "id": 947,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12593:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12593:123:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 961,
                  "nodeType": "ExpressionStatement",
                  "src": "12593:123:18"
                },
                {
                  "expression": {
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 962,
                        "name": "_supplyFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "12727:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_uint128_$",
                          "typeString": "mapping(uint32 => uint128)"
                        }
                      },
                      "id": 964,
                      "indexExpression": {
                        "id": 963,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "12738:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12727:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 965,
                      "name": "qty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 844,
                      "src": "12752:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "12727:28:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 967,
                  "nodeType": "ExpressionStatement",
                  "src": "12727:28:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 971,
                        "name": "_sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 909,
                        "src": "12849:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 974,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12878:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HouseOfPanda_$1398",
                              "typeString": "contract HouseOfPanda"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HouseOfPanda_$1398",
                              "typeString": "contract HouseOfPanda"
                            }
                          ],
                          "id": 973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12870:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 972,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12870:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12870:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 976,
                          "name": "qty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 844,
                          "src": "12897:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 977,
                            "name": "project",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 877,
                            "src": "12903:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                              "typeString": "struct ProjectInfo memory"
                            }
                          },
                          "id": 978,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12911:5:18",
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3397,
                          "src": "12903:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12897:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 968,
                        "name": "stableCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "12808:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoin_$3374",
                          "typeString": "contract ICoin"
                        }
                      },
                      "id": 970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12819:16:18",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3053,
                      "src": "12808:27:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4908_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4908_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12808:118:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 981,
                  "nodeType": "ExpressionStatement",
                  "src": "12808:118:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 983,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 846,
                        "src": "12943:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 984,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "12947:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 985,
                        "name": "qty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 844,
                        "src": "12958:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12963:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 982,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4187,
                      "src": "12937:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12937:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 988,
                  "nodeType": "ExpressionStatement",
                  "src": "12937:29:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 990,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "12987:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 991,
                        "name": "qty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 844,
                        "src": "12998:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 992,
                        "name": "_sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 909,
                        "src": "13003:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 993,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 846,
                        "src": "13012:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 989,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "12982:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_uint128_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint32,uint128,address,address)"
                      }
                    },
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12982:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 995,
                  "nodeType": "EmitStatement",
                  "src": "12977:38:18"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13033:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 857,
                  "id": 997,
                  "nodeType": "Return",
                  "src": "13026:11:18"
                }
              ]
            },
            "documentation": {
              "id": 840,
              "nodeType": "StructuredDocumentation",
              "src": "11547:140:18",
              "text": " @dev Permissioned version of mint, use signature for verification,\n      Anyone with valid signature can mint NFTs."
            },
            "functionSelector": "52d0d8ee",
            "id": 999,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 854,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 853,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "11851:12:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3570,
                  "src": "11851:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "11851:12:18"
              }
            ],
            "name": "authorizedMint",
            "nameLocation": "11701:14:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 842,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "11732:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 999,
                  "src": "11725:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11725:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 844,
                  "mutability": "mutable",
                  "name": "qty",
                  "nameLocation": "11758:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 999,
                  "src": "11751:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11751:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 846,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11779:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 999,
                  "src": "11771:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11771:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 848,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "11798:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 999,
                  "src": "11791:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 847,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "11791:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 851,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "11824:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 999,
                  "src": "11813:14:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Sig_$3300_memory_ptr",
                    "typeString": "struct Sig"
                  },
                  "typeName": {
                    "id": 850,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 849,
                      "name": "Sig",
                      "nameLocations": [
                        "11813:3:18"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3300,
                      "src": "11813:3:18"
                    },
                    "referencedDeclaration": 3300,
                    "src": "11813:3:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Sig_$3300_storage_ptr",
                      "typeString": "struct Sig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11715:118:18"
            },
            "returnParameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 856,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 999,
                  "src": "11873:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11873:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11872:6:18"
            },
            "scope": 1398,
            "src": "11692:1352:18",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1011,
              "nodeType": "Block",
              "src": "13179:45:18",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1007,
                      "name": "_supplyFor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "13196:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint32_$_t_uint128_$",
                        "typeString": "mapping(uint32 => uint128)"
                      }
                    },
                    "id": 1009,
                    "indexExpression": {
                      "id": 1008,
                      "name": "projectId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1002,
                      "src": "13207:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13196:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 1006,
                  "id": 1010,
                  "nodeType": "Return",
                  "src": "13189:28:18"
                }
              ]
            },
            "documentation": {
              "id": 1000,
              "nodeType": "StructuredDocumentation",
              "src": "13050:55:18",
              "text": " @dev check supply for specific item."
            },
            "functionSelector": "a3aafe89",
            "id": 1012,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supplyFor",
            "nameLocation": "13119:9:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1002,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "13136:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1012,
                  "src": "13129:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1001,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13129:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13128:18:18"
            },
            "returnParameters": {
              "id": 1006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1005,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1012,
                  "src": "13170:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1004,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "13170:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13169:9:18"
            },
            "scope": 1398,
            "src": "13110:114:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3659
            ],
            "body": {
              "id": 1079,
              "nodeType": "Block",
              "src": "13669:747:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1025,
                                "name": "_projectId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1015,
                                "src": "13702:10:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13695:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint32_$",
                                "typeString": "type(uint32)"
                              },
                              "typeName": {
                                "id": 1023,
                                "name": "uint32",
                                "nodeType": "ElementaryTypeName",
                                "src": "13695:6:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13695:18:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 1022,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 571,
                          "src": "13687:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_bool_$",
                            "typeString": "function (uint32) view returns (bool)"
                          }
                        },
                        "id": 1027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13687:27:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2170726f6a656374",
                        "id": 1028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13716:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1df63df2376f83119180fcc1f27ba1a87e17829026a3a46d566ac1a060d833f7",
                          "typeString": "literal_string \"!project\""
                        },
                        "value": "!project"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1df63df2376f83119180fcc1f27ba1a87e17829026a3a46d566ac1a060d833f7",
                          "typeString": "literal_string \"!project\""
                        }
                      ],
                      "id": 1021,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13679:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13679:48:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1030,
                  "nodeType": "ExpressionStatement",
                  "src": "13679:48:18"
                },
                {
                  "assignments": [
                    1032
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1032,
                      "mutability": "mutable",
                      "name": "customUriBytes",
                      "nameLocation": "13819:14:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1079,
                      "src": "13806:27:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1031,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13806:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1039,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1035,
                          "name": "customUri",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4686,
                          "src": "13842:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                            "typeString": "mapping(uint256 => string storage ref)"
                          }
                        },
                        "id": 1037,
                        "indexExpression": {
                          "id": 1036,
                          "name": "_projectId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1015,
                          "src": "13852:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13842:21:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 1034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "13836:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": {
                        "id": 1033,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13836:5:18",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13836:28:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13806:58:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1040,
                        "name": "customUriBytes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1032,
                        "src": "13878:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13893:6:18",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "13878:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13902:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13878:25:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1077,
                    "nodeType": "Block",
                    "src": "13964:446:18",
                    "statements": [
                      {
                        "assignments": [
                          1050
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1050,
                            "mutability": "mutable",
                            "name": "baseURI",
                            "nameLocation": "14037:7:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 1077,
                            "src": "14023:21:18",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 1049,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "14023:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1055,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1053,
                              "name": "_projectId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1015,
                              "src": "14057:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1051,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "14047:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_HouseOfPanda_$1398_$",
                                "typeString": "type(contract super HouseOfPanda)"
                              }
                            },
                            "id": 1052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14053:3:18",
                            "memberName": "uri",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3659,
                            "src": "14047:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                              "typeString": "function (uint256) view returns (string memory)"
                            }
                          },
                          "id": 1054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14047:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14023:45:18"
                      },
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1058,
                                    "name": "baseURI",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1050,
                                    "src": "14111:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 1057,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "14105:5:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 1056,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14105:5:18",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1059,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14105:14:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 1060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14120:6:18",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "14105:21:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14129:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "14105:25:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "hexValue": "",
                            "id": 1074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14397:2:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          "id": 1075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "14105:294:18",
                          "trueExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1067,
                                    "name": "baseURI",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1050,
                                    "src": "14231:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 1068,
                                        "name": "_projectId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1015,
                                        "src": "14268:10:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1069,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "14279:8:18",
                                      "memberName": "toString",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 6060,
                                      "src": "14268:19:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256) pure returns (string memory)"
                                      }
                                    },
                                    "id": 1070,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14268:21:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "hexValue": "2e6a736f6e",
                                    "id": 1071,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14319:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                                      "typeString": "literal_string \".json\""
                                    },
                                    "value": ".json"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                                      "typeString": "literal_string \".json\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 1065,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "14185:3:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1066,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "14189:12:18",
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "14185:16:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1072,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14185:167:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1064,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14153:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 1063,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "14153:6:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14153:221:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1020,
                        "id": 1076,
                        "nodeType": "Return",
                        "src": "14082:317:18"
                      }
                    ]
                  },
                  "id": 1078,
                  "nodeType": "IfStatement",
                  "src": "13874:536:18",
                  "trueBody": {
                    "id": 1048,
                    "nodeType": "Block",
                    "src": "13905:53:18",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1044,
                            "name": "customUri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4686,
                            "src": "13926:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                              "typeString": "mapping(uint256 => string storage ref)"
                            }
                          },
                          "id": 1046,
                          "indexExpression": {
                            "id": 1045,
                            "name": "_projectId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1015,
                            "src": "13936:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13926:21:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 1020,
                        "id": 1047,
                        "nodeType": "Return",
                        "src": "13919:28:18"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1013,
              "nodeType": "StructuredDocumentation",
              "src": "13230:342:18",
              "text": " Returns the URI of a given project.\n If the project has a custom URI (stored in the 'customUri' mapping),\n the custom URI is returned. Otherwise, the default uri defined in the super\n class is returned.\n @param _projectId The ID of the project.\n @return {string} The URI of the project."
            },
            "functionSelector": "0e89341c",
            "id": 1080,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nameLocation": "13586:3:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1017,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "13636:8:18"
            },
            "parameters": {
              "id": 1016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1015,
                  "mutability": "mutable",
                  "name": "_projectId",
                  "nameLocation": "13607:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1080,
                  "src": "13599:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13599:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13589:34:18"
            },
            "returnParameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1019,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1080,
                  "src": "13654:13:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1018,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13654:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13653:15:18"
            },
            "scope": 1398,
            "src": "13577:839:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1095,
              "nodeType": "Block",
              "src": "14472:54:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1086,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1082,
                          "src": "14490:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14506:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14498:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1087,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14498:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14498:10:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14490:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "782061646472",
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14510:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7756967b3d494e470fc93aa46404ba2040a76d5122bdfecbd650f380cf3094be",
                          "typeString": "literal_string \"x addr\""
                        },
                        "value": "x addr"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7756967b3d494e470fc93aa46404ba2040a76d5122bdfecbd650f380cf3094be",
                          "typeString": "literal_string \"x addr\""
                        }
                      ],
                      "id": 1085,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14482:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14482:37:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1094,
                  "nodeType": "ExpressionStatement",
                  "src": "14482:37:18"
                }
              ]
            },
            "id": 1096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkAddress",
            "nameLocation": "14431:13:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1082,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "14453:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "14445:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1081,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14445:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14444:14:18"
            },
            "returnParameters": {
              "id": 1084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14472:0:18"
            },
            "scope": 1398,
            "src": "14422:104:18",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1114,
              "nodeType": "Block",
              "src": "14919:64:18",
              "statements": [
                {
                  "expression": {
                    "id": 1106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1104,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "14929:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1105,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1099,
                      "src": "14938:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14929:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1107,
                  "nodeType": "ExpressionStatement",
                  "src": "14929:16:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1111,
                        "name": "_paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1099,
                        "src": "14968:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 1108,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "14955:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStaker_$1504",
                          "typeString": "contract IStaker"
                        }
                      },
                      "id": 1110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14962:5:18",
                      "memberName": "pause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1498,
                      "src": "14955:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 1112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14955:21:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1113,
                  "nodeType": "ExpressionStatement",
                  "src": "14955:21:18"
                }
              ]
            },
            "documentation": {
              "id": 1097,
              "nodeType": "StructuredDocumentation",
              "src": "14532:334:18",
              "text": " This function is used to pause or unpause contract.\n Caller of this function must be the owner of the contract.\n It updates the paused state of the contract and calls the pause function of\n the staker.\n @param _paused A boolean indicating whether staking should be paused or\n unpaused."
            },
            "functionSelector": "02329a29",
            "id": 1115,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1102,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1101,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "14909:9:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3474,
                  "src": "14909:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "14909:9:18"
              }
            ],
            "name": "pause",
            "nameLocation": "14880:5:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1099,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "14891:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1115,
                  "src": "14886:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1098,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14886:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14885:14:18"
            },
            "returnParameters": {
              "id": 1103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14919:0:18"
            },
            "scope": 1398,
            "src": "14871:112:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1239,
              "nodeType": "Block",
              "src": "15107:994:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1127,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "15131:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1126,
                      "name": "_checkAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1096,
                      "src": "15117:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 1128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15117:17:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1129,
                  "nodeType": "ExpressionStatement",
                  "src": "15117:17:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 1133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1131,
                          "name": "projectId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1117,
                          "src": "15152:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15164:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15152:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2170726f6a6563744964",
                        "id": 1134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15167:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2968ddb0ef45da24b0223e500db89fb777100fa8e717076b0e84db9b35604943",
                          "typeString": "literal_string \"!projectId\""
                        },
                        "value": "!projectId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2968ddb0ef45da24b0223e500db89fb777100fa8e717076b0e84db9b35604943",
                          "typeString": "literal_string \"!projectId\""
                        }
                      ],
                      "id": 1130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15144:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15144:36:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1136,
                  "nodeType": "ExpressionStatement",
                  "src": "15144:36:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 1140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1138,
                          "name": "qty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1119,
                          "src": "15198:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15204:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15198:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21717479",
                        "id": 1141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15207:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94de11adf9f8c898de132cca41cc4c022e22f0d0c43e8a634e891246a032145d",
                          "typeString": "literal_string \"!qty\""
                        },
                        "value": "!qty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94de11adf9f8c898de132cca41cc4c022e22f0d0c43e8a634e891246a032145d",
                          "typeString": "literal_string \"!qty\""
                        }
                      ],
                      "id": 1137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15190:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15190:24:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1143,
                  "nodeType": "ExpressionStatement",
                  "src": "15190:24:18"
                },
                {
                  "assignments": [
                    1146
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1146,
                      "mutability": "mutable",
                      "name": "project",
                      "nameLocation": "15244:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1239,
                      "src": "15225:26:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                        "typeString": "struct ProjectInfo"
                      },
                      "typeName": {
                        "id": 1145,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1144,
                          "name": "ProjectInfo",
                          "nameLocations": [
                            "15225:11:18"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3414,
                          "src": "15225:11:18"
                        },
                        "referencedDeclaration": 3414,
                        "src": "15225:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectInfo_$3414_storage_ptr",
                          "typeString": "struct ProjectInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1150,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1147,
                      "name": "_projects",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4814,
                      "src": "15254:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_ProjectInfo_$3414_storage_$",
                        "typeString": "mapping(uint32 => struct ProjectInfo storage ref)"
                      }
                    },
                    "id": 1149,
                    "indexExpression": {
                      "id": 1148,
                      "name": "projectId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1117,
                      "src": "15264:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15254:20:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProjectInfo_$3414_storage",
                      "typeString": "struct ProjectInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15225:49:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1152,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1146,
                        "src": "15298:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                          "typeString": "struct ProjectInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                          "typeString": "struct ProjectInfo memory"
                        }
                      ],
                      "id": 1151,
                      "name": "_checkProject",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 644,
                      "src": "15284:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_ProjectInfo_$3414_memory_ptr_$returns$__$",
                        "typeString": "function (struct ProjectInfo memory) pure"
                      }
                    },
                    "id": 1153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15284:22:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1154,
                  "nodeType": "ExpressionStatement",
                  "src": "15284:22:18"
                },
                {
                  "assignments": [
                    1156
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1156,
                      "mutability": "mutable",
                      "name": "supply",
                      "nameLocation": "15391:6:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1239,
                      "src": "15383:14:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1155,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "15383:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1160,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1157,
                      "name": "_supplyFor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "15400:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint32_$_t_uint128_$",
                        "typeString": "mapping(uint32 => uint128)"
                      }
                    },
                    "id": 1159,
                    "indexExpression": {
                      "id": 1158,
                      "name": "projectId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1117,
                      "src": "15411:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15400:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15383:38:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 1164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1162,
                          "name": "supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1156,
                          "src": "15439:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1163,
                          "name": "qty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1119,
                          "src": "15449:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "15439:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "65786365656420737570706c79",
                        "id": 1165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15454:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d945944c67f6634df5131f214565a32ca6c03a4116a34c9ec27c81ecb7fdad0",
                          "typeString": "literal_string \"exceed supply\""
                        },
                        "value": "exceed supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d945944c67f6634df5131f214565a32ca6c03a4116a34c9ec27c81ecb7fdad0",
                          "typeString": "literal_string \"exceed supply\""
                        }
                      ],
                      "id": 1161,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15431:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15431:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1167,
                  "nodeType": "ExpressionStatement",
                  "src": "15431:39:18"
                },
                {
                  "assignments": [
                    1170
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1170,
                      "mutability": "mutable",
                      "name": "sti",
                      "nameLocation": "15540:3:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1239,
                      "src": "15523:20:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakeInfo_$3427_memory_ptr",
                        "typeString": "struct StakeInfo"
                      },
                      "typeName": {
                        "id": 1169,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1168,
                          "name": "StakeInfo",
                          "nameLocations": [
                            "15523:9:18"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3427,
                          "src": "15523:9:18"
                        },
                        "referencedDeclaration": 3427,
                        "src": "15523:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakeInfo_$3427_storage_ptr",
                          "typeString": "struct StakeInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1176,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1173,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "15571:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1174,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1117,
                        "src": "15575:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 1171,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "15546:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStaker_$1504",
                          "typeString": "contract IStaker"
                        }
                      },
                      "id": 1172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15553:17:18",
                      "memberName": "getStakingInfoRaw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1473,
                      "src": "15546:24:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint32_$returns$_t_struct$_StakeInfo_$3427_memory_ptr_$",
                        "typeString": "function (address,uint32) view external returns (struct StakeInfo memory)"
                      }
                    },
                    "id": 1175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15546:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeInfo_$3427_memory_ptr",
                      "typeString": "struct StakeInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15523:62:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 1180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1177,
                        "name": "sti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1170,
                        "src": "15599:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakeInfo_$3427_memory_ptr",
                          "typeString": "struct StakeInfo memory"
                        }
                      },
                      "id": 1178,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15603:3:18",
                      "memberName": "qty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3418,
                      "src": "15599:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15609:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "15599:11:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1195,
                  "nodeType": "IfStatement",
                  "src": "15595:106:18",
                  "trueBody": {
                    "id": 1194,
                    "nodeType": "Block",
                    "src": "15612:89:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 1183,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1121,
                                      "src": "15644:2:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1184,
                                      "name": "projectId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1117,
                                      "src": "15648:9:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    ],
                                    "id": 1182,
                                    "name": "balanceOf",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3687,
                                    "src": "15634:9:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (address,uint256) view returns (uint256)"
                                    }
                                  },
                                  "id": 1185,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15634:24:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1186,
                                  "name": "qty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1119,
                                  "src": "15661:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "15634:30:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1188,
                                  "name": "sti",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1170,
                                  "src": "15668:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakeInfo_$3427_memory_ptr",
                                    "typeString": "struct StakeInfo memory"
                                  }
                                },
                                "id": 1189,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "15672:3:18",
                                "memberName": "qty",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3418,
                                "src": "15668:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "src": "15634:41:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "696e207374616b696e67",
                              "id": 1191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15677:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c03900dec97dc9ad2ac6f1c455db30f16e3247a2bf6c006c4468316b2e757bec",
                                "typeString": "literal_string \"in staking\""
                              },
                              "value": "in staking"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c03900dec97dc9ad2ac6f1c455db30f16e3247a2bf6c006c4468316b2e757bec",
                                "typeString": "literal_string \"in staking\""
                              }
                            ],
                            "id": 1181,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15626:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15626:64:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1193,
                        "nodeType": "ExpressionStatement",
                        "src": "15626:64:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1196,
                        "name": "_supplyFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "15711:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_uint128_$",
                          "typeString": "mapping(uint32 => uint128)"
                        }
                      },
                      "id": 1198,
                      "indexExpression": {
                        "id": 1197,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1117,
                        "src": "15722:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15711:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1199,
                      "name": "qty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1119,
                      "src": "15736:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "15711:28:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 1201,
                  "nodeType": "ExpressionStatement",
                  "src": "15711:28:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1203,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "15756:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1204,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1117,
                        "src": "15760:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1205,
                        "name": "qty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1119,
                        "src": "15771:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 1202,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4365,
                      "src": "15750:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15750:25:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1207,
                  "nodeType": "ExpressionStatement",
                  "src": "15750:25:18"
                },
                {
                  "condition": {
                    "expression": {
                      "id": 1208,
                      "name": "project",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1146,
                      "src": "15790:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                        "typeString": "struct ProjectInfo memory"
                      }
                    },
                    "id": 1209,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "15798:14:18",
                    "memberName": "authorizedOnly",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3399,
                    "src": "15790:22:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1229,
                    "nodeType": "Block",
                    "src": "15857:176:18",
                    "statements": [
                      {
                        "assignments": [
                          1212
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1212,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "15879:6:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 1229,
                            "src": "15871:14:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1211,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15871:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1217,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1213,
                            "name": "qty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1119,
                            "src": "15888:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "expression": {
                              "id": 1214,
                              "name": "project",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1146,
                              "src": "15894:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ProjectInfo_$3414_memory_ptr",
                                "typeString": "struct ProjectInfo memory"
                              }
                            },
                            "id": 1215,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15902:5:18",
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3397,
                            "src": "15894:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15888:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15871:36:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1223,
                                  "name": "staker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34,
                                  "src": "16002:6:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStaker_$1504",
                                    "typeString": "contract IStaker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IStaker_$1504",
                                    "typeString": "contract IStaker"
                                  }
                                ],
                                "id": 1222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15994:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1221,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15994:7:18",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15994:15:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1225,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1121,
                              "src": "16011:2:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1226,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1212,
                              "src": "16015:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1218,
                              "name": "stableCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "15966:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICoin_$3374",
                                "typeString": "contract ICoin"
                              }
                            },
                            "id": 1220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15977:16:18",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3053,
                            "src": "15966:27:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4908_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4908_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 1227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15966:56:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1228,
                        "nodeType": "ExpressionStatement",
                        "src": "15966:56:18"
                      }
                    ]
                  },
                  "id": 1230,
                  "nodeType": "IfStatement",
                  "src": "15786:247:18",
                  "trueBody": {
                    "id": 1210,
                    "nodeType": "Block",
                    "src": "15814:37:18",
                    "statements": []
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1232,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1117,
                        "src": "16053:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1233,
                        "name": "qty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1119,
                        "src": "16064:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1234,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "16069:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1231,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "16048:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_uint128_$_t_address_$returns$__$",
                        "typeString": "function (uint32,uint128,address)"
                      }
                    },
                    "id": 1235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16048:24:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1236,
                  "nodeType": "EmitStatement",
                  "src": "16043:29:18"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "16090:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1125,
                  "id": 1238,
                  "nodeType": "Return",
                  "src": "16083:11:18"
                }
              ]
            },
            "id": 1240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnInternal",
            "nameLocation": "14998:13:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1117,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "15028:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "15021:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1116,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15021:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1119,
                  "mutability": "mutable",
                  "name": "qty",
                  "nameLocation": "15054:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "15047:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1118,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15047:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1121,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15075:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "15067:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15067:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15011:72:18"
            },
            "returnParameters": {
              "id": 1125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1124,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "15101:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1123,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15101:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15100:6:18"
            },
            "scope": 1398,
            "src": "14989:1112:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1277,
              "nodeType": "Block",
              "src": "16427:205:18",
              "statements": [
                {
                  "assignments": [
                    1253
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1253,
                      "mutability": "mutable",
                      "name": "_sender",
                      "nameLocation": "16445:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1277,
                      "src": "16437:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1252,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "16437:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1256,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1254,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5763,
                      "src": "16455:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16455:12:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16437:30:18"
                },
                {
                  "assignments": [
                    1258
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1258,
                      "mutability": "mutable",
                      "name": "_ownedQty",
                      "nameLocation": "16485:9:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1277,
                      "src": "16477:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1257,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16477:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1263,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1260,
                        "name": "_sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1253,
                        "src": "16507:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1261,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1243,
                        "src": "16516:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 1259,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3687,
                      "src": "16497:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16497:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16477:49:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1265,
                          "name": "_ownedQty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1258,
                          "src": "16544:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1266,
                          "name": "qty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1245,
                          "src": "16557:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "16544:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "717479203e",
                        "id": 1268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16562:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2084793de3f64fd0be902c13aef3e30c4f70d54d321680c64bf7651fe22c15a1",
                          "typeString": "literal_string \"qty >\""
                        },
                        "value": "qty >"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2084793de3f64fd0be902c13aef3e30c4f70d54d321680c64bf7651fe22c15a1",
                          "typeString": "literal_string \"qty >\""
                        }
                      ],
                      "id": 1264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16536:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16536:34:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1270,
                  "nodeType": "ExpressionStatement",
                  "src": "16536:34:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1272,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1243,
                        "src": "16601:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1273,
                        "name": "qty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1245,
                        "src": "16612:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1274,
                        "name": "_sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1253,
                        "src": "16617:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1271,
                      "name": "_burnInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1240,
                      "src": "16587:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_uint32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint32,uint32,address) returns (bool)"
                      }
                    },
                    "id": 1275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16587:38:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1251,
                  "id": 1276,
                  "nodeType": "Return",
                  "src": "16580:45:18"
                }
              ]
            },
            "documentation": {
              "id": 1241,
              "nodeType": "StructuredDocumentation",
              "src": "16107:212:18",
              "text": " @dev Burn NFT and claim back the mint price to the NFT owner.\n      this will emit Burn event when success.\n @param projectId Project id.\n @param qty Quantity of NFTs to burn."
            },
            "functionSelector": "7e28eb44",
            "id": 1278,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1248,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1247,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "16399:12:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3570,
                  "src": "16399:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "16399:12:18"
              }
            ],
            "name": "burn",
            "nameLocation": "16333:4:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1243,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "16354:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1278,
                  "src": "16347:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1242,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16347:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1245,
                  "mutability": "mutable",
                  "name": "qty",
                  "nameLocation": "16380:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1278,
                  "src": "16373:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1244,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16373:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16337:52:18"
            },
            "returnParameters": {
              "id": 1251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1250,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1278,
                  "src": "16421:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1249,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16421:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16420:6:18"
            },
            "scope": 1398,
            "src": "16324:308:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1300,
              "nodeType": "Block",
              "src": "17109:57:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1295,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1281,
                        "src": "17140:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1296,
                        "name": "qty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1283,
                        "src": "17151:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1297,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1285,
                        "src": "17156:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1294,
                      "name": "_burnInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1240,
                      "src": "17126:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_uint32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint32,uint32,address) returns (bool)"
                      }
                    },
                    "id": 1298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17126:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1293,
                  "id": 1299,
                  "nodeType": "Return",
                  "src": "17119:40:18"
                }
              ]
            },
            "documentation": {
              "id": 1279,
              "nodeType": "StructuredDocumentation",
              "src": "16638:320:18",
              "text": " @dev Burn NFT by admin and return the mint price to the NFT owner.\n      Caller of this function must be admin.\n      this will emit Burn event when success.\n @param projectId Project id.\n @param qty Quantity of NFTs to burn.\n @param to the owner of the NFT to be burned."
            },
            "functionSelector": "3ba60d16",
            "id": 1301,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1288,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1287,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "17071:9:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3250,
                  "src": "17071:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "17071:9:18"
              },
              {
                "id": 1290,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1289,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "17081:12:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3570,
                  "src": "17081:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "17081:12:18"
              }
            ],
            "name": "adminBurn",
            "nameLocation": "16972:9:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1281,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "16998:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1301,
                  "src": "16991:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1280,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16991:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1283,
                  "mutability": "mutable",
                  "name": "qty",
                  "nameLocation": "17024:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1301,
                  "src": "17017:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1282,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17017:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1285,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "17045:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1301,
                  "src": "17037:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1284,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17037:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16981:72:18"
            },
            "returnParameters": {
              "id": 1293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1292,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1301,
                  "src": "17103:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1291,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17103:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17102:6:18"
            },
            "scope": 1398,
            "src": "16963:203:18",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1320,
              "nodeType": "Block",
              "src": "17296:73:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1313,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1303,
                        "src": "17335:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1316,
                            "name": "projectId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1305,
                            "src": "17351:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17344:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 1314,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "17344:6:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17344:17:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 1311,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "17313:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStaker_$1504",
                          "typeString": "contract IStaker"
                        }
                      },
                      "id": 1312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17320:14:18",
                      "memberName": "getHoldingInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1433,
                      "src": "17313:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint32_$returns$_t_struct$_HoldingInfo_$3385_memory_ptr_$",
                        "typeString": "function (address,uint32) view external returns (struct HoldingInfo memory)"
                      }
                    },
                    "id": 1318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17313:49:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                      "typeString": "struct HoldingInfo memory"
                    }
                  },
                  "functionReturnParameters": 1310,
                  "id": 1319,
                  "nodeType": "Return",
                  "src": "17306:56:18"
                }
              ]
            },
            "functionSelector": "aeaed1b7",
            "id": 1321,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHoldingInfo",
            "nameLocation": "17181:14:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1303,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "17213:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "17205:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17205:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1305,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "17237:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "17230:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1304,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17230:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17195:57:18"
            },
            "returnParameters": {
              "id": 1310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1309,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "17276:18:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                    "typeString": "struct HoldingInfo"
                  },
                  "typeName": {
                    "id": 1308,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1307,
                      "name": "HoldingInfo",
                      "nameLocations": [
                        "17276:11:18"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3385,
                      "src": "17276:11:18"
                    },
                    "referencedDeclaration": 3385,
                    "src": "17276:11:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HoldingInfo_$3385_storage_ptr",
                      "typeString": "struct HoldingInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17275:20:18"
            },
            "scope": 1398,
            "src": "17172:197:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1348,
              "nodeType": "Block",
              "src": "17684:141:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1331,
                                  "name": "_staker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1324,
                                  "src": "17740:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1330,
                                "name": "IStaker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1504,
                                "src": "17732:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IStaker_$1504_$",
                                  "typeString": "type(contract IStaker)"
                                }
                              },
                              "id": 1332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17732:16:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStaker_$1504",
                                "typeString": "contract IStaker"
                              }
                            },
                            "id": 1333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17749:5:18",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1503,
                            "src": "17732:22:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 1334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17732:24:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1335,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "17760:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HouseOfPanda_$1398",
                                "typeString": "contract HouseOfPanda"
                              }
                            },
                            "id": 1336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17765:5:18",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3460,
                            "src": "17760:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 1337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17760:12:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "17732:40:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "216f776e6572",
                        "id": 1339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17774:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f90560991e3f715cdce86f88841433ea2f749a73c924ce7483b146bbc74f1efa",
                          "typeString": "literal_string \"!owner\""
                        },
                        "value": "!owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f90560991e3f715cdce86f88841433ea2f749a73c924ce7483b146bbc74f1efa",
                          "typeString": "literal_string \"!owner\""
                        }
                      ],
                      "id": 1329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17724:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17724:59:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1341,
                  "nodeType": "ExpressionStatement",
                  "src": "17724:59:18"
                },
                {
                  "expression": {
                    "id": 1346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1342,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "17793:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStaker_$1504",
                        "typeString": "contract IStaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1344,
                          "name": "_staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1324,
                          "src": "17810:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1343,
                        "name": "IStaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1504,
                        "src": "17802:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IStaker_$1504_$",
                          "typeString": "type(contract IStaker)"
                        }
                      },
                      "id": 1345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17802:16:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStaker_$1504",
                        "typeString": "contract IStaker"
                      }
                    },
                    "src": "17793:25:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStaker_$1504",
                      "typeString": "contract IStaker"
                    }
                  },
                  "id": 1347,
                  "nodeType": "ExpressionStatement",
                  "src": "17793:25:18"
                }
              ]
            },
            "documentation": {
              "id": 1322,
              "nodeType": "StructuredDocumentation",
              "src": "17375:246:18",
              "text": " This function is used to update contract staker.\n It must be called by the owner of the contract. \n It checks that the staker's owner is the same as the contract's owner.\n @param _staker address of the staker."
            },
            "functionSelector": "2465b556",
            "id": 1349,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1327,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1326,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "17674:9:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3474,
                  "src": "17674:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "17674:9:18"
              }
            ],
            "name": "updateStaker",
            "nameLocation": "17635:12:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1324,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "17656:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1349,
                  "src": "17648:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17648:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17647:17:18"
            },
            "returnParameters": {
              "id": 1328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17684:0:18"
            },
            "scope": 1398,
            "src": "17626:199:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1396,
              "nodeType": "Block",
              "src": "18817:265:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1364,
                        "name": "investor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1352,
                        "src": "18841:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1363,
                      "name": "_checkAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1096,
                      "src": "18827:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 1365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18827:23:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1366,
                  "nodeType": "ExpressionStatement",
                  "src": "18827:23:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 1370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1368,
                          "name": "projectId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1354,
                          "src": "18868:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18880:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "18868:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2170726f6a6563744964",
                        "id": 1371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18883:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2968ddb0ef45da24b0223e500db89fb777100fa8e717076b0e84db9b35604943",
                          "typeString": "literal_string \"!projectId\""
                        },
                        "value": "!projectId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2968ddb0ef45da24b0223e500db89fb777100fa8e717076b0e84db9b35604943",
                          "typeString": "literal_string \"!projectId\""
                        }
                      ],
                      "id": 1367,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18860:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18860:36:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1373,
                  "nodeType": "ExpressionStatement",
                  "src": "18860:36:18"
                },
                {
                  "assignments": [
                    1376
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1376,
                      "mutability": "mutable",
                      "name": "hld",
                      "nameLocation": "18925:3:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1396,
                      "src": "18906:22:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                        "typeString": "struct HoldingInfo"
                      },
                      "typeName": {
                        "id": 1375,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1374,
                          "name": "HoldingInfo",
                          "nameLocations": [
                            "18906:11:18"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3385,
                          "src": "18906:11:18"
                        },
                        "referencedDeclaration": 3385,
                        "src": "18906:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_HoldingInfo_$3385_storage_ptr",
                          "typeString": "struct HoldingInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1382,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1379,
                        "name": "investor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1352,
                        "src": "18953:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1380,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1354,
                        "src": "18963:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 1377,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "18931:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStaker_$1504",
                          "typeString": "contract IStaker"
                        }
                      },
                      "id": 1378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18938:14:18",
                      "memberName": "getHoldingInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1433,
                      "src": "18931:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint32_$returns$_t_struct$_HoldingInfo_$3385_memory_ptr_$",
                        "typeString": "function (address,uint32) view external returns (struct HoldingInfo memory)"
                      }
                    },
                    "id": 1381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18931:42:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                      "typeString": "struct HoldingInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18906:67:18"
                },
                {
                  "assignments": [
                    1385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1385,
                      "mutability": "mutable",
                      "name": "stk",
                      "nameLocation": "19000:3:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 1396,
                      "src": "18983:20:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakeInfo_$3427_memory_ptr",
                        "typeString": "struct StakeInfo"
                      },
                      "typeName": {
                        "id": 1384,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1383,
                          "name": "StakeInfo",
                          "nameLocations": [
                            "18983:9:18"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3427,
                          "src": "18983:9:18"
                        },
                        "referencedDeclaration": 3427,
                        "src": "18983:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakeInfo_$3427_storage_ptr",
                          "typeString": "struct StakeInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1391,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1388,
                        "name": "investor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1352,
                        "src": "19028:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1389,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1354,
                        "src": "19038:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 1386,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "19006:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStaker_$1504",
                          "typeString": "contract IStaker"
                        }
                      },
                      "id": 1387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19013:14:18",
                      "memberName": "getStakingInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1463,
                      "src": "19006:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint32_$returns$_t_struct$_StakeInfo_$3427_memory_ptr_$",
                        "typeString": "function (address,uint32) view external returns (struct StakeInfo memory)"
                      }
                    },
                    "id": 1390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19006:42:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeInfo_$3427_memory_ptr",
                      "typeString": "struct StakeInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18983:65:18"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1392,
                        "name": "hld",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1376,
                        "src": "19066:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                          "typeString": "struct HoldingInfo memory"
                        }
                      },
                      {
                        "id": 1393,
                        "name": "stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1385,
                        "src": "19071:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakeInfo_$3427_memory_ptr",
                          "typeString": "struct StakeInfo memory"
                        }
                      }
                    ],
                    "id": 1394,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "19065:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_HoldingInfo_$3385_memory_ptr_$_t_struct$_StakeInfo_$3427_memory_ptr_$",
                      "typeString": "tuple(struct HoldingInfo memory,struct StakeInfo memory)"
                    }
                  },
                  "functionReturnParameters": 1362,
                  "id": 1395,
                  "nodeType": "Return",
                  "src": "19058:17:18"
                }
              ]
            },
            "documentation": {
              "id": 1350,
              "nodeType": "StructuredDocumentation",
              "src": "17831:833:18",
              "text": " This function allows users to retrieve the asset allocation and staking\n information of the given investor and project ID.\n It takes in two parameters: 'investor' (the address of the investor) and\n 'projectId' (the ID of the project).\n It first checks to make sure the investor address is valid and that a valid\n project ID was supplied.\n It then retrieves the holding information and staking information of the\n respective investor and project,\n and returns a tuple containing both pieces of information.\n \n @param investor The address of the investor.\n @param projectId The ID of the project.\n @return (HoldingInfo memory, StakeInfo memory) A tuple containing the asset\n allocation and staking information of the investor and project."
            },
            "functionSelector": "5ceb9f14",
            "id": 1397,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssetAlloc",
            "nameLocation": "18678:13:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1352,
                  "mutability": "mutable",
                  "name": "investor",
                  "nameLocation": "18700:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1397,
                  "src": "18692:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18692:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1354,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "18717:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 1397,
                  "src": "18710:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1353,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "18710:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18691:36:18"
            },
            "returnParameters": {
              "id": 1362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1358,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1397,
                  "src": "18775:18:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_HoldingInfo_$3385_memory_ptr",
                    "typeString": "struct HoldingInfo"
                  },
                  "typeName": {
                    "id": 1357,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1356,
                      "name": "HoldingInfo",
                      "nameLocations": [
                        "18775:11:18"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3385,
                      "src": "18775:11:18"
                    },
                    "referencedDeclaration": 3385,
                    "src": "18775:11:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HoldingInfo_$3385_storage_ptr",
                      "typeString": "struct HoldingInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1361,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1397,
                  "src": "18795:16:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$3427_memory_ptr",
                    "typeString": "struct StakeInfo"
                  },
                  "typeName": {
                    "id": 1360,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1359,
                      "name": "StakeInfo",
                      "nameLocations": [
                        "18795:9:18"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3427,
                      "src": "18795:9:18"
                    },
                    "referencedDeclaration": 3427,
                    "src": "18795:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeInfo_$3427_storage_ptr",
                      "typeString": "struct StakeInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18774:38:18"
            },
            "scope": 1398,
            "src": "18669:413:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1399,
        "src": "612:18472:18",
        "usedErrors": []
      }
    ],
    "src": "0:19085:18"
  },
  "bytecode": "",
  "bytecodeSha1": "ff6d862368c9c8e5d42dce1b469b38dc94b66cc8",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "HouseOfPanda",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "248": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "10": {
        "Address.verifyCallResult": {
          "225": [
            7335,
            7342,
            false
          ],
          "226": [
            7476,
            7497,
            false
          ]
        }
      },
      "11": {},
      "12": {
        "Strings.toString": {
          "251": [
            548,
            558,
            false
          ]
        }
      },
      "13": {},
      "14": {},
      "16": {
        "ERC1155Tradable.isApprovedForAll": {
          "244": [
            2549,
            2600,
            false
          ]
        }
      },
      "17": {},
      "18": {
        "HasAdmin._isAdmin": {
          "203": [
            2369,
            2389,
            true
          ]
        },
        "HouseOfPanda._beforeTokenTransfer": {
          "214": [
            4055,
            4073,
            false
          ],
          "215": [
            4077,
            4093,
            false
          ],
          "216": [
            4504,
            4515,
            false
          ],
          "217": [
            4543,
            4590,
            true
          ],
          "218": [
            4699,
            4717,
            false
          ],
          "219": [
            4875,
            4890,
            false
          ],
          "220": [
            5047,
            5074,
            false
          ],
          "221": [
            5676,
            5692,
            false
          ],
          "222": [
            5914,
            5929,
            false
          ],
          "223": [
            5933,
            5960,
            false
          ]
        },
        "HouseOfPanda._burnInternal": {
          "204": [
            15152,
            15165,
            true
          ],
          "205": [
            15198,
            15205,
            true
          ],
          "206": [
            15439,
            15452,
            true
          ],
          "207": [
            15599,
            15610,
            false
          ],
          "208": [
            15634,
            15675,
            true
          ],
          "209": [
            15790,
            15812,
            false
          ]
        },
        "HouseOfPanda._checkAddress": {
          "211": [
            14490,
            14508,
            true
          ]
        },
        "HouseOfPanda._checkProject": {
          "210": [
            8993,
            9007,
            true
          ]
        },
        "HouseOfPanda._getProject": {
          "212": [
            8559,
            8572,
            true
          ],
          "213": [
            8605,
            8641,
            true
          ]
        },
        "HouseOfPanda.authorizedMint": {
          "191": [
            11897,
            11934,
            true
          ],
          "192": [
            12179,
            12202,
            false
          ],
          "193": [
            12226,
            12261,
            true
          ],
          "194": [
            12468,
            12498,
            true
          ],
          "195": [
            12614,
            12625,
            true
          ],
          "196": [
            12629,
            12681,
            true
          ]
        },
        "HouseOfPanda.burn": {
          "198": [
            16544,
            16560,
            true
          ]
        },
        "HouseOfPanda.createProject": {
          "199": [
            7449,
            7463,
            false
          ],
          "200": [
            7487,
            7496,
            true
          ],
          "201": [
            7536,
            7544,
            false
          ],
          "202": [
            7548,
            7558,
            true
          ]
        },
        "HouseOfPanda.getAssetAlloc": {
          "197": [
            18868,
            18881,
            true
          ]
        },
        "HouseOfPanda.min": {
          "224": [
            2873,
            2879,
            true
          ]
        },
        "HouseOfPanda.mint": {
          "179": [
            10206,
            10213,
            true
          ],
          "180": [
            10333,
            10357,
            true
          ],
          "181": [
            10387,
            10423,
            true
          ],
          "182": [
            10452,
            10485,
            true
          ],
          "183": [
            10620,
            10642,
            false
          ],
          "184": [
            10666,
            10677,
            true
          ],
          "185": [
            10750,
            10761,
            true
          ],
          "186": [
            10785,
            10837,
            true
          ],
          "187": [
            11019,
            11042,
            false
          ],
          "188": [
            11066,
            11101,
            true
          ],
          "189": [
            11218,
            11240,
            false
          ],
          "190": [
            11245,
            11256,
            false
          ]
        },
        "HouseOfPanda.updateStaker": {
          "178": [
            17732,
            17772,
            true
          ]
        },
        "HouseOfPanda.uri": {
          "176": [
            13878,
            13903,
            false
          ],
          "177": [
            14105,
            14130,
            true
          ]
        }
      },
      "19": {},
      "2": {
        "ERC1155._burn": {
          "241": [
            10519,
            10540,
            true
          ],
          "242": [
            10814,
            10838,
            true
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "240": [
            14449,
            14509,
            false
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "243": [
            13656,
            13711,
            false
          ]
        },
        "ERC1155._mint": {
          "237": [
            8654,
            8675,
            true
          ]
        },
        "ERC1155._safeBatchTransferFrom": {
          "234": [
            6366,
            6394,
            true
          ],
          "235": [
            6457,
            6473,
            true
          ],
          "236": [
            6832,
            6853,
            true
          ]
        },
        "ERC1155._safeTransferFrom": {
          "238": [
            5198,
            5214,
            true
          ],
          "239": [
            5475,
            5496,
            true
          ]
        },
        "ERC1155.balanceOf": {
          "227": [
            2222,
            2243,
            true
          ]
        },
        "ERC1155.balanceOfBatch": {
          "230": [
            2685,
            2714,
            true
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "228": [
            4362,
            4382,
            true
          ],
          "229": [
            4386,
            4422,
            true
          ]
        },
        "ERC1155.safeTransferFrom": {
          "232": [
            3876,
            3896,
            true
          ],
          "233": [
            3900,
            3936,
            true
          ]
        },
        "ERC1155.setApprovalForAll": {
          "231": [
            3172,
            3196,
            true
          ]
        }
      },
      "20": {},
      "22": {},
      "23": {},
      "24": {
        "NativeMetaTransaction.executeMetaTransaction": {
          "245": [
            1407,
            1452,
            true
          ],
          "246": [
            2018,
            2025,
            true
          ]
        },
        "NativeMetaTransaction.verify": {
          "247": [
            2808,
            2828,
            true
          ]
        }
      },
      "25": {},
      "26": {},
      "27": {},
      "28": {},
      "29": {},
      "3": {},
      "5": {},
      "7": {},
      "9": {
        "SafeERC20._callOptionalReturn": {
          "249": [
            3668,
            3689,
            false
          ],
          "250": [
            3752,
            3782,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "127": [
            2131,
            2148
          ],
          "128": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "2": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "61": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "83": [
            1926,
            1999
          ],
          "84": [
            2009,
            2028
          ]
        }
      },
      "1": {},
      "10": {
        "Address.functionCall": {
          "171": [
            3618,
            3677
          ]
        },
        "Address.functionCallWithValue": {
          "172": [
            4828,
            4888
          ],
          "173": [
            4982,
            5040
          ]
        },
        "Address.isContract": {
          "157": [
            1073,
            1088
          ]
        },
        "Address.verifyCallResult": {
          "174": [
            7358,
            7375
          ],
          "175": [
            7802,
            7822
          ]
        }
      },
      "11": {
        "Context._msgSender": {
          "8": [
            659,
            676
          ]
        }
      },
      "12": {
        "Strings.toString": {
          "89": [
            574,
            584
          ],
          "90": [
            690,
            698
          ],
          "91": [
            712,
            722
          ],
          "92": [
            824,
            835
          ],
          "93": [
            849,
            905
          ],
          "94": [
            919,
            930
          ]
        }
      },
      "13": {
        "ERC165.supportsInterface": {
          "7": [
            864,
            911
          ]
        }
      },
      "14": {},
      "16": {
        "ERC1155Tradable.isApprovedForAll": {
          "78": [
            2616,
            2627
          ],
          "80": [
            2648,
            2698
          ]
        },
        "ERC1155Tradable.setCustomURI": {
          "25": [
            2054,
            2083
          ],
          "26": [
            2093,
            2120
          ]
        },
        "ERC1155Tradable.setURI": {
          "11": [
            1725,
            1741
          ]
        }
      },
      "17": {
        "HasAdmin._isAdmin": {
          "37": [
            870,
            893
          ]
        },
        "HasAdmin._onlyAdmin": {
          "104": [
            511,
            550
          ]
        },
        "HasAdmin._setAdmin": {
          "132": [
            726,
            741
          ],
          "133": [
            751,
            775
          ]
        }
      },
      "18": {
        "HouseOfPanda._beforeTokenTransfer": {
          "143": [
            4109,
            4116
          ],
          "144": [
            4535,
            4605
          ],
          "145": [
            4737,
            4789
          ],
          "146": [
            5000,
            5021
          ],
          "147": [
            5102,
            5368
          ],
          "148": [
            5427,
            5460
          ],
          "149": [
            5479,
            5522
          ],
          "150": [
            5591,
            5643
          ],
          "151": [
            5760,
            5810
          ],
          "152": [
            5984,
            6230
          ],
          "153": [
            6267,
            6288
          ],
          "154": [
            6306,
            6339
          ],
          "155": [
            6358,
            6408
          ],
          "156": [
            4209,
            4212
          ]
        },
        "HouseOfPanda._burnInternal": {
          "105": [
            15117,
            15134
          ],
          "106": [
            15144,
            15180
          ],
          "107": [
            15190,
            15214
          ],
          "108": [
            15284,
            15306
          ],
          "109": [
            15431,
            15470
          ],
          "110": [
            15626,
            15690
          ],
          "111": [
            15711,
            15739
          ],
          "112": [
            15750,
            15775
          ],
          "113": [
            15966,
            16022
          ],
          "114": [
            16043,
            16072
          ],
          "115": [
            16083,
            16094
          ]
        },
        "HouseOfPanda._checkAddress": {
          "124": [
            14482,
            14519
          ]
        },
        "HouseOfPanda._checkProject": {
          "116": [
            8985,
            9020
          ]
        },
        "HouseOfPanda._exists": {
          "17": [
            8250,
            8293
          ]
        },
        "HouseOfPanda._getProject": {
          "129": [
            8551,
            8587
          ],
          "130": [
            8597,
            8654
          ],
          "131": [
            8664,
            8691
          ]
        },
        "HouseOfPanda._isOwner": {
          "117": [
            2754,
            2779
          ]
        },
        "HouseOfPanda.adminBurn": {
          "27": [
            17119,
            17159
          ]
        },
        "HouseOfPanda.authorizedMint": {
          "46": [
            11889,
            11946
          ],
          "47": [
            11956,
            11973
          ],
          "48": [
            12070,
            12092
          ],
          "49": [
            12218,
            12271
          ],
          "50": [
            12460,
            12514
          ],
          "51": [
            12593,
            12716
          ],
          "52": [
            12727,
            12755
          ],
          "53": [
            12808,
            12926
          ],
          "54": [
            12937,
            12966
          ],
          "55": [
            12977,
            13015
          ],
          "56": [
            13026,
            13037
          ]
        },
        "HouseOfPanda.burn": {
          "62": [
            16536,
            16570
          ],
          "63": [
            16580,
            16625
          ]
        },
        "HouseOfPanda.changeAdmin": {
          "65": [
            2266,
            2286
          ]
        },
        "HouseOfPanda.createProject": {
          "69": [
            7479,
            7508
          ],
          "70": [
            7528,
            7569
          ],
          "71": [
            8069,
            8093
          ],
          "72": [
            8103,
            8121
          ],
          "73": [
            8132,
            8163
          ]
        },
        "HouseOfPanda.getAssetAlloc": {
          "57": [
            18827,
            18850
          ],
          "58": [
            18860,
            18896
          ],
          "59": [
            19058,
            19075
          ]
        },
        "HouseOfPanda.getHoldingInfo": {
          "74": [
            17306,
            17362
          ]
        },
        "HouseOfPanda.getProject": {
          "64": [
            8816,
            8845
          ]
        },
        "HouseOfPanda.min": {
          "170": [
            2866,
            2887
          ]
        },
        "HouseOfPanda.mint": {
          "32": [
            10198,
            10224
          ],
          "33": [
            10293,
            10315
          ],
          "34": [
            10325,
            10369
          ],
          "35": [
            10379,
            10434
          ],
          "36": [
            10444,
            10496
          ],
          "38": [
            10658,
            10694
          ],
          "39": [
            10725,
            10880
          ],
          "40": [
            11058,
            11111
          ],
          "41": [
            11132,
            11160
          ],
          "42": [
            11272,
            11408
          ],
          "43": [
            11429,
            11458
          ],
          "44": [
            11469,
            11512
          ],
          "45": [
            11523,
            11534
          ]
        },
        "HouseOfPanda.pause": {
          "9": [
            14929,
            14945
          ],
          "10": [
            14955,
            14976
          ]
        },
        "HouseOfPanda.projectExists": {
          "60": [
            8407,
            8432
          ]
        },
        "HouseOfPanda.setProjectStatus": {
          "75": [
            9658,
            9697
          ],
          "76": [
            9707,
            9743
          ],
          "77": [
            9753,
            9797
          ]
        },
        "HouseOfPanda.supplyFor": {
          "3": [
            13189,
            13217
          ]
        },
        "HouseOfPanda.updateStaker": {
          "21": [
            17724,
            17783
          ],
          "22": [
            17793,
            17818
          ]
        },
        "HouseOfPanda.uri": {
          "18": [
            13679,
            13727
          ],
          "19": [
            13919,
            13947
          ],
          "20": [
            14082,
            14399
          ]
        }
      },
      "19": {
        "SigVerifier._isSigner": {
          "126": [
            842,
            899
          ]
        },
        "SigVerifier.sigPrefixed": {
          "125": [
            564,
            682
          ]
        }
      },
      "2": {
        "ERC1155._asSingletonArray": {
          "167": [
            14967,
            14985
          ],
          "168": [
            14996,
            15008
          ]
        },
        "ERC1155._burn": {
          "161": [
            10511,
            10580
          ],
          "162": [
            10633,
            10738
          ],
          "163": [
            10806,
            10879
          ],
          "164": [
            10913,
            10961
          ],
          "165": [
            10982,
            11044
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "158": [
            14669,
            14683
          ],
          "159": [
            14723,
            14785
          ],
          "160": [
            14533,
            14583
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "169": [
            13735,
            13785
          ]
        },
        "ERC1155._mint": {
          "119": [
            8646,
            8713
          ],
          "120": [
            8766,
            8873
          ],
          "121": [
            8884,
            8916
          ],
          "122": [
            8926,
            8988
          ],
          "123": [
            8999,
            9078
          ]
        },
        "ERC1155._safeBatchTransferFrom": {
          "95": [
            6358,
            6439
          ],
          "96": [
            6449,
            6515
          ],
          "97": [
            6568,
            6628
          ],
          "98": [
            6824,
            6900
          ],
          "99": [
            6942,
            6984
          ],
          "100": [
            7012,
            7039
          ],
          "101": [
            6675,
            6678
          ],
          "102": [
            7060,
            7112
          ],
          "103": [
            7123,
            7198
          ]
        },
        "ERC1155._safeTransferFrom": {
          "134": [
            5190,
            5256
          ],
          "135": [
            5309,
            5405
          ],
          "136": [
            5467,
            5543
          ],
          "137": [
            5577,
            5619
          ],
          "138": [
            5639,
            5666
          ],
          "139": [
            5677,
            5728
          ],
          "140": [
            5739,
            5807
          ]
        },
        "ERC1155._setURI": {
          "85": [
            8094,
            8107
          ]
        },
        "ERC1155.balanceOf": {
          "4": [
            2214,
            2291
          ],
          "5": [
            2301,
            2330
          ]
        },
        "ERC1155.balanceOfBatch": {
          "28": [
            2677,
            2760
          ],
          "29": [
            2905,
            2954
          ],
          "30": [
            2886,
            2889
          ],
          "31": [
            2975,
            2995
          ]
        },
        "ERC1155.isApprovedForAll": {
          "79": [
            3558,
            3602
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "23": [
            4341,
            4498
          ],
          "24": [
            4508,
            4560
          ]
        },
        "ERC1155.safeTransferFrom": {
          "81": [
            3855,
            4003
          ],
          "82": [
            4013,
            4058
          ]
        },
        "ERC1155.setApprovalForAll": {
          "66": [
            3164,
            3242
          ],
          "67": [
            3253,
            3306
          ],
          "68": [
            3316,
            3369
          ]
        },
        "ERC1155.supportsInterface": {
          "6": [
            1278,
            1458
          ]
        },
        "ERC1155.uri": {
          "88": [
            1949,
            1960
          ]
        }
      },
      "20": {},
      "22": {
        "EIP712Base.getDomainSeperator": {
          "0": [
            1334,
            1356
          ]
        },
        "EIP712Base.toTypedMessageHash": {
          "142": [
            2003,
            2126
          ]
        }
      },
      "23": {},
      "24": {
        "NativeMetaTransaction.executeMetaTransaction": {
          "12": [
            1386,
            1511
          ],
          "13": [
            1575,
            1623
          ],
          "14": [
            1634,
            1761
          ],
          "15": [
            2010,
            2058
          ],
          "16": [
            2069,
            2086
          ]
        },
        "NativeMetaTransaction.getNonce": {
          "1": [
            2579,
            2599
          ]
        },
        "NativeMetaTransaction.hashMetaTransaction": {
          "141": [
            2229,
            2488
          ]
        },
        "NativeMetaTransaction.verify": {
          "86": [
            2800,
            2870
          ],
          "87": [
            2880,
            3075
          ]
        }
      },
      "25": {},
      "26": {},
      "27": {},
      "28": {},
      "29": {},
      "3": {},
      "5": {},
      "7": {},
      "9": {
        "SafeERC20._callOptionalReturn": {
          "166": [
            3744,
            3829
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "118": [
            983,
            1079
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "EIP712Base",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC1155",
    "ERC1155Tradable",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC165",
    "HasAdmin",
    "ICoin",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC1155",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC1155MetadataURI",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20",
    "IHasAdmin",
    "IProjectMan",
    "ISigVerifier",
    "IStaker",
    "Initializable",
    "NativeMetaTransaction",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/SafeERC20",
    "SigVerifier",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Strings"
  ],
  "deployedBytecode": "6080604052600436106102245760003560e01c80635ceb9f141161012357806395d89b41116100ab578063c7ba34f41161006f578063c7ba34f414610727578063e985e9c514610747578063f242432a14610767578063f2fde38b14610787578063f851a440146107a757600080fd5b806395d89b4114610651578063a22cb46514610666578063a3aafe8914610686578063ae4cd7e0146106da578063aeaed1b7146106fa57600080fd5b8063715018a6116100f2578063715018a6146105b15780637e28eb44146105c65780638206d49f146105e65780638da5cb5b146106135780638f2839701461063157600080fd5b80635ceb9f141461048e5780635ebaf1db146105205780636318472614610558578063694d07971461059157600080fd5b80632465b556116101b15780633ba60d16116101755780633ba60d161461040e5780634e1273f41461042157806351248b4e1461044e57806352d0d8ee146104615780635c975abb1461047457600080fd5b80632465b556146103655780632d0335ab146103855780632eb2c2d6146103bb5780633408e470146103db5780633adf80b4146103ee57600080fd5b806306fdde03116101f857806306fdde03146102ce5780630c53c51c146102f05780630e89341c146103035780630f7e59701461032357806320379ee51461035057600080fd5b8062fdd58e1461022957806301ffc9a71461025c57806302329a291461028c57806302fe5305146102ae575b600080fd5b34801561023557600080fd5b506102496102443660046143d7565b6107c7565b6040519081526020015b60405180910390f35b34801561026857600080fd5b5061027c610277366004614419565b610861565b6040519015158152602001610253565b34801561029857600080fd5b506102ac6102a7366004614444565b6108b1565b005b3480156102ba57600080fd5b506102ac6102c9366004614516565b61094c565b3480156102da57600080fd5b506102e3610982565b604051610253919061459a565b6102e36102fe3660046145c3565b610a10565b34801561030f57600080fd5b506102e361031e366004614636565b610bfa565b34801561032f57600080fd5b506102e3604051806040016040528060018152602001603160f81b81525081565b34801561035c57600080fd5b50600454610249565b34801561037157600080fd5b506102ac61038036600461464f565b610dd8565b34801561039157600080fd5b506102496103a036600461464f565b6001600160a01b031660009081526005602052604090205490565b3480156103c757600080fd5b506102ac6103d6366004614700565b610f30565b3480156103e757600080fd5b5046610249565b3480156103fa57600080fd5b506102ac6104093660046147ad565b610fc0565b61027c61041c366004614805565b61103f565b34801561042d57600080fd5b5061044161043c366004614850565b611088565b604051610253919061494d565b61027c61045c366004614805565b6111b1565b61027c61046f366004614980565b611773565b34801561048057600080fd5b5060115461027c9060ff1681565b34801561049a57600080fd5b506104ae6104a9366004614a3e565b611cd0565b60408051835181526020808501516001600160401b0390811682840152858401518385015260609586015186840152845163ffffffff908116608080860191909152928601511660a08401529284015190921660c08201529282015160e0840152015161010082015261012001610253565b34801561052c57600080fd5b50600f54610540906001600160a01b031681565b6040516001600160a01b039091168152602001610253565b34801561056457600080fd5b50600e5461057c90600160a01b900463ffffffff1681565b60405163ffffffff9091168152602001610253565b34801561059d57600080fd5b5061027c6105ac366004614a77565b611e58565b3480156105bd57600080fd5b506102ac611e78565b3480156105d257600080fd5b5061027c6105e1366004614a94565b611eae565b3480156105f257600080fd5b50610606610601366004614a77565b611f43565b6040516102539190614ab2565b34801561061f57600080fd5b506006546001600160a01b0316610540565b34801561063d57600080fd5b506102ac61064c36600461464f565b611f54565b34801561065d57600080fd5b506102e3611f87565b34801561067257600080fd5b506102ac610681366004614bca565b611f94565b34801561069257600080fd5b506106c26106a1366004614a77565b63ffffffff166000908152601060205260409020546001600160801b031690565b6040516001600160801b039091168152602001610253565b3480156106e657600080fd5b506102ac6106f5366004614c0a565b61206a565b34801561070657600080fd5b5061071a610715366004614a3e565b6123fc565b6040516102539190614cd9565b34801561073357600080fd5b506102ac610742366004614d0d565b6124aa565b34801561075357600080fd5b5061027c610762366004614d48565b61259b565b34801561077357600080fd5b506102ac610782366004614d76565b612657565b34801561079357600080fd5b506102ac6107a236600461464f565b6126de565b3480156107b357600080fd5b50600c54610540906001600160a01b031681565b60006001600160a01b0383166108385760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061089257506001600160e01b031982166303a24d0760e21b145b8061085b57506301ffc9a760e01b6001600160e01b031983161461085b565b6006546001600160a01b031633146108db5760405162461bcd60e51b815260040161082f90614dde565b6011805460ff1916821515908117909155600f546040516302329a2960e01b815260048101929092526001600160a01b0316906302329a2990602401600060405180830381600087803b15801561093157600080fd5b505af1158015610945573d6000803e3d6000fd5b5050505050565b6006546001600160a01b031633146109765760405162461bcd60e51b815260040161082f90614dde565b61097f81612776565b50565b6009805461098f90614e13565b80601f01602080910402602001604051908101604052809291908181526020018280546109bb90614e13565b8015610a085780601f106109dd57610100808354040283529160200191610a08565b820191906000526020600020905b8154815290600101906020018083116109eb57829003601f168201915b505050505081565b60408051606081810183526001600160a01b03881660008181526005602090815290859020548452830152918101869052610a4e8782878787612786565b610aa45760405162461bcd60e51b815260206004820152602160248201527f5369676e657220616e64207369676e617475726520646f206e6f74206d6174636044820152600d60fb1b606482015260840161082f565b6001600160a01b038716600090815260056020526040902054610ac8906001612876565b6001600160a01b0388166000908152600560205260409081902091909155517f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b90610b1890899033908a90614e47565b60405180910390a1600080306001600160a01b0316888a604051602001610b40929190614e7c565b60408051601f1981840301815290829052610b5a91614eb3565b6000604051808303816000865af19150503d8060008114610b97576040519150601f19603f3d011682016040523d82523d6000602084013e610b9c565b606091505b509150915081610bee5760405162461bcd60e51b815260206004820152601c60248201527f46756e6374696f6e2063616c6c206e6f74207375636365737366756c00000000604482015260640161082f565b98975050505050505050565b63ffffffff8082166000818152600b60205260409020546060921614610c325760405162461bcd60e51b815260040161082f90614ecf565b60008281526008602052604081208054610c4b90614e13565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7790614e13565b8015610cc45780601f10610c9957610100808354040283529160200191610cc4565b820191906000526020600020905b815481529060010190602001808311610ca757829003601f168201915b50505050509050600081511115610d745760008381526008602052604090208054610cee90614e13565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1a90614e13565b8015610d675780601f10610d3c57610100808354040283529160200191610d67565b820191906000526020600020905b815481529060010190602001808311610d4a57829003601f168201915b5050505050915050919050565b6000610d7f84612882565b90506000815111610d9f5760405180602001604052806000815250610dca565b80610da985612916565b604051602001610dba929190614ef1565b6040516020818303038152906040525b949350505050565b50919050565b6006546001600160a01b03163314610e025760405162461bcd60e51b815260040161082f90614dde565b306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e649190614f30565b6001600160a01b0316816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610eab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecf9190614f30565b6001600160a01b031614610f0e5760405162461bcd60e51b815260206004820152600660248201526510b7bbb732b960d11b604482015260640161082f565b600f80546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038516331480610f4c5750610f4c853361259b565b610fb35760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606482015260840161082f565b6109458585858585612a16565b6006546001600160a01b03163314610fea5760405162461bcd60e51b815260040161082f90614dde565b60008281526008602052604090206110028282614f93565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b82604051611033919061459a565b60405180910390a25050565b6000611049612c01565b6002600d540361106b5760405162461bcd60e51b815260040161082f90615052565b6002600d5561107b848484612c44565b6001600d55949350505050565b606081518351146110ed5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161082f565b600083516001600160401b0381111561110857611108614461565b604051908082528060200260200182016040528015611131578160200160208202803683370190505b50905060005b84518110156111a95761117c85828151811061115557611155615089565b602002602001015185838151811061116f5761116f615089565b60200260200101516107c7565b82828151811061118e5761118e615089565b60209081029190910101526111a2816150b5565b9050611137565b509392505050565b60006002600d54036111d55760405162461bcd60e51b815260040161082f90615052565b6002600d5560115460ff16156112165760405162461bcd60e51b81526020600482015260066024820152651c185d5cd95960d21b604482015260640161082f565b63ffffffff8085166000908152600b6020908152604080832081516101a081019092528054909416815260018401805493949193919284019161125890614e13565b80601f016020809104026020016040519081016040528092919081815260200182805461128490614e13565b80156112d15780601f106112a6576101008083540402835291602001916112d1565b820191906000526020600020905b8154815290600101906020018083116112b457829003601f168201915b505050918352505060028201546001600160a01b0381166020830152600160a01b900461ffff908116604083015260038301546060830152600483015460ff81161515608084015261010080820460f81b6001600160f81b03191660a085015262010000820490921660c084015264010000000090046001600160801b031660e083015260058301549082015260068201546101208201526007909101546001600160401b03808216610140840152600160401b9091041661016090910152905061139b81613089565b60c08101516001600160f81b031916600160f81b146113e65760405162461bcd60e51b81526020600482015260076024820152662161637469766560c81b604482015260640161082f565b428161016001516001600160401b0316111561142d5760405162461bcd60e51b8152602060048201526006602482015265085cdd185c9d60d21b604482015260640161082f565b428161018001516001600160401b0316116114735760405162461bcd60e51b815260206004820152600660248201526508595b99195960d21b604482015260640161082f565b600c5433906000906001600160a01b03168214806114955750611495826130ad565b90508260a00151156114e257806114dd5760405162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015260640161082f565b6115a7565b808061156f575060808301516114fe9063ffffffff88166150ce565b600e546040516370a0823160e01b81526001600160a01b038581166004830152909116906370a0823190602401602060405180830381865afa158015611548573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156c91906150e5565b10155b6115a75760405162461bcd60e51b815260206004820152600960248201526818985b185b98d9480f60ba1b604482015260640161082f565b63ffffffff87166000908152601060205260409020546101008401516001600160801b03918216911615611633576101008401516001600160801b03166115f463ffffffff8916836150fe565b6001600160801b031611156116335760405162461bcd60e51b81526020600482015260056024820152641b1a5b5a5d60da1b604482015260640161082f565b63ffffffff88811660009081526010602052604081208054928a16929091906116669084906001600160801b03166150fe565b92506101000a8154816001600160801b0302191690836001600160801b031602179055508360a0015115801561169a575081155b156116dd57600f5460808501516116dd9185916001600160a01b03909116906116c99063ffffffff8c166150ce565b600e546001600160a01b03169291906130db565b611704868963ffffffff168963ffffffff166040518060200160405280600081525061313b565b856001600160a01b03168763ffffffff168963ffffffff167fda1373dcde55aceb480442ee22608e2601f3639e5d1e81e6f9dcd8d2316078996117443390565b6040516001600160a01b03909116815260200160405180910390a460019450505050506001600d559392505050565b60006002600d54036117975760405162461bcd60e51b815260040161082f90615052565b6002600d556117a7603c4261513b565b6001600160401b0316836001600160401b031610156117f25760405162461bcd60e51b815260206004820152600760248201526678206e6f6e636560c81b604482015260640161082f565b6117fb8461324b565b63ffffffff8087166000908152600b6020908152604080832081516101a081019092528054909416815260018401805493949193919284019161183d90614e13565b80601f016020809104026020016040519081016040528092919081815260200182805461186990614e13565b80156118b65780601f1061188b576101008083540402835291602001916118b6565b820191906000526020600020905b81548152906001019060200180831161189957829003601f168201915b505050918352505060028201546001600160a01b0381166020830152600160a01b900461ffff908116604083015260038301546060830152600483015460ff81161515608084015261010080820460f81b6001600160f81b03191660a085015262010000820490921660c084015264010000000090046001600160801b031660e083015260058301549082015260068201546101208201526007909101546001600160401b03808216610140840152600160401b9091041661016090910152905061198081613089565b63ffffffff87166000908152601060205260409020546101008201516001600160801b03918216911615611a0c576101008201516001600160801b03166119cd63ffffffff8916836150fe565b6001600160801b03161115611a0c5760405162461bcd60e51b81526020600482015260056024820152641b1a5b5a5d60da1b604482015260640161082f565b6000336040516001600160e01b031960e08c811b821660208401526bffffffffffffffffffffffff19606085811b821660248601528c901b1660388401528b901b16604c8201526001600160c01b031960c089901b166050820152909150600090611a8f906058016040516020818303038152906040528051906020012061328a565b600c54909150611aa9906001600160a01b031682886132de565b611ae35760405162461bcd60e51b815260206004820152600b60248201526a78207369676e617475726560a81b604482015260640161082f565b6000611afd83600c546001600160a01b0391821691161490565b80611b0c5750611b0c836130ad565b90508080611b9b57506080850151611b2a9063ffffffff8c166150ce565b600e546040516370a0823160e01b81526001600160a01b038681166004830152909116906370a0823190602401602060405180830381865afa158015611b74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9891906150e5565b10155b611bd35760405162461bcd60e51b815260206004820152600960248201526818985b185b98d9480f60ba1b604482015260640161082f565b63ffffffff8b811660009081526010602052604081208054928d1692909190611c069084906001600160801b03166150fe565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550611c45833087608001518d63ffffffff166116c991906150ce565b611c6c898c63ffffffff168c63ffffffff166040518060200160405280600081525061313b565b6040516001600160a01b0384811682528a169063ffffffff808d1691908e16907fda1373dcde55aceb480442ee22608e2601f3639e5d1e81e6f9dcd8d2316078999060200160405180910390a46001955050505050506001600d5595945050505050565b611d0460405180608001604052806000815260200160006001600160401b0316815260200160008152602001600081525090565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152611d388461324b565b60008363ffffffff1611611d5e5760405162461bcd60e51b815260040161082f90615161565b600f5460405163aeaed1b760e01b81526000916001600160a01b03169063aeaed1b790611d919088908890600401615185565b608060405180830381865afa158015611dae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dd291906151a4565b600f5460405163045e496960e11b81529192506000916001600160a01b03909116906308bc92d290611e0a9089908990600401615185565b60a060405180830381865afa158015611e27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e4b919061520f565b9196919550909350505050565b63ffffffff8082166000818152600b60205260408120549092161461085b565b6006546001600160a01b03163314611ea25760405162461bcd60e51b815260040161082f90614dde565b611eac6000613371565b565b60006002600d5403611ed25760405162461bcd60e51b815260040161082f90615052565b6002600d55336000611eea8263ffffffff87166107c7565b90508363ffffffff16811015611f2a5760405162461bcd60e51b815260206004820152600560248201526438ba3c901f60d91b604482015260640161082f565b611f35858584612c44565b6001600d5595945050505050565b611f4b614355565b61085b826133c3565b6006546001600160a01b03163314611f7e5760405162461bcd60e51b815260040161082f90614dde565b61097f816135a7565b600a805461098f90614e13565b6001600160a01b0382163303611ffe5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161082f565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600c546001600160a01b03163314806120875750612087336130ad565b6120c35760405162461bcd60e51b815260206004820152600d60248201526c10b0b236b4b71010b7bbb732b960991b604482015260640161082f565b861561210357600088116121035760405162461bcd60e51b8152602060048201526007602482015266070726963653d360cc1b604482015260640161082f565b60008561ffff1611801561211c5750603c8561ffff1611155b6121515760405162461bcd60e51b815260206004820152600660248201526578207465726d60d01b604482015260640161082f565b600e5460009061216f90600160a01b900463ffffffff166001615296565b90506000604051806101a001604052808363ffffffff1681526020018c8152602001336001600160a01b031681526020018d61ffff1681526020018b81526020018a15158152602001600160f81b6001600160f81b03191681526020018861ffff168152602001896001600160801b03168152602001878152602001868152602001856001600160401b03168152602001846001600160401b0316815250905080600b60008463ffffffff1663ffffffff16815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff160217905550602082015181600101908161226b9190614f93565b5060408281015160028301805460608601516001600160a01b039093166001600160b01b031990911617600160a01b61ffff9384168102919091179091556080850151600385015560a085015160048501805460c088015160e0890151610100808b015161ffff1990941695151561ff0019169590951760f89290921c9094021773ffffffffffffffffffffffffffffffffffff0000191662010000939095169290920273ffffffffffffffffffffffffffffffff000000001916939093176401000000006001600160801b0390921691909102179091556101208401516005840155610140840151600684015561016084015160079093018054610180909501516001600160401b039485166fffffffffffffffffffffffffffffffff1990961695909517600160401b949095169390930293909317909155600e805463ffffffff60a01b191663ffffffff868116909402179055825190519116907f6f053dfbe49c7e82e9b2091b20e94c3bb32de62f97ed3dffe0213a33c0af15b390600090a2505050505050505050505050565b61243060405180608001604052806000815260200160006001600160401b0316815260200160008152602001600081525090565b600f5460405163aeaed1b760e01b81526001600160a01b039091169063aeaed1b7906124629086908690600401615185565b608060405180830381865afa15801561247f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124a391906151a4565b9392505050565b600c546001600160a01b03163314806124c757506124c7336130ad565b6125035760405162461bcd60e51b815260206004820152600d60248201526c10b0b236b4b71010b7bbb732b960991b604482015260640161082f565b63ffffffff8083166000818152600b60205260409020549091161461253a5760405162461bcd60e51b815260040161082f90614ecf565b63ffffffff82166000818152600b6020526040808220600401805461ff00191661010060f887901c02179055516001600160f81b0319841692917f1e59e47af4d9b02977749192de0a0e8c70ae8ef5cf99cebb7e2f707571fd0ab791a35050565b60075460405163c455279160e01b81526001600160a01b03848116600483015260009281169190841690829063c455279190602401602060405180830381865afa1580156125ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126119190614f30565b6001600160a01b03160361262957600191505061085b565b6001600160a01b0380851660009081526001602090815260408083209387168352929052205460ff16610dca565b6001600160a01b0385163314806126735750612673853361259b565b6126d15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b606482015260840161082f565b61094585858585856135f1565b6006546001600160a01b031633146127085760405162461bcd60e51b815260040161082f90614dde565b6001600160a01b03811661276d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161082f565b61097f81613371565b60026127828282614f93565b5050565b60006001600160a01b0386166127ec5760405162461bcd60e51b815260206004820152602560248201527f4e61746976654d6574615472616e73616374696f6e3a20494e56414c49445f5360448201526424a3a722a960d91b606482015260840161082f565b60016127ff6127fa8761370e565b61376e565b6040805160008152602081018083529290925260ff851690820152606081018690526080810185905260a0016020604051602081039080840390855afa15801561284d573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b031614905095945050505050565b60006124a382846152b3565b60606002805461289190614e13565b80601f01602080910402602001604051908101604052809291908181526020018280546128bd90614e13565b801561290a5780601f106128df5761010080835404028352916020019161290a565b820191906000526020600020905b8154815290600101906020018083116128ed57829003601f168201915b50505050509050919050565b60608160000361293d5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156129675780612951816150b5565b91506129609050600a836152c6565b9150612941565b6000816001600160401b0381111561298157612981614461565b6040519080825280601f01601f1916602001820160405280156129ab576020820181803683370190505b5090505b8415610dca576129c06001836152da565b91506129cd600a866152ed565b6129d89060306152b3565b60f81b8183815181106129ed576129ed615089565b60200101906001600160f81b031916908160001a905350612a0f600a866152c6565b94506129af565b8151835114612a785760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161082f565b6001600160a01b038416612a9e5760405162461bcd60e51b815260040161082f90615301565b33612aad81878787878761379e565b60005b8451811015612b93576000858281518110612acd57612acd615089565b602002602001015190506000858381518110612aeb57612aeb615089565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015612b3b5760405162461bcd60e51b815260040161082f90615346565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290612b789084906152b3565b9250508190555050505080612b8c906150b5565b9050612ab0565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051612be3929190615390565b60405180910390a4612bf9818787878787613d70565b505050505050565b600c546001600160a01b03163314611eac5760405162461bcd60e51b815260206004820152600660248201526510b0b236b4b760d11b604482015260640161082f565b6000612c4f8261324b565b60008463ffffffff1611612c755760405162461bcd60e51b815260040161082f90615161565b60008363ffffffff1611612cb45760405162461bcd60e51b815260040161082f906020808252600490820152632171747960e01b604082015260600190565b63ffffffff8085166000908152600b6020908152604080832081516101a0810190925280549094168152600184018054939491939192840191612cf690614e13565b80601f0160208091040260200160405190810160405280929190818152602001828054612d2290614e13565b8015612d6f5780601f10612d4457610100808354040283529160200191612d6f565b820191906000526020600020905b815481529060010190602001808311612d5257829003601f168201915b505050918352505060028201546001600160a01b0381166020830152600160a01b900461ffff908116604083015260038301546060830152600483015460ff81161515608084015261010080820460f81b6001600160f81b03191660a085015262010000820490921660c084015264010000000090046001600160801b031660e083015260058301549082015260068201546101208201526007909101546001600160401b03808216610140840152600160401b90910416610160909101529050612e3981613089565b63ffffffff8086166000908152601060205260409020546001600160801b0316908516811015612e9b5760405162461bcd60e51b815260206004820152600d60248201526c65786365656420737570706c7960981b604482015260640161082f565b600f54604051636edc9d8d60e11b81526000916001600160a01b03169063ddb93b1a90612ece9088908b90600401615185565b60a060405180830381865afa158015612eeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f0f919061520f565b805190915063ffffffff1615612f8657806000015163ffffffff168663ffffffff16612f41878a63ffffffff166107c7565b612f4b91906152da565b1015612f865760405162461bcd60e51b815260206004820152600a602482015269696e207374616b696e6760b01b604482015260640161082f565b63ffffffff8781166000908152601060205260408120805492891692909190612fb99084906001600160801b03166153b5565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550612ff4858863ffffffff168863ffffffff16613ecb565b8260a0015161303857600083608001518763ffffffff1661301591906150ce565b600f54600e54919250613036916001600160a01b03908116911688846130db565b505b846001600160a01b03168663ffffffff168863ffffffff167f51dc334a9a8f008638bdeb6c9a6f4aabf63ff2510e4be9998b7ecf63010ab8aa60405160405180910390a45060019695505050505050565b805163ffffffff1661097f5760405162461bcd60e51b815260040161082f90614ecf565b6000816001600160a01b03166130cb6006546001600160a01b031690565b6001600160a01b03161492915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052613135908590614044565b50505050565b6001600160a01b03841661319b5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161082f565b336131bb816000876131ac8861411b565b6131b58861411b565b8761379e565b6000848152602081815260408083206001600160a01b0389168452909152812080548592906131eb9084906152b3565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461094581600087878787614166565b6001600160a01b03811661097f5760405162461bcd60e51b81526020600482015260066024820152653c1030b2323960d11b604482015260640161082f565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c015b604051602081830303815290604052805190602001209050919050565b6000836001600160a01b031660018484604001518560000151866020015160405160008152602001604052604051613332949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015613354573d6000803e3d6000fd5b505050602060405103516001600160a01b03161490509392505050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6133cb614355565b60008263ffffffff16116133f15760405162461bcd60e51b815260040161082f90615161565b63ffffffff8083166000818152600b6020526040902054909116146134285760405162461bcd60e51b815260040161082f90614ecf565b63ffffffff8083166000908152600b602090815260409182902082516101a08101909352805490931682526001830180549293929184019161346990614e13565b80601f016020809104026020016040519081016040528092919081815260200182805461349590614e13565b80156134e25780601f106134b7576101008083540402835291602001916134e2565b820191906000526020600020905b8154815290600101906020018083116134c557829003601f168201915b505050918352505060028201546001600160a01b0381166020830152600160a01b900461ffff908116604083015260038301546060830152600483015460ff81161515608084015261010080820460f81b6001600160f81b03191660a085015262010000820490921660c084015264010000000090046001600160801b031660e083015260058301549082015260068201546101208201526007909101546001600160401b03808216610140840152600160401b909104166101609091015292915050565b600c80546001600160a01b0319166001600160a01b0383169081179091556040517f7ce7ec0b50378fb6c0186ffb5f48325f6593fcb4ca4386f21861af3129188f5c90600090a250565b6001600160a01b0384166136175760405162461bcd60e51b815260040161082f90615301565b336136278187876131ac8861411b565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156136685760405162461bcd60e51b815260040161082f90615346565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906136a59084906152b3565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4613705828888888888614166565b50505050505050565b60006040518060800160405280604381526020016155dc60439139805160209182012083518483015160408087015180519086012090516132c1950193845260208401929092526001600160a01b03166040830152606082015260800190565b600061377960045490565b60405161190160f01b60208201526022810191909152604281018390526062016132c1565b6001600160a01b0385161580156137bc57506001600160a01b038416155b612bf9576137f460405180608001604052806000815260200160006001600160401b0316815260200160008152602001600081525090565b60005b8451811015613d6657600085828151811061381457613814615089565b60200260200101519050600085838151811061383257613832615089565b602002602001015190506000613847836133c3565b600f54604051636edc9d8d60e11b81529192506000916001600160a01b039091169063ddb93b1a9061387f908e908890600401615185565b60a060405180830381865afa15801561389c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138c0919061520f565b805190915063ffffffff161561393157806000015163ffffffff16836138ec8d8763ffffffff166107c7565b6138f691906152da565b10156139315760405162461bcd60e51b815260206004820152600a602482015269696e207374616b696e6760b01b604482015260640161082f565b426001600160a01b038c1615613b3e57600f5460405163128fd13960e31b81526001600160a01b039091169063947e89c890613973908f908990600401615185565b608060405180830381865afa158015613990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139b491906151a4565b805190975015613ac35760006139cf42856101800151614221565b905084886000018181516139e391906152da565b90525060208801516001600160401b039081169082161115613ac157600f54608085015189516001600160a01b03909216916345305ab891613a24916150ce565b60208b01516101208801516040516001600160e01b031960e086901b16815260048101939093526001600160401b03918216602484015290851660448301526064820152608401602060405180830381865afa158015613a88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613aac91906150e5565b88604001818151613abd91906152b3565b9052505b505b506020860180516001600160401b034216909152600f5460405163667e6b1160e11b81526001600160a01b039091169063ccfcd62290613b0b908f9089908c906004016153d5565b600060405180830381600087803b158015613b2557600080fd5b505af1158015613b39573d6000803e3d6000fd5b505050505b6001600160a01b038b1615613d4e57600f5460405163128fd13960e31b81526001600160a01b039091169063947e89c890613b7f908e908990600401615185565b608060405180830381865afa158015613b9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613bc091906151a4565b96506000613bd342856101800151614221565b885190915015801590613bfb575087602001516001600160401b0316816001600160401b0316115b15613cc257600f54608085015189516001600160a01b03909216916345305ab891613c25916150ce565b60208b01516101208801516040516001600160e01b031960e086901b16815260048101939093526001600160401b03918216602484015290851660448301526064820152608401602060405180830381865afa158015613c89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613cad91906150e5565b88604001818151613cbe91906152b3565b9052505b8488600001818151613cd491906152b3565b9052506001600160401b0382166020890152600f5460405163667e6b1160e11b81526001600160a01b039091169063ccfcd62290613d1a908f908a908d906004016153d5565b600060405180830381600087803b158015613d3457600080fd5b505af1158015613d48573d6000803e3d6000fd5b50505050505b50505050508080613d5e906150b5565b9150506137f7565b5050505050505050565b6001600160a01b0384163b15612bf95760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190613db49089908990889088908890600401615428565b6020604051808303816000875af1925050508015613def575060408051601f3d908101601f19168201909252613dec9181019061547a565b60015b613e9b57613dfb615497565b806308c379a003613e345750613e0f6154b3565b80613e1a5750613e36565b8060405162461bcd60e51b815260040161082f919061459a565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161082f565b6001600160e01b0319811663bc197c8160e01b146137055760405162461bcd60e51b815260040161082f9061553c565b6001600160a01b038316613f2d5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b606482015260840161082f565b33613f5c81856000613f3e8761411b565b613f478761411b565b6040518060200160405280600081525061379e565b6000838152602081815260408083206001600160a01b038816845290915290205482811015613fd95760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b606482015260840161082f565b6000848152602081815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6000614099826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661424a9092919063ffffffff16565b80519091501561411657808060200190518101906140b79190615584565b6141165760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161082f565b505050565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061415557614155615089565b602090810291909101015292915050565b6001600160a01b0384163b15612bf95760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906141aa90899089908890889088906004016155a1565b6020604051808303816000875af19250505080156141e5575060408051601f3d908101601f191682019092526141e29181019061547a565b60015b6141f157613dfb615497565b6001600160e01b0319811663f23a6e6160e01b146137055760405162461bcd60e51b815260040161082f9061553c565b6000816001600160401b0316836001600160401b0316111561424357816124a3565b5090919050565b6060610dca848460008585843b6142a35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161082f565b600080866001600160a01b031685876040516142bf9190614eb3565b60006040518083038185875af1925050503d80600081146142fc576040519150601f19603f3d011682016040523d82523d6000602084013e614301565b606091505b509150915061431182828661431c565b979650505050505050565b6060831561432b5750816124a3565b82511561433b5782518084602001fd5b8160405162461bcd60e51b815260040161082f919061459a565b604080516101a08101825260008082526060602083018190529282018190529181018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081019190915290565b6001600160a01b038116811461097f57600080fd5b600080604083850312156143ea57600080fd5b82356143f5816143c2565b946020939093013593505050565b6001600160e01b03198116811461097f57600080fd5b60006020828403121561442b57600080fd5b81356124a381614403565b801515811461097f57600080fd5b60006020828403121561445657600080fd5b81356124a381614436565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b038111828210171561449c5761449c614461565b6040525050565b600082601f8301126144b457600080fd5b81356001600160401b038111156144cd576144cd614461565b6040516144e4601f8301601f191660200182614477565b8181528460208386010111156144f957600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561452857600080fd5b81356001600160401b0381111561453e57600080fd5b610dca848285016144a3565b60005b8381101561456557818101518382015260200161454d565b50506000910152565b6000815180845261458681602086016020860161454a565b601f01601f19169290920160200192915050565b6020815260006124a3602083018461456e565b803560ff811681146145be57600080fd5b919050565b600080600080600060a086880312156145db57600080fd5b85356145e6816143c2565b945060208601356001600160401b0381111561460157600080fd5b61460d888289016144a3565b945050604086013592506060860135915061462a608087016145ad565b90509295509295909350565b60006020828403121561464857600080fd5b5035919050565b60006020828403121561466157600080fd5b81356124a3816143c2565b60006001600160401b0382111561468557614685614461565b5060051b60200190565b600082601f8301126146a057600080fd5b813560206146ad8261466c565b6040516146ba8282614477565b83815260059390931b85018201928281019150868411156146da57600080fd5b8286015b848110156146f557803583529183019183016146de565b509695505050505050565b600080600080600060a0868803121561471857600080fd5b8535614723816143c2565b94506020860135614733816143c2565b935060408601356001600160401b038082111561474f57600080fd5b61475b89838a0161468f565b9450606088013591508082111561477157600080fd5b61477d89838a0161468f565b9350608088013591508082111561479357600080fd5b506147a0888289016144a3565b9150509295509295909350565b600080604083850312156147c057600080fd5b8235915060208301356001600160401b038111156147dd57600080fd5b6147e9858286016144a3565b9150509250929050565b63ffffffff8116811461097f57600080fd5b60008060006060848603121561481a57600080fd5b8335614825816147f3565b92506020840135614835816147f3565b91506040840135614845816143c2565b809150509250925092565b6000806040838503121561486357600080fd5b82356001600160401b038082111561487a57600080fd5b818501915085601f83011261488e57600080fd5b8135602061489b8261466c565b6040516148a88282614477565b83815260059390931b85018201928281019150898411156148c857600080fd5b948201945b838610156148ef5785356148e0816143c2565b825294820194908201906148cd565b9650508601359250508082111561490557600080fd5b506147e98582860161468f565b600081518084526020808501945080840160005b8381101561494257815187529582019590820190600101614926565b509495945050505050565b6020815260006124a36020830184614912565b6001600160401b038116811461097f57600080fd5b80356145be81614960565b600080600080600085870360e081121561499957600080fd5b86356149a4816147f3565b955060208701356149b4816147f3565b945060408701356149c4816143c2565b935060608701356149d481614960565b92506060607f19820112156149e857600080fd5b50604051606081018181106001600160401b0382111715614a0b57614a0b614461565b6040526080870135815260a08701356020820152614a2b60c088016145ad565b6040820152809150509295509295909350565b60008060408385031215614a5157600080fd5b8235614a5c816143c2565b91506020830135614a6c816147f3565b809150509250929050565b600060208284031215614a8957600080fd5b81356124a3816147f3565b60008060408385031215614aa757600080fd5b8235614a5c816147f3565b60208152614ac960208201835163ffffffff169052565b600060208301516101a0806040850152614ae76101c085018361456e565b91506040850151614b0360608601826001600160a01b03169052565b50606085015161ffff8116608086015250608085015160a085015260a0850151614b3160c086018215159052565b5060c08501516001600160f81b0319811660e08601525060e0850151610100614b5f8187018361ffff169052565b8601519050610120614b7b868201836001600160801b03169052565b86015161014086810191909152860151610160808701919091528601519050610180614bb1818701836001600160401b03169052565b909501516001600160401b031693019290925250919050565b60008060408385031215614bdd57600080fd5b8235614be8816143c2565b91506020830135614a6c81614436565b803561ffff811681146145be57600080fd5b6000806000806000806000806000806101408b8d031215614c2a57600080fd5b614c338b614bf8565b995060208b01356001600160401b03811115614c4e57600080fd5b614c5a8d828e016144a3565b99505060408b0135975060608b0135614c7281614436565b965060808b01356001600160801b0381168114614c8e57600080fd5b9550614c9c60a08c01614bf8565b945060c08b0135935060e08b01359250614cb96101008c01614975565b9150614cc86101208c01614975565b90509295989b9194979a5092959850565b815181526020808301516001600160401b03169082015260408083015190820152606080830151908201526080810161085b565b60008060408385031215614d2057600080fd5b8235614d2b816147f3565b915060208301356001600160f81b031981168114614a6c57600080fd5b60008060408385031215614d5b57600080fd5b8235614d66816143c2565b91506020830135614a6c816143c2565b600080600080600060a08688031215614d8e57600080fd5b8535614d99816143c2565b94506020860135614da9816143c2565b9350604086013592506060860135915060808601356001600160401b03811115614dd257600080fd5b6147a0888289016144a3565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c90821680614e2757607f821691505b602082108103610dd257634e487b7160e01b600052602260045260246000fd5b6001600160a01b03848116825283166020820152606060408201819052600090614e739083018461456e565b95945050505050565b60008351614e8e81846020880161454a565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b60008251614ec581846020870161454a565b9190910192915050565b602080825260089082015267085c1c9bda9958dd60c21b604082015260600190565b60008351614f0381846020880161454a565b835190830190614f1781836020880161454a565b64173539b7b760d91b9101908152600501949350505050565b600060208284031215614f4257600080fd5b81516124a3816143c2565b601f82111561411657600081815260208120601f850160051c81016020861015614f745750805b601f850160051c820191505b81811015612bf957828155600101614f80565b81516001600160401b03811115614fac57614fac614461565b614fc081614fba8454614e13565b84614f4d565b602080601f831160018114614ff55760008415614fdd5750858301515b600019600386901b1c1916600185901b178555612bf9565b600085815260208120601f198616915b8281101561502457888601518255948401946001909101908401615005565b50858210156150425787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016150c7576150c761509f565b5060010190565b808202811582820484141761085b5761085b61509f565b6000602082840312156150f757600080fd5b5051919050565b6001600160801b0381811683821601908082111561511e5761511e61509f565b5092915050565b634e487b7160e01b600052601260045260246000fd5b60006001600160401b038084168061515557615155615125565b92169190910492915050565b6020808252600a9082015269085c1c9bda9958dd125960b21b604082015260600190565b6001600160a01b0392909216825263ffffffff16602082015260400190565b6000608082840312156151b657600080fd5b604051608081018181106001600160401b03821117156151d8576151d8614461565b6040528251815260208301516151ed81614960565b6020820152604083810151908201526060928301519281019290925250919050565b600060a0828403121561522157600080fd5b60405160a081018181106001600160401b038211171561524357615243614461565b6040528251615251816147f3565b81526020830151615261816147f3565b6020820152604083015161527481614960565b6040820152606083810151908201526080928301519281019290925250919050565b63ffffffff81811683821601908082111561511e5761511e61509f565b8082018082111561085b5761085b61509f565b6000826152d5576152d5615125565b500490565b8181038181111561085b5761085b61509f565b6000826152fc576152fc615125565b500690565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6040815260006153a36040830185614912565b8281036020840152614e738185614912565b6001600160801b0382811682821603908082111561511e5761511e61509f565b6001600160a01b038416815263ffffffff8316602082015260c08101610dca6040830184805182526001600160401b03602082015116602083015260408101516040830152606081015160608301525050565b6001600160a01b0386811682528516602082015260a06040820181905260009061545490830186614912565b82810360608401526154668186614912565b90508281036080840152610bee818561456e565b60006020828403121561548c57600080fd5b81516124a381614403565b600060033d11156154b05760046000803e5060005160e01c5b90565b600060443d10156154c15790565b6040516003193d81016004833e81513d6001600160401b0381602484011181841117156154f057505050505090565b82850191508151818111156155085750505050505090565b843d87010160208285010111156155225750505050505090565b61553160208286010187614477565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60006020828403121561559657600080fd5b81516124a381614436565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906143119083018461456e56fe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e617475726529a26469706673582212205efc3970b46af4828fd4e1633db410506969910b2529e74f089ac8c02b94d12964736f6c63430008110033",
  "deployedSourceMap": "612:18472:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2109:228:2;;;;;;;;;;-1:-1:-1;2109:228:2;;;;;:::i;:::-;;:::i;:::-;;;616:25:30;;;604:2;589:18;2109:228:2;;;;;;;;1160:305;;;;;;;;;;-1:-1:-1;1160:305:2;;;;;:::i;:::-;;:::i;:::-;;;1299:14:30;;1292:22;1274:41;;1262:2;1247:18;1160:305:2;1134:187:30;14871:112:18;;;;;;;;;;-1:-1:-1;14871:112:18;;;;;:::i;:::-;;:::i;:::-;;1659:89:16;;;;;;;;;;-1:-1:-1;1659:89:16;;;;;:::i;:::-;;:::i;1027:18::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;976:1117:24:-;;;;;;:::i;:::-;;:::i;13577:839:18:-;;;;;;;;;;-1:-1:-1;13577:839:18;;;;;:::i;:::-;;:::i;288:43:22:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;288:43:22;;;;;1264:99;;;;;;;;;;-1:-1:-1;1341:15:22;;1264:99;;17626:199:18;;;;;;;;;;-1:-1:-1;17626:199:18;;;;;:::i;:::-;;:::i;2501:105:24:-;;;;;;;;;;-1:-1:-1;2501:105:24;;;;;:::i;:::-;-1:-1:-1;;;;;2587:12:24;2554:13;2587:12;;;:6;:12;;;;;;;2501:105;4137:430:2;;;;;;;;;;-1:-1:-1;4137:430:2;;;;;:::i;:::-;;:::i;1369:155:22:-;;;;;;;;;;-1:-1:-1;1480:9:22;1369:155;;1944:183:16;;;;;;;;;;-1:-1:-1;1944:183:16;;;;;:::i;:::-;;:::i;16963:203:18:-;;;;;;:::i;:::-;;:::i;2494:508:2:-;;;;;;;;;;-1:-1:-1;2494:508:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10057:1484:18:-;;;;;;:::i;:::-;;:::i;11692:1352::-;;;;;;:::i;:::-;;:::i;938:26::-;;;;;;;;;;-1:-1:-1;938:26:18;;;;;;;;18669:413;;;;;;;;;;-1:-1:-1;18669:413:18;;;;;:::i;:::-;;:::i;:::-;;;;12483:12:30;;12471:25;;12549:4;12538:16;;;12532:23;-1:-1:-1;;;;;12528:48:30;;;12512:14;;;12505:72;12615:16;;;12609:23;12593:14;;;12586:47;12682:4;12671:16;;;12665:23;12649:14;;;12642:47;13204:13;;13153:10;13200:22;;;13194:3;13179:19;;;13172:51;;;;13270:17;;;13264:24;13260:33;13254:3;13239:19;;13232:62;13341:17;;;13335:24;13331:49;;;13325:3;13310:19;;13303:78;13424:17;;;13418:24;13412:3;13397:19;;13390:53;13486:16;13480:23;13474:3;13459:19;;13452:52;13073:3;13058:19;18669:413:18;12799:711:30;858:21:18;;;;;;;;;;-1:-1:-1;858:21:18;;;;-1:-1:-1;;;;;858:21:18;;;;;;-1:-1:-1;;;;;13695:32:30;;;13677:51;;13665:2;13650:18;858:21:18;13515:219:30;826:26:18;;;;;;;;;;-1:-1:-1;826:26:18;;;;-1:-1:-1;;;826:26:18;;;;;;;;;13913:10:30;13901:23;;;13883:42;;13871:2;13856:18;826:26:18;13739:192:30;8306:133:18;;;;;;;;;;-1:-1:-1;8306:133:18;;;;;:::i;:::-;;:::i;1605:92:0:-;;;;;;;;;;;;;:::i;16324:308:18:-;;;;;;;;;;-1:-1:-1;16324:308:18;;;;;:::i;:::-;;:::i;8704:148::-;;;;;;;;;;-1:-1:-1;8704:148:18;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;973:85:0:-;;;;;;;;;;-1:-1:-1;1045:6:0;;-1:-1:-1;;;;;1045:6:0;973:85;;2197:96:18;;;;;;;;;;-1:-1:-1;2197:96:18;;;;;:::i;:::-;;:::i;1074:20:16:-;;;;;;;;;;;;;:::i;3070:306:2:-;;;;;;;;;;-1:-1:-1;3070:306:2;;;;;:::i;:::-;;:::i;13110:114:18:-;;;;;;;;;;-1:-1:-1;13110:114:18;;;;;:::i;:::-;13196:21;;13170:7;13196:21;;;:10;:21;;;;;;-1:-1:-1;;;;;13196:21:18;;13110:114;;;;-1:-1:-1;;;;;17496:47:30;;;17478:66;;17466:2;17451:18;13110:114:18;17332:218:30;7128:1042:18;;;;;;;;;;-1:-1:-1;7128:1042:18;;;;;:::i;:::-;;:::i;17172:197::-;;;;;;;;;;-1:-1:-1;17172:197:18;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9541:263::-;;;;;;;;;;-1:-1:-1;9541:263:18;;;;;:::i;:::-;;:::i;2254:451:16:-;;;;;;;;;;-1:-1:-1;2254:451:16;;;;;:::i;:::-;;:::i;3676:389:2:-;;;;;;;;;;-1:-1:-1;3676:389:2;;;;;:::i;:::-;;:::i;1846:189:0:-;;;;;;;;;;-1:-1:-1;1846:189:0;;;;;:::i;:::-;;:::i;326:20:17:-;;;;;;;;;;-1:-1:-1;326:20:17;;;;-1:-1:-1;;;;;326:20:17;;;2109:228:2;2195:7;-1:-1:-1;;;;;2222:21:2;;2214:77;;;;-1:-1:-1;;;2214:77:2;;20895:2:30;2214:77:2;;;20877:21:30;20934:2;20914:18;;;20907:30;20973:34;20953:18;;;20946:62;-1:-1:-1;;;21024:18:30;;;21017:41;21075:19;;2214:77:2;;;;;;;;;-1:-1:-1;2308:9:2;:13;;;;;;;;;;;-1:-1:-1;;;;;2308:22:2;;;;;;;;;;2109:228;;;;;:::o;1160:305::-;1262:4;-1:-1:-1;;;;;;1297:41:2;;-1:-1:-1;;;1297:41:2;;:109;;-1:-1:-1;;;;;;;1354:52:2;;-1:-1:-1;;;1354:52:2;1297:109;:161;;;-1:-1:-1;;;;;;;;;;871:40:13;;;1422:36:2;763:155:13;14871:112:18;1045:6:0;;-1:-1:-1;;;;;1045:6:0;666:10:11;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;14929:6:18::1;:16:::0;;-1:-1:-1;;14929:16:18::1;::::0;::::1;;::::0;;::::1;::::0;;;14955:6:::1;::::0;:21:::1;::::0;-1:-1:-1;;;14955:21:18;;::::1;::::0;::::1;1274:41:30::0;;;;-1:-1:-1;;;;;14955:6:18::1;::::0;:12:::1;::::0;1247:18:30;;14955:21:18::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;14871:112:::0;:::o;1659:89:16:-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;666:10:11;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1725:16:16::1;1733:7;1725;:16::i;:::-;1659:89:::0;:::o;1027:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;976:1117:24:-;1227:148;;;1171:12;1227:148;;;;;-1:-1:-1;;;;;1264:19:24;;1195:29;1264:19;;;:6;:19;;;;;;;;;1227:148;;;;;;;;;;;1407:45;1271:11;1227:148;1435:4;1441;1447;1407:6;:45::i;:::-;1386:125;;;;-1:-1:-1;;;1386:125:24;;22053:2:30;1386:125:24;;;22035:21:30;22092:2;22072:18;;;22065:30;22131:34;22111:18;;;22104:62;-1:-1:-1;;;22182:18:30;;;22175:31;22223:19;;1386:125:24;21851:397:30;1386:125:24;-1:-1:-1;;;;;1597:19:24;;;;;;:6;:19;;;;;;:26;;1621:1;1597:23;:26::i;:::-;-1:-1:-1;;;;;1575:19:24;;;;;;:6;:19;;;;;;;:48;;;;1639:122;;;;;1582:11;;1709:10;;1734:17;;1639:122;:::i;:::-;;;;;;;;1869:12;1883:23;1918:4;-1:-1:-1;;;;;1910:18:24;1959:17;1978:11;1942:48;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1942:48:24;;;;;;;;;;1910:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1868:132;;;;2018:7;2010:48;;;;-1:-1:-1;;;2010:48:24;;23617:2:30;2010:48:24;;;23599:21:30;23656:2;23636:18;;;23629:30;23695;23675:18;;;23668:58;23743:18;;2010:48:24;23415:352:30;2010:48:24;2076:10;976:1117;-1:-1:-1;;;;;;;;976:1117:24:o;13577:839:18:-;8257:36;;;;8234:4;8257:20;;;:9;:20;;;;;:23;13654:13;;8257:23;:36;13679:48;;;;-1:-1:-1;;;13679:48:18;;;;;;;:::i;:::-;13806:27;13842:21;;;:9;:21;;;;;13806:58;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13902:1;13878:14;:21;:25;13874:536;;;13926:21;;;;:9;:21;;;;;13919:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13577:839;;;:::o;13874:536::-;14023:21;14047;14057:10;14047:9;:21::i;:::-;14023:45;;14129:1;14111:7;14105:21;:25;:294;;;;;;;;;;;;;;;;;14231:7;14268:21;:10;:19;:21::i;:::-;14185:167;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14105:294;14082:317;13577:839;-1:-1:-1;;;;13577:839:18:o;13874:536::-;13669:747;13577:839;;;:::o;17626:199::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;666:10:11;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;17760:4:18::1;-1:-1:-1::0;;;;;17760:10:18::1;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;17732:40:18::1;17740:7;-1:-1:-1::0;;;;;17732:22:18::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;17732:40:18::1;;17724:59;;;::::0;-1:-1:-1;;;17724:59:18;;25234:2:30;17724:59:18::1;::::0;::::1;25216:21:30::0;25273:1;25253:18;;;25246:29;-1:-1:-1;;;25291:18:30;;;25284:36;25337:18;;17724:59:18::1;25032:329:30::0;17724:59:18::1;17793:6;:25:::0;;-1:-1:-1;;;;;;17793:25:18::1;-1:-1:-1::0;;;;;17793:25:18;;;::::1;::::0;;;::::1;::::0;;17626:199::o;4137:430:2:-;-1:-1:-1;;;;;4362:20:2;;666:10:11;4362:20:2;;:60;;-1:-1:-1;4386:36:2;4403:4;666:10:11;2254:451:16;:::i;4386:36:2:-;4341:157;;;;-1:-1:-1;;;4341:157:2;;25568:2:30;4341:157:2;;;25550:21:30;25607:2;25587:18;;;25580:30;25646:34;25626:18;;;25619:62;-1:-1:-1;;;25697:18:30;;;25690:48;25755:19;;4341:157:2;25366:414:30;4341:157:2;4508:52;4531:4;4537:2;4541:3;4546:7;4555:4;4508:22;:52::i;1944:183:16:-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;666:10:11;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;2054:19:16::1;::::0;;;:9:::1;:19;::::0;;;;:29:::1;2076:7:::0;2054:19;:29:::1;:::i;:::-;;2111:8;2098:22;2102:7;2098:22;;;;;;:::i;:::-;;;;;;;;1944:183:::0;;:::o;16963:203:18:-;17103:4;430:12:17;:10;:12::i;:::-;1680:1:1::1;2259:7;;:19:::0;2251:63:::1;;;;-1:-1:-1::0;;;2251:63:1::1;;;;;;;:::i;:::-;1680:1;2389:7;:18:::0;17126:33:18::2;17140:9:::0;17151:3;17156:2;17126:13:::2;:33::i;:::-;1637:1:1::1;2562:7;:22:::0;17119:40:18;16963:203;-1:-1:-1;;;;16963:203:18:o;2494:508:2:-;2645:16;2704:3;:10;2685:8;:15;:29;2677:83;;;;-1:-1:-1;;;2677:83:2;;28551:2:30;2677:83:2;;;28533:21:30;28590:2;28570:18;;;28563:30;28629:34;28609:18;;;28602:62;-1:-1:-1;;;28680:18:30;;;28673:39;28729:19;;2677:83:2;28349:405:30;2677:83:2;2771:30;2818:8;:15;-1:-1:-1;;;;;2804:30:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2804:30:2;;2771:63;;2850:9;2845:120;2869:8;:15;2865:1;:19;2845:120;;;2924:30;2934:8;2943:1;2934:11;;;;;;;;:::i;:::-;;;;;;;2947:3;2951:1;2947:6;;;;;;;;:::i;:::-;;;;;;;2924:9;:30::i;:::-;2905:13;2919:1;2905:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2886:3;;;:::i;:::-;;;2845:120;;;-1:-1:-1;2982:13:2;2494:508;-1:-1:-1;;;2494:508:2:o;10057:1484:18:-;10182:4;1680:1:1;2259:7;;:19;2251:63;;;;-1:-1:-1;;;2251:63:1;;;;;;;:::i;:::-;1680:1;2389:7;:18;10207:6:18::1;::::0;::::1;;10206:7;10198:26;;;::::0;-1:-1:-1;;;10198:26:18;;29365:2:30;10198:26:18::1;::::0;::::1;29347:21:30::0;29404:1;29384:18;;;29377:29;-1:-1:-1;;;29422:18:30;;;29415:36;29468:18;;10198:26:18::1;29163:329:30::0;10198:26:18::1;10263:20;::::0;;::::1;10234:26;10263:20:::0;;;:9:::1;:20;::::0;;;;;;;10234:49;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;::::1;::::0;;:26;;:49;;10263:20;;10234:49;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;10234:49:18;;;-1:-1:-1;;10234:49:18::1;::::0;::::1;::::0;-1:-1:-1;;;;;10234:49:18;::::1;;::::0;::::1;::::0;-1:-1:-1;;;10234:49:18;::::1;;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;;;::::0;;;;::::1;::::0;;::::1;;;-1:-1:-1::0;;;;;;10234:49:18::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;;;;;::::1;-1:-1:-1::0;;;;;10234:49:18::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;10234:49:18;;::::1;::::0;;;;-1:-1:-1;;;10234:49:18;;::::1;;::::0;;;;;;-1:-1:-1;10293:22:18::1;10234:49:::0;10293:13:::1;:22::i;:::-;10333:14;::::0;::::1;::::0;-1:-1:-1;;;;;;10333:24:18::1;-1:-1:-1::0;;;10333:24:18::1;10325:44;;;::::0;-1:-1:-1;;;10325:44:18;;29699:2:30;10325:44:18::1;::::0;::::1;29681:21:30::0;29738:1;29718:18;;;29711:29;-1:-1:-1;;;29756:18:30;;;29749:37;29803:18;;10325:44:18::1;29497:330:30::0;10325:44:18::1;10408:15;10387:7;:17;;;-1:-1:-1::0;;;;;10387:36:18::1;;;10379:55;;;::::0;-1:-1:-1;;;10379:55:18;;30034:2:30;10379:55:18::1;::::0;::::1;30016:21:30::0;30073:1;30053:18;;;30046:29;-1:-1:-1;;;30091:18:30;;;30084:36;30137:18;;10379:55:18::1;29832:329:30::0;10379:55:18::1;10470:15;10452:7;:15;;;-1:-1:-1::0;;;;;10452:33:18::1;;10444:52;;;::::0;-1:-1:-1;;;10444:52:18;;30368:2:30;10444:52:18::1;::::0;::::1;30350:21:30::0;30407:1;30387:18;;;30380:29;-1:-1:-1;;;30425:18:30;;;30418:36;30471:18;;10444:52:18::1;30166:329:30::0;10444:52:18::1;888:5:17::0;;666:10:11;;10507:15:18::1;::::0;-1:-1:-1;;;;;888:5:17;877:16;;10567:38:18::1;;;;10588:17;10597:7;10588:8;:17::i;:::-;10548:57;;10620:7;:22;;;10616:275;;;10666:11;10658:36;;;::::0;-1:-1:-1;;;10658:36:18;;30702:2:30;10658:36:18::1;::::0;::::1;30684:21:30::0;30741:2;30721:18;;;30714:30;-1:-1:-1;;;30760:18:30;;;30753:42;30812:18;;10658:36:18::1;30500:336:30::0;10658:36:18::1;10616:275;;;10750:11;:87;;;-1:-1:-1::0;10824:13:18::1;::::0;::::1;::::0;10818:19:::1;::::0;::::1;::::0;::::1;;:::i;:::-;10785:10;::::0;:29:::1;::::0;-1:-1:-1;;;10785:29:18;;-1:-1:-1;;;;;13695:32:30;;;10785:29:18::1;::::0;::::1;13677:51:30::0;10785:10:18;;::::1;::::0;:20:::1;::::0;13650:18:30;;10785:29:18::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;10750:87;10725:155;;;::::0;-1:-1:-1;;;10725:155:18;;31405:2:30;10725:155:18::1;::::0;::::1;31387:21:30::0;31444:1;31424:18;;;31417:29;-1:-1:-1;;;31462:18:30;;;31455:39;31511:18;;10725:155:18::1;31203:332:30::0;10725:155:18::1;10984:21;::::0;::::1;10967:14;10984:21:::0;;;:10:::1;:21;::::0;;;;;::::1;11019:19:::0;::::1;::::0;-1:-1:-1;;;;;10984:21:18;;::::1;::::0;11019:23:::1;::::0;11015:107:::1;;11082:19;::::0;::::1;::::0;-1:-1:-1;;;;;11066:35:18::1;:12;;::::0;::::1;:6:::0;:12:::1;:::i;:::-;-1:-1:-1::0;;;;;11066:35:18::1;;;11058:53;;;::::0;-1:-1:-1;;;11058:53:18;;31944:2:30;11058:53:18::1;::::0;::::1;31926:21:30::0;31983:1;31963:18;;;31956:29;-1:-1:-1;;;32001:18:30;;;31994:35;32046:18;;11058:53:18::1;31742:328:30::0;11058:53:18::1;11132:28;:21:::0;;::::1;;::::0;;;:10:::1;:21;::::0;;;;:28;;;;::::1;::::0;:21;;;:28:::1;::::0;;;-1:-1:-1;;;;;11132:28:18::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;11132:28:18::1;;;;;-1:-1:-1::0;;;;;11132:28:18::1;;;;;;11218:7;:22;;;11217:23;:39;;;;;11245:11;11244:12;11217:39;11213:206;;;11350:6;::::0;11381:13:::1;::::0;::::1;::::0;11272:136:::1;::::0;11317:7;;-1:-1:-1;;;;;11350:6:18;;::::1;::::0;11375:19:::1;::::0;::::1;::::0;::::1;;:::i;:::-;11272:10;::::0;-1:-1:-1;;;;;11272:10:18::1;::::0;:136;;:27:::1;:136::i;:::-;11429:29;11435:2;11439:9;11429:29;;11450:3;11429:29;;;;;;;;;;;;;::::0;:5:::1;:29::i;:::-;11509:2;-1:-1:-1::0;;;;;11474:38:18::1;11490:3;11474:38;;11479:9;11474:38;;;11495:12;666:10:11::0;;587:96;11495:12:18::1;11474:38;::::0;-1:-1:-1;;;;;13695:32:30;;;13677:51;;13665:2;13650:18;11474:38:18::1;;;;;;;11530:4;11523:11;;;;;;1637:1:1::0;2562:7;:22;10057:1484:18;;-1:-1:-1;;;10057:1484:18:o;11692:1352::-;11873:4;1680:1:1;2259:7;;:19;2251:63;;;;-1:-1:-1;;;2251:63:1;;;;;;;:::i;:::-;1680:1;2389:7;:18;11906:28:18::1;11932:2;11913:15;11906:28;:::i;:::-;-1:-1:-1::0;;;;;11897:37:18::1;:5;-1:-1:-1::0;;;;;11897:37:18::1;;;11889:57;;;::::0;-1:-1:-1;;;11889:57:18;;32613:2:30;11889:57:18::1;::::0;::::1;32595:21:30::0;32652:1;32632:18;;;32625:29;-1:-1:-1;;;32670:18:30;;;32663:37;32717:18;;11889:57:18::1;32411:330:30::0;11889:57:18::1;11956:17;11970:2;11956:13;:17::i;:::-;12040:20;::::0;;::::1;12011:26;12040:20:::0;;;:9:::1;:20;::::0;;;;;;;12011:49;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;::::1;::::0;;:26;;:49;;12040:20;;12011:49;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;12011:49:18;;;-1:-1:-1;;12011:49:18::1;::::0;::::1;::::0;-1:-1:-1;;;;;12011:49:18;::::1;;::::0;::::1;::::0;-1:-1:-1;;;12011:49:18;::::1;;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;;;::::0;;;;::::1;::::0;;::::1;;;-1:-1:-1::0;;;;;;12011:49:18::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;;;;;::::1;-1:-1:-1::0;;;;;12011:49:18::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;12011:49:18;;::::1;::::0;;;;-1:-1:-1;;;12011:49:18;;::::1;;::::0;;;;;;-1:-1:-1;12070:22:18::1;12011:49:::0;12070:13:::1;:22::i;:::-;12144:21;::::0;::::1;12127:14;12144:21:::0;;;:10:::1;:21;::::0;;;;;::::1;12179:19:::0;::::1;::::0;-1:-1:-1;;;;;12144:21:18;;::::1;::::0;12179:23:::1;::::0;12175:107:::1;;12242:19;::::0;::::1;::::0;-1:-1:-1;;;;;12226:35:18::1;:12;;::::0;::::1;:6:::0;:12:::1;:::i;:::-;-1:-1:-1::0;;;;;12226:35:18::1;;;12218:53;;;::::0;-1:-1:-1;;;12218:53:18;;31944:2:30;12218:53:18::1;::::0;::::1;31926:21:30::0;31983:1;31963:18;;;31956:29;-1:-1:-1;;;32001:18:30;;;31994:35;32046:18;;12218:53:18::1;31742:328:30::0;12218:53:18::1;12292:15;666:10:11::0;12386:52:18::1;::::0;-1:-1:-1;;;;;;32995:3:30;33036:16;;;33032:25;;12386:52:18::1;::::0;::::1;33020:38:30::0;-1:-1:-1;;33145:2:30;33141:15;;;33137:24;;33124:11;;;33117:45;33196:15;;;33192:24;33178:12;;;33171:46;33251:16;;;33247:25;33233:12;;;33226:47;-1:-1:-1;;;;;;33329:3:30;33307:16;;;33303:51;33289:12;;;33282:73;12292:30:18;;-1:-1:-1;12333:15:18::1;::::0;12351:98:::1;::::0;33371:12:30;;12386:52:18::1;;;;;;;;;;;;12376:63;;;;;;12351:11;:98::i;:::-;12478:5;::::0;12333:116;;-1:-1:-1;12468:30:18::1;::::0;-1:-1:-1;;;;;12478:5:18::1;12333:116:::0;12494:3;12468:9:::1;:30::i;:::-;12460:54;;;::::0;-1:-1:-1;;;12460:54:18;;33596:2:30;12460:54:18::1;::::0;::::1;33578:21:30::0;33635:2;33615:18;;;33608:30;-1:-1:-1;;;33654:18:30;;;33647:41;33705:18;;12460:54:18::1;33394:335:30::0;12460:54:18::1;12525:16;12544:17;12553:7;888:5:17::0;;-1:-1:-1;;;;;877:16:17;;;888:5;;877:16;;788:112;12544:17:18::1;:38;;;;12565:17;12574:7;12565:8;:17::i;:::-;12525:57;;12614:11;:67;;;-1:-1:-1::0;12668:13:18::1;::::0;::::1;::::0;12662:19:::1;::::0;::::1;::::0;::::1;;:::i;:::-;12629:10;::::0;:29:::1;::::0;-1:-1:-1;;;12629:29:18;;-1:-1:-1;;;;;13695:32:30;;;12629:29:18::1;::::0;::::1;13677:51:30::0;12629:10:18;;::::1;::::0;:20:::1;::::0;13650:18:30;;12629:29:18::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;12614:67;12593:123;;;::::0;-1:-1:-1;;;12593:123:18;;31405:2:30;12593:123:18::1;::::0;::::1;31387:21:30::0;31444:1;31424:18;;;31417:29;-1:-1:-1;;;31462:18:30;;;31455:39;31511:18;;12593:123:18::1;31203:332:30::0;12593:123:18::1;12727:28;:21:::0;;::::1;;::::0;;;:10:::1;:21;::::0;;;;:28;;;;::::1;::::0;:21;;;:28:::1;::::0;;;-1:-1:-1;;;;;12727:28:18::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;12727:28:18::1;;;;;-1:-1:-1::0;;;;;12727:28:18::1;;;;;;12808:118;12849:7;12878:4;12903:7;:13;;;12897:3;:19;;;;;;:::i;12808:118::-;12937:29;12943:2;12947:9;12937:29;;12958:3;12937:29;;;;;;;;;;;;;::::0;:5:::1;:29::i;:::-;12982:33;::::0;-1:-1:-1;;;;;13695:32:30;;;13677:51;;12982:33:18;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;13665:2:30;13650:18;12982:33:18::1;;;;;;;13033:4;13026:11;;;;;;;1637:1:1::0;2562:7;:22;11692:1352:18;;-1:-1:-1;;;;;11692:1352:18:o;18669:413::-;18775:18;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18775:18:18;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18827:23:18;18841:8;18827:13;:23::i;:::-;18880:1;18868:9;:13;;;18860:36;;;;-1:-1:-1;;;18860:36:18;;;;;;;:::i;:::-;18931:6;;:42;;-1:-1:-1;;;18931:42:18;;18906:22;;-1:-1:-1;;;;;18931:6:18;;:21;;:42;;18953:8;;18963:9;;18931:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19006:6;;:42;;-1:-1:-1;;;19006:42:18;;18906:67;;-1:-1:-1;18983:20:18;;-1:-1:-1;;;;;19006:6:18;;;;:21;;:42;;19028:8;;19038:9;;19006:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19066:3;;;;-1:-1:-1;18669:413:18;;-1:-1:-1;;;;18669:413:18:o;8306:133::-;8257:36;;;;8391:4;8257:20;;;:9;:20;;;;;:23;8391:4;;8257:23;:36;8414:18;8176:124;1605:92:0;1045:6;;-1:-1:-1;;;;;1045:6:0;666:10:11;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;16324:308:18:-;16421:4;1680:1:1;2259:7;;:19;2251:63;;;;-1:-1:-1;;;2251:63:1;;;;;;;:::i;:::-;1680:1;2389:7;:18;666:10:11;16437:15:18::1;16497:29;666:10:11::0;16497:29:18::1;::::0;::::1;:9;:29::i;:::-;16477:49;;16557:3;16544:16;;:9;:16;;16536:34;;;::::0;-1:-1:-1;;;16536:34:18;;36164:2:30;16536:34:18::1;::::0;::::1;36146:21:30::0;36203:1;36183:18;;;36176:29;-1:-1:-1;;;36221:18:30;;;36214:35;36266:18;;16536:34:18::1;35962:328:30::0;16536:34:18::1;16587:38;16601:9;16612:3;16617:7;16587:13;:38::i;:::-;1637:1:1::0;2562:7;:22;16580:45:18;16324:308;-1:-1:-1;;;;;16324:308:18:o;8704:148::-;8786:18;;:::i;:::-;8823:22;8835:9;8823:11;:22::i;2197:96::-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;666:10:11;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;2266:20:18::1;2276:9;2266;:20::i;1074::16:-:0;;;;;;;:::i;3070:306:2:-;-1:-1:-1;;;;;3172:24:2;;666:10:11;3172:24:2;3164:78;;;;-1:-1:-1;;;3164:78:2;;36497:2:30;3164:78:2;;;36479:21:30;36536:2;36516:18;;;36509:30;36575:34;36555:18;;;36548:62;-1:-1:-1;;;36626:18:30;;;36619:39;36675:19;;3164:78:2;36295:405:30;3164:78:2;666:10:11;3253:32:2;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;3253:42:2;;;;;;;;;;;;:53;;-1:-1:-1;;3253:53:2;;;;;;;;;;3321:48;;1274:41:30;;;3253:42:2;;666:10:11;3321:48:2;;1247:18:30;3321:48:2;;;;;;;3070:306;;:::o;7128:1042:18:-;888:5:17;;-1:-1:-1;;;;;888:5:17;2354:10:18;877:16:17;2345:44:18;;;;2369:20;2378:10;2369:8;:20::i;:::-;2337:70;;;;-1:-1:-1;;;2337:70:18;;36907:2:30;2337:70:18;;;36889:21:30;36946:2;36926:18;;;36919:30;-1:-1:-1;;;36965:18:30;;;36958:43;37018:18;;2337:70:18;36705:337:30;2337:70:18;7449:14:::1;7445:74;;;7495:1;7487:5;:9;7479:29;;;::::0;-1:-1:-1;;;7479:29:18;;37249:2:30;7479:29:18::1;::::0;::::1;37231:21:30::0;37288:1;37268:18;;;37261:29;-1:-1:-1;;;37306:18:30;;;37299:37;37353:18;;7479:29:18::1;37047:330:30::0;7479:29:18::1;7543:1;7536:4;:8;;;:22;;;;;7556:2;7548:4;:10;;;;7536:22;7528:41;;;::::0;-1:-1:-1;;;7528:41:18;;37584:2:30;7528:41:18::1;::::0;::::1;37566:21:30::0;37623:1;37603:18;;;37596:29;-1:-1:-1;;;37641:18:30;;;37634:36;37687:18;;7528:41:18::1;37382:329:30::0;7528:41:18::1;7593:12;::::0;7580:10:::1;::::0;7593:16:::1;::::0;-1:-1:-1;;;7593:12:18;::::1;;;7608:1;7593:16;:::i;:::-;7580:29;;7619:26;7648:411;;;;;;;;7678:3;7648:411;;;;;;7702:5;7648:411;;;;7730:10;-1:-1:-1::0;;;;;7648:411:18::1;;;;;7762:6;7648:411;;;;;;7789:5;7648:411;;;;7824:14;7648:411;;;;;;154:4:26;7860:6:18;;-1:-1:-1::0;;;;;7648:411:18::1;;;;;;7924:4;7648:411;;;;;;7893:11;-1:-1:-1::0;;;;;7648:411:18::1;;;;;7947:3;7648:411;;;;7975:9;7648:411;;;;8009:9;-1:-1:-1::0;;;;;7648:411:18::1;;;;;8041:7;-1:-1:-1::0;;;;;7648:411:18::1;;;::::0;7619:440:::1;;8086:7;8069:9;:14;8079:3;8069:14;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;8069:24:18::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;8069:24:18;;::::1;-1:-1:-1::0;;;;;;8069:24:18;;;;-1:-1:-1;;;8069:24:18::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;-1:-1:-1;;8069:24:18;;;;::::1;;-1:-1:-1::0;;8069:24:18;;;;;::::1;::::0;;;::::1;::::0;;::::1;;-1:-1:-1::0;;8069:24:18;;;;;::::1;::::0;;;::::1;-1:-1:-1::0;;8069:24:18;;;;;;-1:-1:-1;;;;;8069:24:18;;::::1;::::0;;;::::1;;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;8069:24:18;;::::1;-1:-1:-1::0;;8069:24:18;;;;;;;-1:-1:-1;;;8069:24:18;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;8103:12:::1;:18:::0;;-1:-1:-1;;;;8103:18:18::1;;::::0;;::::1;::::0;;::::1;;::::0;;8152:10;;8137:26;;;::::1;::::0;::::1;::::0;-1:-1:-1;;8137:26:18::1;7435:735;;7128:1042:::0;;;;;;;;;;:::o;17172:197::-;17276:18;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17276:18:18;17313:6;;:49;;-1:-1:-1;;;17313:49:18;;-1:-1:-1;;;;;17313:6:18;;;;:21;;:49;;17335:7;;17351:9;;17313:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17306:56;17172:197;-1:-1:-1;;;17172:197:18:o;9541:263::-;888:5:17;;-1:-1:-1;;;;;888:5:17;2354:10:18;877:16:17;2345:44:18;;;;2369:20;2378:10;2369:8;:20::i;:::-;2337:70;;;;-1:-1:-1;;;2337:70:18;;36907:2:30;2337:70:18;;;36889:21:30;36946:2;36926:18;;;36919:30;-1:-1:-1;;;36965:18:30;;;36958:43;37018:18;;2337:70:18;36705:337:30;2337:70:18;8257:36;;;;8234:4;8257:20;;;:9;:20;;;;;:23;;;;:36;9658:39:::1;;;;-1:-1:-1::0;;;9658:39:18::1;;;;;;;:::i;:::-;9707:20;::::0;::::1;;::::0;;;:9:::1;:20;::::0;;;;;:27:::1;;:36:::0;;-1:-1:-1;;9707:36:18::1;;;::::0;;::::1;;;::::0;;9758:39;-1:-1:-1;;;;;;9758:39:18;::::1;::::0;9707:20;9758:39:::1;::::0;::::1;9541:263:::0;;:::o;2254:451:16:-;2514:20;;2557:29;;-1:-1:-1;;;2557:29:16;;-1:-1:-1;;;;;13695:32:30;;;2557:29:16;;;13677:51:30;2377:15:16;;2514:20;;;2549:51;;;;2514:20;;2557:21;;13650:18:30;;2557:29:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2549:51:16;;2545:93;;2623:4;2616:11;;;;;2545:93;-1:-1:-1;;;;;3565:27:2;;;3542:4;3565:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;2655:43:16;3443:166:2;3676:389;-1:-1:-1;;;;;3876:20:2;;666:10:11;3876:20:2;;:60;;-1:-1:-1;3900:36:2;3917:4;666:10:11;2254:451:16;:::i;3900:36:2:-;3855:148;;;;-1:-1:-1;;;3855:148:2;;38380:2:30;3855:148:2;;;38362:21:30;38419:2;38399:18;;;38392:30;38458:34;38438:18;;;38431:62;-1:-1:-1;;;38509:18:30;;;38502:39;38558:19;;3855:148:2;38178:405:30;3855:148:2;4013:45;4031:4;4037:2;4041;4045:6;4053:4;4013:17;:45::i;1846:189:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;666:10:11;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;38790:2:30;1926:73:0::1;::::0;::::1;38772:21:30::0;38829:2;38809:18;;;38802:30;38868:34;38848:18;;;38841:62;-1:-1:-1;;;38919:18:30;;;38912:36;38965:19;;1926:73:0::1;38588:402:30::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;8028:86:2:-:0;8094:4;:13;8101:6;8094:4;:13;:::i;:::-;;8028:86;:::o;2612:470:24:-;2784:4;-1:-1:-1;;;;;2808:20:24;;2800:70;;;;-1:-1:-1;;;2800:70:24;;39197:2:30;2800:70:24;;;39179:21:30;39236:2;39216:18;;;39209:30;39275:34;39255:18;;;39248:62;-1:-1:-1;;;39326:18:30;;;39319:35;39371:19;;2800:70:24;38995:401:30;2800:70:24;2921:154;2948:47;2967:27;2987:6;2967:19;:27::i;:::-;2948:18;:47::i;:::-;2921:154;;;;;;;;;;;;39628:25:30;;;;39701:4;39689:17;;39669:18;;;39662:45;39723:18;;;39716:34;;;39766:18;;;39759:34;;;39600:19;;2921:154:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2899:176:24;:6;-1:-1:-1;;;;;2899:176:24;;2880:195;;2612:470;;;;;;;:::o;2672:96:15:-;2730:7;2756:5;2760:1;2756;:5;:::i;1864:103:2:-;1924:13;1956:4;1949:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1864:103;;;:::o;275:703:12:-;331:13;548:5;557:1;548:10;544:51;;-1:-1:-1;;574:10:12;;;;;;;;;;;;-1:-1:-1;;;574:10:12;;;;;275:703::o;544:51::-;619:5;604:12;658:75;665:9;;658:75;;690:8;;;;:::i;:::-;;-1:-1:-1;712:10:12;;-1:-1:-1;720:2:12;712:10;;:::i;:::-;;;658:75;;;742:19;774:6;-1:-1:-1;;;;;764:17:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;764:17:12;;742:39;;791:150;798:10;;791:150;;824:11;834:1;824:11;;:::i;:::-;;-1:-1:-1;892:10:12;900:2;892:5;:10;:::i;:::-;879:24;;:2;:24;:::i;:::-;866:39;;849:6;856;849:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;849:56:12;;;;;;;;-1:-1:-1;919:11:12;928:2;919:11;;:::i;:::-;;;791:150;;6160:1045:2;6380:7;:14;6366:3;:10;:28;6358:81;;;;-1:-1:-1;;;6358:81:2;;40511:2:30;6358:81:2;;;40493:21:30;40550:2;40530:18;;;40523:30;40589:34;40569:18;;;40562:62;-1:-1:-1;;;40640:18:30;;;40633:38;40688:19;;6358:81:2;40309:404:30;6358:81:2;-1:-1:-1;;;;;6457:16:2;;6449:66;;;;-1:-1:-1;;;6449:66:2;;;;;;;:::i;:::-;666:10:11;6568:60:2;666:10:11;6599:4:2;6605:2;6609:3;6614:7;6623:4;6568:20;:60::i;:::-;6644:9;6639:411;6663:3;:10;6659:1;:14;6639:411;;;6694:10;6707:3;6711:1;6707:6;;;;;;;;:::i;:::-;;;;;;;6694:19;;6727:14;6744:7;6752:1;6744:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6769:19;6791:13;;;;;;;;;;-1:-1:-1;;;;;6791:19:2;;;;;;;;;;;;6744:10;;-1:-1:-1;6832:21:2;;;;6824:76;;;;-1:-1:-1;;;6824:76:2;;;;;;;:::i;:::-;6942:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6942:19:2;;;;;;;;;;6964:20;;;6942:42;;7012:17;;;;;;;:27;;6964:20;;6942:9;7012:27;;6964:20;;7012:27;:::i;:::-;;;;;;;;6680:370;;;6675:3;;;;:::i;:::-;;;6639:411;;;;7095:2;-1:-1:-1;;;;;7065:47:2;7089:4;-1:-1:-1;;;;;7065:47:2;7079:8;-1:-1:-1;;;;;7065:47:2;;7099:3;7104:7;7065:47;;;;;;;:::i;:::-;;;;;;;;7123:75;7159:8;7169:4;7175:2;7179:3;7184:7;7193:4;7123:35;:75::i;:::-;6348:857;6160:1045;;;;;:::o;466:91:17:-;888:5;;-1:-1:-1;;;;;888:5:17;528:10;877:16;511:39;;;;-1:-1:-1;;;511:39:17;;42207:2:30;511:39:17;;;42189:21:30;42246:1;42226:18;;;42219:29;-1:-1:-1;;;42264:18:30;;;42257:36;42310:18;;511:39:17;42005:329:30;14989:1112:18;15101:4;15117:17;15131:2;15117:13;:17::i;:::-;15164:1;15152:9;:13;;;15144:36;;;;-1:-1:-1;;;15144:36:18;;;;;;;:::i;:::-;15204:1;15198:3;:7;;;15190:24;;;;-1:-1:-1;;;15190:24:18;;;;;;42541:2:30;42523:21;;;42580:1;42560:18;;;42553:29;-1:-1:-1;;;42613:2:30;42598:18;;42591:34;42657:2;42642:18;;42339:327;15190:24:18;15254:20;;;;15225:26;15254:20;;;:9;:20;;;;;;;;15225:49;;;;;;;;;;;;;;;;;;;;:26;;:49;;15254:20;;15225:49;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15225:49:18;;;-1:-1:-1;;15225:49:18;;;;-1:-1:-1;;;;;15225:49:18;;;;;;-1:-1:-1;;;15225:49:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;15225:49:18;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15225:49:18;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15225:49:18;;;;;;;-1:-1:-1;;;15225:49:18;;;;;;;;;;-1:-1:-1;15284:22:18;15225:49;15284:13;:22::i;:::-;15400:21;;;;15383:14;15400:21;;;:10;:21;;;;;;-1:-1:-1;;;;;15400:21:18;;15439:13;;;;;15431:39;;;;-1:-1:-1;;;15431:39:18;;42873:2:30;15431:39:18;;;42855:21:30;42912:2;42892:18;;;42885:30;-1:-1:-1;;;42931:18:30;;;42924:43;42984:18;;15431:39:18;42671:337:30;15431:39:18;15546:6;;:39;;-1:-1:-1;;;15546:39:18;;15523:20;;-1:-1:-1;;;;;15546:6:18;;:24;;:39;;15571:2;;15575:9;;15546:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15599:7;;15523:62;;-1:-1:-1;15599:11:18;;;15595:106;;15668:3;:7;;;15634:41;;15661:3;15634:30;;:24;15644:2;15648:9;15634:24;;:9;:24::i;:::-;:30;;;;:::i;:::-;:41;;15626:64;;;;-1:-1:-1;;;15626:64:18;;43215:2:30;15626:64:18;;;43197:21:30;43254:2;43234:18;;;43227:30;-1:-1:-1;;;43273:18:30;;;43266:40;43323:18;;15626:64:18;43013:334:30;15626:64:18;15711:28;:21;;;;;;;:10;:21;;;;;:28;;;;;;:21;;;:28;;;;-1:-1:-1;;;;;15711:28:18;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;15711:28:18;;;;;-1:-1:-1;;;;;15711:28:18;;;;;;15750:25;15756:2;15760:9;15750:25;;15771:3;15750:25;;:5;:25::i;:::-;15790:7;:22;;;15786:247;;15871:14;15894:7;:13;;;15888:3;:19;;;;;;:::i;:::-;16002:6;;15966:10;;15871:36;;-1:-1:-1;15966:56:18;;-1:-1:-1;;;;;15966:10:18;;;;16002:6;16011:2;15871:36;15966:27;:56::i;:::-;15857:176;15786:247;16069:2;-1:-1:-1;;;;;16048:24:18;16064:3;16048:24;;16053:9;16048:24;;;;;;;;;;;;-1:-1:-1;16090:4:18;;14989:1112;-1:-1:-1;;;;;;14989:1112:18:o;8910:117::-;8993:10;;:14;;8985:35;;;;-1:-1:-1;;;8985:35:18;;;;;;;:::i;2680:106::-;2738:4;2772:7;-1:-1:-1;;;;;2761:18:18;:7;1045:6:0;;-1:-1:-1;;;;;1045:6:0;;973:85;2761:7:18;-1:-1:-1;;;;;2761:18:18;;;2680:106;-1:-1:-1;;2680:106:18:o;845:241:9:-;1010:68;;;-1:-1:-1;;;;;43815:15:30;;;1010:68:9;;;43797:34:30;43867:15;;43847:18;;;43840:43;43899:18;;;;43892:34;;;1010:68:9;;;;;;;;;;43732:18:30;;;;1010:68:9;;;;;;;;-1:-1:-1;;;;;1010:68:9;-1:-1:-1;;;1010:68:9;;;983:96;;1003:5;;983:19;:96::i;:::-;845:241;;;;:::o;8502:583:2:-;-1:-1:-1;;;;;8654:21:2;;8646:67;;;;-1:-1:-1;;;8646:67:2;;44139:2:30;8646:67:2;;;44121:21:30;44178:2;44158:18;;;44151:30;44217:34;44197:18;;;44190:62;-1:-1:-1;;;44268:18:30;;;44261:31;44309:19;;8646:67:2;43937:397:30;8646:67:2;666:10:11;8766:107:2;666:10:11;8724:16:2;8809:7;8818:21;8836:2;8818:17;:21::i;:::-;8841:25;8859:6;8841:17;:25::i;:::-;8868:4;8766:20;:107::i;:::-;8884:9;:13;;;;;;;;;;;-1:-1:-1;;;;;8884:22:2;;;;;;;;;:32;;8910:6;;8884:9;:32;;8910:6;;8884:32;:::i;:::-;;;;-1:-1:-1;;8931:57:2;;;44513:25:30;;;44569:2;44554:18;;44547:34;;;-1:-1:-1;;;;;8931:57:2;;;;8964:1;;8931:57;;;;;;44486:18:30;8931:57:2;;;;;;;8999:79;9030:8;9048:1;9052:7;9061:2;9065:6;9073:4;8999:30;:79::i;14422:104:18:-;-1:-1:-1;;;;;14490:18:18;;14482:37;;;;-1:-1:-1;;;14482:37:18;;44794:2:30;14482:37:18;;;44776:21:30;44833:1;44813:18;;;44806:29;-1:-1:-1;;;44851:18:30;;;44844:36;44897:18;;14482:37:18;44592:329:30;478:211:19;610:58;;45168:66:30;610:58:19;;;45156:79:30;45251:12;;;45244:28;;;545:7:19;;45288:12:30;;610:58:19;;;;;;;;;;;;;583:99;;;;;;564:118;;478:211;;;:::o;695:::-;826:4;892:7;-1:-1:-1;;;;;849:50:19;:39;859:7;868:3;:5;;;875:3;:5;;;882:3;:5;;;849:39;;;;;;;;;;;;;;;;;39628:25:30;;;39701:4;39689:17;;;;39684:2;39669:18;;39662:45;39738:2;39723:18;;39716:34;39781:2;39766:18;;39759:34;39615:3;39600:19;;39401:398;849:39:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;849:50:19;;842:57;;695:211;;;;;:::o;2041:169:0:-;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;8445:253:18:-;8521:18;;:::i;:::-;8571:1;8559:9;:13;;;8551:36;;;;-1:-1:-1;;;8551:36:18;;;;;;;:::i;:::-;8605;;;;:20;;;;:9;:20;;;;;:23;;;;:36;8597:57;;;;-1:-1:-1;;;8597:57:18;;;;;;;:::i;:::-;8671:20;;;;;;;;:9;:20;;;;;;;;;8664:27;;;;;;;;;;;;;;;;;;;;;;8671:20;8664:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8664:27:18;;;-1:-1:-1;;8664:27:18;;;;-1:-1:-1;;;;;8664:27:18;;;;;;-1:-1:-1;;;8664:27:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8664:27:18;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8664:27:18;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8664:27:18;;;;;;;-1:-1:-1;;;8664:27:18;;;;;;;;;;;-1:-1:-1;;8445:253:18:o;662:120:17:-;726:5;:15;;-1:-1:-1;;;;;;726:15:17;-1:-1:-1;;;;;726:15:17;;;;;;;;756:19;;;;-1:-1:-1;;756:19:17;662:120;:::o;5017:797:2:-;-1:-1:-1;;;;;5198:16:2;;5190:66;;;;-1:-1:-1;;;5190:66:2;;;;;;;:::i;:::-;666:10:11;5309:96:2;666:10:11;5340:4:2;5346:2;5350:21;5368:2;5350:17;:21::i;5309:96::-;5416:19;5438:13;;;;;;;;;;;-1:-1:-1;;;;;5438:19:2;;;;;;;;;;5475:21;;;;5467:76;;;;-1:-1:-1;;;5467:76:2;;;;;;;:::i;:::-;5577:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5577:19:2;;;;;;;;;;5599:20;;;5577:42;;5639:17;;;;;;;:27;;5599:20;;5577:9;5639:27;;5599:20;;5639:27;:::i;:::-;;;;-1:-1:-1;;5682:46:2;;;44513:25:30;;;44569:2;44554:18;;44547:34;;;-1:-1:-1;;;;;5682:46:2;;;;;;;;;;;;;;44486:18:30;5682:46:2;;;;;;;5739:68;5770:8;5780:4;5786:2;5790;5794:6;5802:4;5739:30;:68::i;:::-;5180:634;;5017:797;;;;;:::o;2099:396:24:-;2206:7;334:98;;;;;;;;;;;;;;;;;315:123;;;;;;;2354:12;;2388:11;;;;2431:24;;;;;2421:35;;;;;;2275:199;;;;;45542:25:30;;;45598:2;45583:18;;45576:34;;;;-1:-1:-1;;;;;45646:32:30;45641:2;45626:18;;45619:60;45710:2;45695:18;;45688:34;45529:3;45514:19;;45311:417;1884:249:22;1980:7;2078:20;1341:15;;;1264:99;2078:20;2049:63;;-1:-1:-1;;;2049:63:22;;;45991:27:30;46034:11;;;46027:27;;;;46070:12;;;46063:28;;;46107:12;;2049:63:22;45733:392:30;3828:2611:18;-1:-1:-1;;;;;4055:18:18;;;:38;;;;-1:-1:-1;;;;;;4077:16:18;;;4055:38;4109:7;4051:75;4136:26;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4136:26:18;4178:9;4173:2260;4197:3;:10;4193:1;:14;4173:2260;;;4228:10;4241:3;4245:1;4241:6;;;;;;;;:::i;:::-;;;;;;;4228:19;;4261:14;4278:7;4286:1;4278:10;;;;;;;;:::i;:::-;;;;;;;4261:27;;4303:26;4332:23;4351:2;4332:11;:23::i;:::-;4444:6;;:42;;-1:-1:-1;;;4444:42:18;;4303:52;;-1:-1:-1;4421:20:18;;-1:-1:-1;;;;;4444:6:18;;;;:24;;:42;;4469:4;;4482:2;;4444:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4504:7;;4421:65;;-1:-1:-1;4504:11:18;;;4500:120;;4583:3;:7;;;4543:47;;4573:6;4543:27;4553:4;4566:2;4543:27;;:9;:27::i;:::-;:36;;;;:::i;:::-;:47;;4535:70;;;;-1:-1:-1;;;4535:70:18;;43215:2:30;4535:70:18;;;43197:21:30;43254:2;43234:18;;;43227:30;-1:-1:-1;;;43273:18:30;;;43266:40;43323:18;;4535:70:18;43013:334:30;4535:70:18;4664:15;-1:-1:-1;;;;;4699:18:18;;;4695:963;;4747:6;;:42;;-1:-1:-1;;;4747:42:18;;-1:-1:-1;;;;;4747:6:18;;;;:24;;:42;;4772:4;;4785:2;;4747:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4875:11;;4737:52;;-1:-1:-1;4875:15:18;4871:538;;4915:14;4932:45;4943:15;4961:7;:15;;;4932:3;:45::i;:::-;4915:62;;5015:6;5000:7;:11;;:21;;;;;;;:::i;:::-;;;-1:-1:-1;5057:17:18;;;;-1:-1:-1;;;;;5047:27:18;;;;;;;5043:348;;;5126:6;;5193:13;;;;5179:11;;-1:-1:-1;;;;;5126:6:18;;;;:23;;5179:27;;;:::i;:::-;5236:17;;;;5320:11;;;;5126:242;;-1:-1:-1;;;;;;5126:242:18;;;;;;;;;;46357:25:30;;;;-1:-1:-1;;;;;46455:15:30;;;46435:18;;;46428:43;46507:15;;;46487:18;;;46480:43;46539:18;;;46532:34;46329:19;;5126:242:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5102:7;:20;;:266;;;;;;;:::i;:::-;;;-1:-1:-1;5043:348:18;4892:517;4871:538;-1:-1:-1;5443:17:18;;;;;-1:-1:-1;;;;;5506:15:18;5479:43;;;;5591:6;;:52;;-1:-1:-1;;;5591:52:18;;-1:-1:-1;;;;;5591:6:18;;;;:25;;:52;;5617:4;;5630:2;;5443:7;;5591:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4695:963;-1:-1:-1;;;;;5676:16:18;;;5672:751;;5770:6;;:40;;-1:-1:-1;;;5770:40:18;;-1:-1:-1;;;;;5770:6:18;;;;:24;;:40;;5795:2;;5806;;5770:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5760:50;;5829:14;5846:45;5857:15;5875:7;:15;;;5846:3;:45::i;:::-;5914:11;;5829:62;;-1:-1:-1;5914:15:18;;;;:46;;;5943:7;:17;;;-1:-1:-1;;;;;5933:27:18;:7;-1:-1:-1;;;;;5933:27:18;;5914:46;5910:339;;;6008:6;;6071:13;;;;6057:11;;-1:-1:-1;;;;;6008:6:18;;;;:23;;6057:27;;;:::i;:::-;6110:17;;;;6186:11;;;;6008:222;;-1:-1:-1;;;;;;6008:222:18;;;;;;;;;;46357:25:30;;;;-1:-1:-1;;;;;46455:15:30;;;46435:18;;;46428:43;46507:15;;;46487:18;;;46480:43;46539:18;;;46532:34;46329:19;;6008:222:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5984:7;:20;;:246;;;;;;;:::i;:::-;;;-1:-1:-1;5910:339:18;6282:6;6267:7;:11;;:21;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;;6306:33:18;;:17;;;:33;6358:6;;:50;;-1:-1:-1;;;6358:50:18;;-1:-1:-1;;;;;6358:6:18;;;;:25;;:50;;6384:2;;6395;;6306:7;;6358:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5694:729;5672:751;4214:2219;;;;;4209:3;;;;;:::i;:::-;;;;4173:2260;;;;4041:2398;3828:2611;;;;;;:::o;14024:792:2:-;-1:-1:-1;;;;;14256:13:2;;1034:20:10;1080:8;14252:558:2;;14291:79;;-1:-1:-1;;;14291:79:2;;-1:-1:-1;;;;;14291:43:2;;;;;:79;;14335:8;;14345:4;;14351:3;;14356:7;;14365:4;;14291:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14291:79:2;;;;;;;;-1:-1:-1;;14291:79:2;;;;;;;;;;;;:::i;:::-;;;14287:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;14676:6;14669:14;;-1:-1:-1;;;14669:14:2;;;;;;;;:::i;14287:513::-;;;14723:62;;-1:-1:-1;;;14723:62:2;;49172:2:30;14723:62:2;;;49154:21:30;49211:2;49191:18;;;49184:30;49250:34;49230:18;;;49223:62;-1:-1:-1;;;49301:18:30;;;49294:50;49361:19;;14723:62:2;48970:416:30;14287:513:2;-1:-1:-1;;;;;;14449:60:2;;-1:-1:-1;;;14449:60:2;14445:157;;14533:50;;-1:-1:-1;;;14533:50:2;;;;;;;:::i;10394:657::-;-1:-1:-1;;;;;10519:21:2;;10511:69;;;;-1:-1:-1;;;10511:69:2;;50002:2:30;10511:69:2;;;49984:21:30;50041:2;50021:18;;;50014:30;50080:34;50060:18;;;50053:62;-1:-1:-1;;;50131:18:30;;;50124:33;50174:19;;10511:69:2;49800:399:30;10511:69:2;666:10:11;10633:105:2;666:10:11;10664:7:2;10591:16;10685:21;10703:2;10685:17;:21::i;:::-;10708:25;10726:6;10708:17;:25::i;:::-;10633:105;;;;;;;;;;;;:20;:105::i;:::-;10749:22;10774:13;;;;;;;;;;;-1:-1:-1;;;;;10774:22:2;;;;;;;;;;10814:24;;;;10806:73;;;;-1:-1:-1;;;10806:73:2;;50406:2:30;10806:73:2;;;50388:21:30;50445:2;50425:18;;;50418:30;50484:34;50464:18;;;50457:62;-1:-1:-1;;;50535:18:30;;;50528:34;50579:19;;10806:73:2;50204:400:30;10806:73:2;10913:9;:13;;;;;;;;;;;-1:-1:-1;;;;;10913:22:2;;;;;;;;;;;;10938:23;;;10913:48;;10987:57;;44513:25:30;;;44554:18;;;44547:34;;;10913:22:2;;10987:57;;;;;;44486:18:30;10987:57:2;;;;;;;10501:550;;10394:657;;;:::o;3140:706:9:-;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:9;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:9;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:9;;51061:2:30;3744:85:9;;;51043:21:30;51100:2;51080:18;;;51073:30;51139:34;51119:18;;;51112:62;-1:-1:-1;;;51190:18:30;;;51183:40;51240:19;;3744:85:9;50859:406:30;3744:85:9;3210:636;3140:706;;:::o;14822:193:2:-;14941:16;;;14955:1;14941:16;;;;;;;;;14888;;14916:22;;14941:16;;;;;;;;;;;;-1:-1:-1;14941:16:2;14916:41;;14978:7;14967:5;14973:1;14967:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;15003:5;14822:193;-1:-1:-1;;14822:193:2:o;13293:725::-;-1:-1:-1;;;;;13500:13:2;;1034:20:10;1080:8;13496:516:2;;13535:72;;-1:-1:-1;;;13535:72:2;;-1:-1:-1;;;;;13535:38:2;;;;;:72;;13574:8;;13584:4;;13590:2;;13594:6;;13602:4;;13535:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13535:72:2;;;;;;;;-1:-1:-1;;13535:72:2;;;;;;;;;;;;:::i;:::-;;;13531:471;;;;:::i;:::-;-1:-1:-1;;;;;;13656:55:2;;-1:-1:-1;;;13656:55:2;13652:152;;13735:50;;-1:-1:-1;;;13735:50:2;;;;;;;:::i;2792:102:18:-;2848:6;2878:1;-1:-1:-1;;;;;2873:6:18;:1;-1:-1:-1;;;;;2873:6:18;;;:14;;2886:1;2873:14;;;-1:-1:-1;2882:1:18;;2792:102;-1:-1:-1;2792:102:18:o;3461:223:10:-;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3594;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:10;;52445:2:30;4828:60:10;;;52427:21:30;52484:2;52464:18;;;52457:30;52523:31;52503:18;;;52496:59;52572:18;;4828:60:10;52243:353:30;4828:60:10;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:10;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:51;5006:7;5015:10;5027:12;4989:16;:51::i;:::-;4982:58;4548:499;-1:-1:-1;;;;;;;4548:499:10:o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:10;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7472:365;7809:12;7802:20;;-1:-1:-1;;;7802:20:10;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:30:-;-1:-1:-1;;;;;89:31:30;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:30:o;652:131::-;-1:-1:-1;;;;;;726:32:30;;716:43;;706:71;;773:1;770;763:12;788:245;846:6;899:2;887:9;878:7;874:23;870:32;867:52;;;915:1;912;905:12;867:52;954:9;941:23;973:30;997:5;973:30;:::i;1326:118::-;1412:5;1405:13;1398:21;1391:5;1388:32;1378:60;;1434:1;1431;1424:12;1449:241;1505:6;1558:2;1546:9;1537:7;1533:23;1529:32;1526:52;;;1574:1;1571;1564:12;1526:52;1613:9;1600:23;1632:28;1654:5;1632:28;:::i;1695:127::-;1756:10;1751:3;1747:20;1744:1;1737:31;1787:4;1784:1;1777:15;1811:4;1808:1;1801:15;1827:249;1937:2;1918:13;;-1:-1:-1;;1914:27:30;1902:40;;-1:-1:-1;;;;;1957:34:30;;1993:22;;;1954:62;1951:88;;;2019:18;;:::i;:::-;2055:2;2048:22;-1:-1:-1;;1827:249:30:o;2081:556::-;2124:5;2177:3;2170:4;2162:6;2158:17;2154:27;2144:55;;2195:1;2192;2185:12;2144:55;2231:6;2218:20;-1:-1:-1;;;;;2253:2:30;2250:26;2247:52;;;2279:18;;:::i;:::-;2328:2;2322:9;2340:67;2395:2;2376:13;;-1:-1:-1;;2372:27:30;2401:4;2368:38;2322:9;2340:67;:::i;:::-;2431:2;2423:6;2416:18;2477:3;2470:4;2465:2;2457:6;2453:15;2449:26;2446:35;2443:55;;;2494:1;2491;2484:12;2443:55;2558:2;2551:4;2543:6;2539:17;2532:4;2524:6;2520:17;2507:54;2605:1;2581:15;;;2598:4;2577:26;2570:37;;;;2585:6;2081:556;-1:-1:-1;;;2081:556:30:o;2642:322::-;2711:6;2764:2;2752:9;2743:7;2739:23;2735:32;2732:52;;;2780:1;2777;2770:12;2732:52;2820:9;2807:23;-1:-1:-1;;;;;2845:6:30;2842:30;2839:50;;;2885:1;2882;2875:12;2839:50;2908;2950:7;2941:6;2930:9;2926:22;2908:50;:::i;2969:250::-;3054:1;3064:113;3078:6;3075:1;3072:13;3064:113;;;3154:11;;;3148:18;3135:11;;;3128:39;3100:2;3093:10;3064:113;;;-1:-1:-1;;3211:1:30;3193:16;;3186:27;2969:250::o;3224:271::-;3266:3;3304:5;3298:12;3331:6;3326:3;3319:19;3347:76;3416:6;3409:4;3404:3;3400:14;3393:4;3386:5;3382:16;3347:76;:::i;:::-;3477:2;3456:15;-1:-1:-1;;3452:29:30;3443:39;;;;3484:4;3439:50;;3224:271;-1:-1:-1;;3224:271:30:o;3500:220::-;3649:2;3638:9;3631:21;3612:4;3669:45;3710:2;3699:9;3695:18;3687:6;3669:45;:::i;3725:156::-;3791:20;;3851:4;3840:16;;3830:27;;3820:55;;3871:1;3868;3861:12;3820:55;3725:156;;;:::o;3886:664::-;3988:6;3996;4004;4012;4020;4073:3;4061:9;4052:7;4048:23;4044:33;4041:53;;;4090:1;4087;4080:12;4041:53;4129:9;4116:23;4148:31;4173:5;4148:31;:::i;:::-;4198:5;-1:-1:-1;4254:2:30;4239:18;;4226:32;-1:-1:-1;;;;;4270:30:30;;4267:50;;;4313:1;4310;4303:12;4267:50;4336;4378:7;4369:6;4358:9;4354:22;4336:50;:::i;:::-;4326:60;;;4433:2;4422:9;4418:18;4405:32;4395:42;;4484:2;4473:9;4469:18;4456:32;4446:42;;4507:37;4539:3;4528:9;4524:19;4507:37;:::i;:::-;4497:47;;3886:664;;;;;;;;:::o;4778:180::-;4837:6;4890:2;4878:9;4869:7;4865:23;4861:32;4858:52;;;4906:1;4903;4896:12;4858:52;-1:-1:-1;4929:23:30;;4778:180;-1:-1:-1;4778:180:30:o;5145:247::-;5204:6;5257:2;5245:9;5236:7;5232:23;5228:32;5225:52;;;5273:1;5270;5263:12;5225:52;5312:9;5299:23;5331:31;5356:5;5331:31;:::i;5397:183::-;5457:4;-1:-1:-1;;;;;5482:6:30;5479:30;5476:56;;;5512:18;;:::i;:::-;-1:-1:-1;5557:1:30;5553:14;5569:4;5549:25;;5397:183::o;5585:724::-;5639:5;5692:3;5685:4;5677:6;5673:17;5669:27;5659:55;;5710:1;5707;5700:12;5659:55;5746:6;5733:20;5772:4;5795:43;5835:2;5795:43;:::i;:::-;5867:2;5861:9;5879:31;5907:2;5899:6;5879:31;:::i;:::-;5945:18;;;6037:1;6033:10;;;;6021:23;;6017:32;;;5979:15;;;;-1:-1:-1;6061:15:30;;;6058:35;;;6089:1;6086;6079:12;6058:35;6125:2;6117:6;6113:15;6137:142;6153:6;6148:3;6145:15;6137:142;;;6219:17;;6207:30;;6257:12;;;;6170;;6137:142;;;-1:-1:-1;6297:6:30;5585:724;-1:-1:-1;;;;;;5585:724:30:o;6314:1072::-;6468:6;6476;6484;6492;6500;6553:3;6541:9;6532:7;6528:23;6524:33;6521:53;;;6570:1;6567;6560:12;6521:53;6609:9;6596:23;6628:31;6653:5;6628:31;:::i;:::-;6678:5;-1:-1:-1;6735:2:30;6720:18;;6707:32;6748:33;6707:32;6748:33;:::i;:::-;6800:7;-1:-1:-1;6858:2:30;6843:18;;6830:32;-1:-1:-1;;;;;6911:14:30;;;6908:34;;;6938:1;6935;6928:12;6908:34;6961:61;7014:7;7005:6;6994:9;6990:22;6961:61;:::i;:::-;6951:71;;7075:2;7064:9;7060:18;7047:32;7031:48;;7104:2;7094:8;7091:16;7088:36;;;7120:1;7117;7110:12;7088:36;7143:63;7198:7;7187:8;7176:9;7172:24;7143:63;:::i;:::-;7133:73;;7259:3;7248:9;7244:19;7231:33;7215:49;;7289:2;7279:8;7276:16;7273:36;;;7305:1;7302;7295:12;7273:36;;7328:52;7372:7;7361:8;7350:9;7346:24;7328:52;:::i;:::-;7318:62;;;6314:1072;;;;;;;;:::o;7391:390::-;7469:6;7477;7530:2;7518:9;7509:7;7505:23;7501:32;7498:52;;;7546:1;7543;7536:12;7498:52;7582:9;7569:23;7559:33;;7643:2;7632:9;7628:18;7615:32;-1:-1:-1;;;;;7662:6:30;7659:30;7656:50;;;7702:1;7699;7692:12;7656:50;7725;7767:7;7758:6;7747:9;7743:22;7725:50;:::i;:::-;7715:60;;;7391:390;;;;;:::o;7786:121::-;7871:10;7864:5;7860:22;7853:5;7850:33;7840:61;;7897:1;7894;7887:12;7912:525;7987:6;7995;8003;8056:2;8044:9;8035:7;8031:23;8027:32;8024:52;;;8072:1;8069;8062:12;8024:52;8111:9;8098:23;8130:30;8154:5;8130:30;:::i;:::-;8179:5;-1:-1:-1;8236:2:30;8221:18;;8208:32;8249;8208;8249;:::i;:::-;8300:7;-1:-1:-1;8359:2:30;8344:18;;8331:32;8372:33;8331:32;8372:33;:::i;:::-;8424:7;8414:17;;;7912:525;;;;;:::o;8442:1277::-;8560:6;8568;8621:2;8609:9;8600:7;8596:23;8592:32;8589:52;;;8637:1;8634;8627:12;8589:52;8677:9;8664:23;-1:-1:-1;;;;;8747:2:30;8739:6;8736:14;8733:34;;;8763:1;8760;8753:12;8733:34;8801:6;8790:9;8786:22;8776:32;;8846:7;8839:4;8835:2;8831:13;8827:27;8817:55;;8868:1;8865;8858:12;8817:55;8904:2;8891:16;8926:4;8949:43;8989:2;8949:43;:::i;:::-;9021:2;9015:9;9033:31;9061:2;9053:6;9033:31;:::i;:::-;9099:18;;;9187:1;9183:10;;;;9175:19;;9171:28;;;9133:15;;;;-1:-1:-1;9211:19:30;;;9208:39;;;9243:1;9240;9233:12;9208:39;9267:11;;;;9287:217;9303:6;9298:3;9295:15;9287:217;;;9383:3;9370:17;9400:31;9425:5;9400:31;:::i;:::-;9444:18;;9320:12;;;;9482;;;;9287:217;;;9523:6;-1:-1:-1;;9567:18:30;;9554:32;;-1:-1:-1;;9598:16:30;;;9595:36;;;9627:1;9624;9617:12;9595:36;;9650:63;9705:7;9694:8;9683:9;9679:24;9650:63;:::i;9724:435::-;9777:3;9815:5;9809:12;9842:6;9837:3;9830:19;9868:4;9897:2;9892:3;9888:12;9881:19;;9934:2;9927:5;9923:14;9955:1;9965:169;9979:6;9976:1;9973:13;9965:169;;;10040:13;;10028:26;;10074:12;;;;10109:15;;;;10001:1;9994:9;9965:169;;;-1:-1:-1;10150:3:30;;9724:435;-1:-1:-1;;;;;9724:435:30:o;10164:261::-;10343:2;10332:9;10325:21;10306:4;10363:56;10415:2;10404:9;10400:18;10392:6;10363:56;:::i;10430:129::-;-1:-1:-1;;;;;10508:5:30;10504:30;10497:5;10494:41;10484:69;;10549:1;10546;10539:12;10564:132;10631:20;;10660:30;10631:20;10660:30;:::i;10701:1202::-;10814:6;10822;10830;10838;10846;10890:9;10881:7;10877:23;10920:3;10916:2;10912:12;10909:32;;;10937:1;10934;10927:12;10909:32;10976:9;10963:23;10995:30;11019:5;10995:30;:::i;:::-;11044:5;-1:-1:-1;11101:2:30;11086:18;;11073:32;11114;11073;11114;:::i;:::-;11165:7;-1:-1:-1;11224:2:30;11209:18;;11196:32;11237:33;11196:32;11237:33;:::i;:::-;11289:7;-1:-1:-1;11348:2:30;11333:18;;11320:32;11361;11320;11361;:::i;:::-;11412:7;-1:-1:-1;11454:2:30;-1:-1:-1;;11435:17:30;;11431:26;11428:46;;;11470:1;11467;11460:12;11428:46;;11503:2;11497:9;11545:2;11537:6;11533:15;11614:6;11602:10;11599:22;-1:-1:-1;;;;;11566:10:30;11563:34;11560:62;11557:88;;;11625:18;;:::i;:::-;11661:2;11654:22;11728:3;11713:19;;11700:33;11685:49;;11795:3;11780:19;;11767:33;11762:2;11750:15;;11743:58;11834:37;11866:3;11851:19;;11834:37;:::i;:::-;11829:2;11821:6;11817:15;11810:62;11891:6;11881:16;;;10701:1202;;;;;;;;:::o;11908:386::-;11975:6;11983;12036:2;12024:9;12015:7;12011:23;12007:32;12004:52;;;12052:1;12049;12042:12;12004:52;12091:9;12078:23;12110:31;12135:5;12110:31;:::i;:::-;12160:5;-1:-1:-1;12217:2:30;12202:18;;12189:32;12230;12189;12230;:::i;:::-;12281:7;12271:17;;;11908:386;;;;;:::o;13936:245::-;13994:6;14047:2;14035:9;14026:7;14022:23;14018:32;14015:52;;;14063:1;14060;14053:12;14015:52;14102:9;14089:23;14121:30;14145:5;14121:30;:::i;14186:384::-;14252:6;14260;14313:2;14301:9;14292:7;14288:23;14284:32;14281:52;;;14329:1;14326;14319:12;14281:52;14368:9;14355:23;14387:30;14411:5;14387:30;:::i;15005:1727::-;15192:2;15181:9;15174:21;15204:52;15252:2;15241:9;15237:18;15228:6;15222:13;12776:10;12765:22;12753:35;;12700:94;15204:52;15155:4;15303:2;15295:6;15291:15;15285:22;15326:6;15368:2;15363;15352:9;15348:18;15341:30;15394:52;15441:3;15430:9;15426:19;15412:12;15394:52;:::i;:::-;15380:66;;15495:2;15487:6;15483:15;15477:22;15508:54;15558:2;15547:9;15543:18;15527:14;-1:-1:-1;;;;;14641:31:30;14629:44;;14575:104;15508:54;-1:-1:-1;15611:2:30;15599:15;;15593:22;14760:6;14749:18;;15673:3;15658:19;;14737:31;15624:54;15733:3;15725:6;15721:16;15715:23;15709:3;15698:9;15694:19;15687:52;15788:3;15780:6;15776:16;15770:23;15802:52;15849:3;15838:9;15834:19;15818:14;1108:13;1101:21;1089:34;;1038:91;15802:52;-1:-1:-1;15903:3:30;15891:16;;15885:23;-1:-1:-1;;;;;;14844:25:30;;15966:3;15951:19;;14832:38;15917:54;16020:3;16012:6;16008:16;16002:23;16044:3;16056:53;16105:2;16094:9;16090:18;16074:14;14760:6;14749:18;14737:31;;14684:90;16056:53;16146:15;;16140:22;;-1:-1:-1;16181:3:30;16193:54;16228:18;;;16140:22;-1:-1:-1;;;;;14947:46:30;14935:59;;14881:119;16193:54;16272:15;;16266:22;16307:3;16326:18;;;16319:30;;;;16374:15;;16368:22;16409:3;16428:18;;;16421:30;;;;16488:15;;16482:22;;-1:-1:-1;16523:3:30;16535:53;16569:18;;;16482:22;-1:-1:-1;;;;;12364:30:30;12352:43;;12299:102;16535:53;16625:15;;;16619:22;-1:-1:-1;;;;;12364:30:30;16684:18;;12352:43;;;;-1:-1:-1;16720:6:30;;-1:-1:-1;15005:1727:30:o;16945:382::-;17010:6;17018;17071:2;17059:9;17050:7;17046:23;17042:32;17039:52;;;17087:1;17084;17077:12;17039:52;17126:9;17113:23;17145:31;17170:5;17145:31;:::i;:::-;17195:5;-1:-1:-1;17252:2:30;17237:18;;17224:32;17265:30;17224:32;17265:30;:::i;17555:159::-;17622:20;;17682:6;17671:18;;17661:29;;17651:57;;17704:1;17701;17694:12;17719:1147;17862:6;17870;17878;17886;17894;17902;17910;17918;17926;17934;17987:3;17975:9;17966:7;17962:23;17958:33;17955:53;;;18004:1;18001;17994:12;17955:53;18027:28;18045:9;18027:28;:::i;:::-;18017:38;;18106:2;18095:9;18091:18;18078:32;-1:-1:-1;;;;;18125:6:30;18122:30;18119:50;;;18165:1;18162;18155:12;18119:50;18188;18230:7;18221:6;18210:9;18206:22;18188:50;:::i;:::-;18178:60;;;18285:2;18274:9;18270:18;18257:32;18247:42;;18339:2;18328:9;18324:18;18311:32;18352:28;18374:5;18352:28;:::i;:::-;18399:5;-1:-1:-1;18456:3:30;18441:19;;18428:33;-1:-1:-1;;;;;18492:48:30;;18480:61;;18470:89;;18555:1;18552;18545:12;18470:89;18578:7;-1:-1:-1;18604:38:30;18637:3;18622:19;;18604:38;:::i;:::-;18594:48;;18689:3;18678:9;18674:19;18661:33;18651:43;;18741:3;18730:9;18726:19;18713:33;18703:43;;18765:38;18798:3;18787:9;18783:19;18765:38;:::i;:::-;18755:48;;18822:38;18855:3;18844:9;18840:19;18822:38;:::i;:::-;18812:48;;17719:1147;;;;;;;;;;;;;:::o;18871:259::-;12483:12;;12471:25;;12549:4;12538:16;;;12532:23;-1:-1:-1;;;;;12528:48:30;12512:14;;;12505:72;12626:4;12615:16;;;12609:23;12593:14;;;12586:47;12682:4;12671:16;;;12665:23;12649:14;;;12642:47;19063:3;19048:19;;19076:48;12406:289;19135:420;19201:6;19209;19262:2;19250:9;19241:7;19237:23;19233:32;19230:52;;;19278:1;19275;19268:12;19230:52;19317:9;19304:23;19336:30;19360:5;19336:30;:::i;:::-;19385:5;-1:-1:-1;19442:2:30;19427:18;;19414:32;-1:-1:-1;;;;;;19477:27:30;;19465:40;;19455:68;;19519:1;19516;19509:12;19560:388;19628:6;19636;19689:2;19677:9;19668:7;19664:23;19660:32;19657:52;;;19705:1;19702;19695:12;19657:52;19744:9;19731:23;19763:31;19788:5;19763:31;:::i;:::-;19813:5;-1:-1:-1;19870:2:30;19855:18;;19842:32;19883:33;19842:32;19883:33;:::i;19953:735::-;20057:6;20065;20073;20081;20089;20142:3;20130:9;20121:7;20117:23;20113:33;20110:53;;;20159:1;20156;20149:12;20110:53;20198:9;20185:23;20217:31;20242:5;20217:31;:::i;:::-;20267:5;-1:-1:-1;20324:2:30;20309:18;;20296:32;20337:33;20296:32;20337:33;:::i;:::-;20389:7;-1:-1:-1;20443:2:30;20428:18;;20415:32;;-1:-1:-1;20494:2:30;20479:18;;20466:32;;-1:-1:-1;20549:3:30;20534:19;;20521:33;-1:-1:-1;;;;;20566:30:30;;20563:50;;;20609:1;20606;20599:12;20563:50;20632;20674:7;20665:6;20654:9;20650:22;20632:50;:::i;21105:356::-;21307:2;21289:21;;;21326:18;;;21319:30;21385:34;21380:2;21365:18;;21358:62;21452:2;21437:18;;21105:356::o;21466:380::-;21545:1;21541:12;;;;21588;;;21609:61;;21663:4;21655:6;21651:17;21641:27;;21609:61;21716:2;21708:6;21705:14;21685:18;21682:38;21679:161;;21762:10;21757:3;21753:20;21750:1;21743:31;21797:4;21794:1;21787:15;21825:4;21822:1;21815:15;22253:432;-1:-1:-1;;;;;22510:15:30;;;22492:34;;22562:15;;22557:2;22542:18;;22535:43;22614:2;22609;22594:18;;22587:30;;;22435:4;;22634:45;;22660:18;;22652:6;22634:45;:::i;:::-;22626:53;22253:432;-1:-1:-1;;;;;22253:432:30:o;22690:428::-;22847:3;22885:6;22879:13;22901:66;22960:6;22955:3;22948:4;22940:6;22936:17;22901:66;:::i;:::-;23036:2;23032:15;;;;-1:-1:-1;;23028:53:30;22989:16;;;;23014:68;;;23109:2;23098:14;;22690:428;-1:-1:-1;;22690:428:30:o;23123:287::-;23252:3;23290:6;23284:13;23306:66;23365:6;23360:3;23353:4;23345:6;23341:17;23306:66;:::i;:::-;23388:16;;;;;23123:287;-1:-1:-1;;23123:287:30:o;23772:331::-;23974:2;23956:21;;;24013:1;23993:18;;;23986:29;-1:-1:-1;;;24046:2:30;24031:18;;24024:38;24094:2;24079:18;;23772:331::o;24108:663::-;24388:3;24426:6;24420:13;24442:66;24501:6;24496:3;24489:4;24481:6;24477:17;24442:66;:::i;:::-;24571:13;;24530:16;;;;24593:70;24571:13;24530:16;24640:4;24628:17;;24593:70;:::i;:::-;-1:-1:-1;;;24685:20:30;;24714:22;;;24763:1;24752:13;;24108:663;-1:-1:-1;;;;24108:663:30:o;24776:251::-;24846:6;24899:2;24887:9;24878:7;24874:23;24870:32;24867:52;;;24915:1;24912;24905:12;24867:52;24947:9;24941:16;24966:31;24991:5;24966:31;:::i;25911:545::-;26013:2;26008:3;26005:11;26002:448;;;26049:1;26074:5;26070:2;26063:17;26119:4;26115:2;26105:19;26189:2;26177:10;26173:19;26170:1;26166:27;26160:4;26156:38;26225:4;26213:10;26210:20;26207:47;;;-1:-1:-1;26248:4:30;26207:47;26303:2;26298:3;26294:12;26291:1;26287:20;26281:4;26277:31;26267:41;;26358:82;26376:2;26369:5;26366:13;26358:82;;;26421:17;;;26402:1;26391:13;26358:82;;26632:1352;26758:3;26752:10;-1:-1:-1;;;;;26777:6:30;26774:30;26771:56;;;26807:18;;:::i;:::-;26836:97;26926:6;26886:38;26918:4;26912:11;26886:38;:::i;:::-;26880:4;26836:97;:::i;:::-;26988:4;;27052:2;27041:14;;27069:1;27064:663;;;;27771:1;27788:6;27785:89;;;-1:-1:-1;27840:19:30;;;27834:26;27785:89;-1:-1:-1;;26589:1:30;26585:11;;;26581:24;26577:29;26567:40;26613:1;26609:11;;;26564:57;27887:81;;27034:944;;27064:663;25858:1;25851:14;;;25895:4;25882:18;;-1:-1:-1;;27100:20:30;;;27218:236;27232:7;27229:1;27226:14;27218:236;;;27321:19;;;27315:26;27300:42;;27413:27;;;;27381:1;27369:14;;;;27248:19;;27218:236;;;27222:3;27482:6;27473:7;27470:19;27467:201;;;27543:19;;;27537:26;-1:-1:-1;;27626:1:30;27622:14;;;27638:3;27618:24;27614:37;27610:42;27595:58;27580:74;;27467:201;-1:-1:-1;;;;;27714:1:30;27698:14;;;27694:22;27681:36;;-1:-1:-1;26632:1352:30:o;27989:355::-;28191:2;28173:21;;;28230:2;28210:18;;;28203:30;28269:33;28264:2;28249:18;;28242:61;28335:2;28320:18;;27989:355::o;28759:127::-;28820:10;28815:3;28811:20;28808:1;28801:31;28851:4;28848:1;28841:15;28875:4;28872:1;28865:15;28891:127;28952:10;28947:3;28943:20;28940:1;28933:31;28983:4;28980:1;28973:15;29007:4;29004:1;28997:15;29023:135;29062:3;29083:17;;;29080:43;;29103:18;;:::i;:::-;-1:-1:-1;29150:1:30;29139:13;;29023:135::o;30841:168::-;30914:9;;;30945;;30962:15;;;30956:22;;30942:37;30932:71;;30983:18;;:::i;31014:184::-;31084:6;31137:2;31125:9;31116:7;31112:23;31108:32;31105:52;;;31153:1;31150;31143:12;31105:52;-1:-1:-1;31176:16:30;;31014:184;-1:-1:-1;31014:184:30:o;31540:197::-;-1:-1:-1;;;;;31662:10:30;;;31674;;;31658:27;;31697:11;;;31694:37;;;31711:18;;:::i;:::-;31694:37;31540:197;;;;:::o;32075:127::-;32136:10;32131:3;32127:20;32124:1;32117:31;32167:4;32164:1;32157:15;32191:4;32188:1;32181:15;32207:199;32246:1;-1:-1:-1;;;;;32317:2:30;32314:1;32310:10;32339:3;32329:37;;32346:18;;:::i;:::-;32384:10;;32380:20;;;;;32207:199;-1:-1:-1;;32207:199:30:o;33734:334::-;33936:2;33918:21;;;33975:2;33955:18;;;33948:30;-1:-1:-1;;;34009:2:30;33994:18;;33987:40;34059:2;34044:18;;33734:334::o;34073:289::-;-1:-1:-1;;;;;34263:32:30;;;;34245:51;;34344:10;34332:23;34327:2;34312:18;;34305:51;34233:2;34218:18;;34073:289::o;34367:691::-;34466:6;34519:3;34507:9;34498:7;34494:23;34490:33;34487:53;;;34536:1;34533;34526:12;34487:53;34569:2;34563:9;34611:3;34603:6;34599:16;34681:6;34669:10;34666:22;-1:-1:-1;;;;;34633:10:30;34630:34;34627:62;34624:88;;;34692:18;;:::i;:::-;34728:2;34721:22;34767:16;;34752:32;;34827:2;34812:18;;34806:25;34840:30;34806:25;34840:30;:::i;:::-;34898:2;34886:15;;34879:30;34963:2;34948:18;;;34942:25;34925:15;;;34918:50;35022:2;35007:18;;;35001:25;34984:15;;;34977:50;;;;-1:-1:-1;34890:6:30;34367:691;-1:-1:-1;34367:691:30:o;35063:894::-;35160:6;35213:3;35201:9;35192:7;35188:23;35184:33;35181:53;;;35230:1;35227;35220:12;35181:53;35263:2;35257:9;35305:3;35297:6;35293:16;35375:6;35363:10;35360:22;-1:-1:-1;;;;;35327:10:30;35324:34;35321:62;35318:88;;;35386:18;;:::i;:::-;35422:2;35415:22;35459:16;;35484:30;35459:16;35484:30;:::i;:::-;35523:21;;35589:2;35574:18;;35568:25;35602:32;35568:25;35602:32;:::i;:::-;35662:2;35650:15;;35643:32;35720:2;35705:18;;35699:25;35733:32;35699:25;35733:32;:::i;:::-;35793:2;35781:15;;35774:32;35860:2;35845:18;;;35839:25;35822:15;;;35815:50;35920:3;35905:19;;;35899:26;35881:16;;;35874:52;;;;-1:-1:-1;35785:6:30;35063:894;-1:-1:-1;35063:894:30:o;37716:172::-;37783:10;37813;;;37825;;;37809:27;;37848:11;;;37845:37;;;37862:18;;:::i;39804:125::-;39869:9;;;39890:10;;;39887:36;;;39903:18;;:::i;39934:120::-;39974:1;40000;39990:35;;40005:18;;:::i;:::-;-1:-1:-1;40039:9:30;;39934:120::o;40059:128::-;40126:9;;;40147:11;;;40144:37;;;40161:18;;:::i;40192:112::-;40224:1;40250;40240:35;;40255:18;;:::i;:::-;-1:-1:-1;40289:9:30;;40192:112::o;40718:401::-;40920:2;40902:21;;;40959:2;40939:18;;;40932:30;40998:34;40993:2;40978:18;;40971:62;-1:-1:-1;;;41064:2:30;41049:18;;41042:35;41109:3;41094:19;;40718:401::o;41124:406::-;41326:2;41308:21;;;41365:2;41345:18;;;41338:30;41404:34;41399:2;41384:18;;41377:62;-1:-1:-1;;;41470:2:30;41455:18;;41448:40;41520:3;41505:19;;41124:406::o;41535:465::-;41792:2;41781:9;41774:21;41755:4;41818:56;41870:2;41859:9;41855:18;41847:6;41818:56;:::i;:::-;41922:9;41914:6;41910:22;41905:2;41894:9;41890:18;41883:50;41950:44;41987:6;41979;41950:44;:::i;43352:200::-;-1:-1:-1;;;;;43488:10:30;;;43476;;;43472:27;;43511:12;;;43508:38;;;43526:18;;:::i;46577:442::-;-1:-1:-1;;;;;46854:32:30;;46836:51;;46935:10;46923:23;;46918:2;46903:18;;46896:51;46823:3;46808:19;;46956:57;47009:2;46994:18;;46986:6;12489:5;12483:12;12478:3;12471:25;-1:-1:-1;;;;;12549:4:30;12542:5;12538:16;12532:23;12528:48;12521:4;12516:3;12512:14;12505:72;12626:4;12619:5;12615:16;12609:23;12602:4;12597:3;12593:14;12586:47;12682:4;12675:5;12671:16;12665:23;12658:4;12653:3;12649:14;12642:47;;;12406:289;47024:827;-1:-1:-1;;;;;47421:15:30;;;47403:34;;47473:15;;47468:2;47453:18;;47446:43;47383:3;47520:2;47505:18;;47498:31;;;47346:4;;47552:57;;47589:19;;47581:6;47552:57;:::i;:::-;47657:9;47649:6;47645:22;47640:2;47629:9;47625:18;47618:50;47691:44;47728:6;47720;47691:44;:::i;:::-;47677:58;;47784:9;47776:6;47772:22;47766:3;47755:9;47751:19;47744:51;47812:33;47838:6;47830;47812:33;:::i;47856:249::-;47925:6;47978:2;47966:9;47957:7;47953:23;47949:32;47946:52;;;47994:1;47991;47984:12;47946:52;48026:9;48020:16;48045:30;48069:5;48045:30;:::i;48110:179::-;48145:3;48187:1;48169:16;48166:23;48163:120;;;48233:1;48230;48227;48212:23;-1:-1:-1;48270:1:30;48264:8;48259:3;48255:18;48163:120;48110:179;:::o;48294:671::-;48333:3;48375:4;48357:16;48354:26;48351:39;;;48294:671;:::o;48351:39::-;48417:2;48411:9;-1:-1:-1;;48482:16:30;48478:25;;48475:1;48411:9;48454:50;48533:4;48527:11;48557:16;-1:-1:-1;;;;;48663:2:30;48656:4;48648:6;48644:17;48641:25;48636:2;48628:6;48625:14;48622:45;48619:58;;;48670:5;;;;;48294:671;:::o;48619:58::-;48707:6;48701:4;48697:17;48686:28;;48743:3;48737:10;48770:2;48762:6;48759:14;48756:27;;;48776:5;;;;;;48294:671;:::o;48756:27::-;48860:2;48841:16;48835:4;48831:27;48827:36;48820:4;48811:6;48806:3;48802:16;48798:27;48795:69;48792:82;;;48867:5;;;;;;48294:671;:::o;48792:82::-;48883:57;48934:4;48925:6;48917;48913:19;48909:30;48903:4;48883:57;:::i;:::-;-1:-1:-1;48956:3:30;;48294:671;-1:-1:-1;;;;;48294:671:30:o;49391:404::-;49593:2;49575:21;;;49632:2;49612:18;;;49605:30;49671:34;49666:2;49651:18;;49644:62;-1:-1:-1;;;49737:2:30;49722:18;;49715:38;49785:3;49770:19;;49391:404::o;50609:245::-;50676:6;50729:2;50717:9;50708:7;50704:23;50700:32;50697:52;;;50745:1;50742;50735:12;50697:52;50777:9;50771:16;50796:28;50818:5;50796:28;:::i;51270:561::-;-1:-1:-1;;;;;51567:15:30;;;51549:34;;51619:15;;51614:2;51599:18;;51592:43;51666:2;51651:18;;51644:34;;;51709:2;51694:18;;51687:34;;;51529:3;51752;51737:19;;51730:32;;;51492:4;;51779:46;;51805:19;;51797:6;51779:46;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "adminBurn(uint32,uint32,address)": {
        "details": "Burn NFT by admin and return the mint price to the NFT owner.      Caller of this function must be admin.      this will emit Burn event when success.",
        "params": {
          "projectId": "Project id.",
          "qty": "Quantity of NFTs to burn.",
          "to": "the owner of the NFT to be burned."
        }
      },
      "authorizedMint(uint32,uint32,address,uint64,(bytes32,bytes32,uint8))": {
        "details": "Permissioned version of mint, use signature for verification,      Anyone with valid signature can mint NFTs."
      },
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "burn(uint32,uint32)": {
        "details": "Burn NFT and claim back the mint price to the NFT owner.      this will emit Burn event when success.",
        "params": {
          "projectId": "Project id.",
          "qty": "Quantity of NFTs to burn."
        }
      },
      "constructor": {
        "notice": "Constructor for the HouseOfPanda contract, which inherits from the ERC1155Tradable and Stake contracts. Set the contract's base URI and proxy address and set the admin address.",
        "params": {
          "_admin": "The contract's admin address.",
          "_baseUri": "The contract's base URI.",
          "_proxyAddress": "The address of the proxy contract.",
          "_stableCoin": "The address of the stablecoin for calculating rewards."
        }
      },
      "createProject(uint16,string,uint256,bool,uint128,uint16,uint256,uint256,uint64,uint64)": {
        "details": "Creates a new project. This can only be done by the contract admin or owner.",
        "params": {
          "apy": "APY of the project.",
          "authorizedOnly": "If true the project only mintable by admin.",
          "endTime": "End time of the project.",
          "price": "Price to mint one NFT from this project (in wei). Cannot be zero if `authorizedOnly`=true.",
          "stakedApy": "APY for staked NFT.",
          "startTime": "Start time of the project.",
          "supplyLimit": "Supply limit of the project. Minting will fail if max limit.",
          "term": "Term of the project in months.",
          "title": "Title of the project.",
          "typeId": "project type."
        }
      },
      "getAssetAlloc(address,uint32)": {
        "notice": "This function allows users to retrieve the asset allocation and staking information of the given investor and project ID. It takes in two parameters: 'investor' (the address of the investor) and 'projectId' (the ID of the project). It first checks to make sure the investor address is valid and that a valid project ID was supplied. It then retrieves the holding information and staking information of the respective investor and project, and returns a tuple containing both pieces of information. ",
        "params": {
          "investor": "The address of the investor.",
          "projectId": "The ID of the project."
        },
        "returns": {
          "_0": "(HoldingInfo memory, StakeInfo memory) A tuple containing the asset allocation and staking information of the investor and project."
        }
      },
      "isApprovedForAll(address,address)": {
        "notice": "Override isApprovedForAll to whitelist user's OpenSea proxy accounts to enable gas-free listings."
      },
      "mint(uint32,uint32,address)": {
        "details": "Mint NFT for specific project. This payable function demands the exact amount of price,      except for the authorizedOnly project.",
        "params": {
          "projectId": "Project id.",
          "qty": "Quantity of NFTs to mint."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause(bool)": {
        "notice": "This function is used to pause or unpause contract. Caller of this function must be the owner of the contract. It updates the paused state of the contract and calls the pause function of the staker.",
        "params": {
          "_paused": "A boolean indicating whether staking should be paused or unpaused."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "setCustomURI(uint256,string)": {
        "details": "Will update the base URI for the token",
        "params": {
          "_newURI": "New URI for the token.",
          "_tokenId": "The token to update. _msgSender() must be its creator."
        }
      },
      "setProjectStatus(uint32,bytes1)": {
        "notice": "This function is used to set the status of a project. The caller of this function must be either the owner or an admin of the contract. It takes in two parameters: the projectId and a bytes1 status. It first checks to make sure the project exists, before setting the status and emitting a ProjectStatusChanged event.",
        "params": {
          "projectId": "The ID of the project to set the status for.",
          "status": "A bytes1 indicating the new status."
        }
      },
      "setURI(string)": {
        "details": "Sets a new URI for all token types, by relying on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].",
        "params": {
          "_newURI": "New URI for all tokens"
        }
      },
      "supplyFor(uint32)": {
        "details": "check supply for specific item."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateStaker(address)": {
        "notice": "This function is used to update contract staker. It must be called by the owner of the contract.  It checks that the staker's owner is the same as the contract's owner.",
        "params": {
          "_staker": "address of the staker."
        }
      },
      "uri(uint256)": {
        "notice": "Returns the URI of a given project. If the project has a custom URI (stored in the 'customUri' mapping), the custom URI is returned. Otherwise, the default uri defined in the super class is returned.",
        "params": {
          "_projectId": "The ID of the project."
        },
        "returns": {
          "_0": "{string} The URI of the project."
        }
      }
    },
    "version": 1
  },
  "offset": [
    612,
    19084
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x224 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5CEB9F14 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xC7BA34F4 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC7BA34F4 EQ PUSH2 0x727 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x747 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x767 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x787 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x7A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x666 JUMPI DUP1 PUSH4 0xA3AAFE89 EQ PUSH2 0x686 JUMPI DUP1 PUSH4 0xAE4CD7E0 EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xAEAED1B7 EQ PUSH2 0x6FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5B1 JUMPI DUP1 PUSH4 0x7E28EB44 EQ PUSH2 0x5C6 JUMPI DUP1 PUSH4 0x8206D49F EQ PUSH2 0x5E6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x613 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5CEB9F14 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x5EBAF1DB EQ PUSH2 0x520 JUMPI DUP1 PUSH4 0x63184726 EQ PUSH2 0x558 JUMPI DUP1 PUSH4 0x694D0797 EQ PUSH2 0x591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2465B556 GT PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x3BA60D16 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x3BA60D16 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0x51248B4E EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x52D0D8EE EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2465B556 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x2D0335AB EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x3408E470 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x3ADF80B4 EQ PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 GT PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xC53C51C EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xF7E5970 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x20379EE5 EQ PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x2329A29 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x2AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0x43D7 JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x4419 JUMP JUMPDEST PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x253 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4444 JUMP JUMPDEST PUSH2 0x8B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x4516 JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x459A JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x45C3 JUMP JUMPDEST PUSH2 0xA10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x4636 JUMP JUMPDEST PUSH2 0xBFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x249 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x464F JUMP JUMPDEST PUSH2 0xDD8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x3A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x464F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x3D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4700 JUMP JUMPDEST PUSH2 0xF30 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CHAINID PUSH2 0x249 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x409 CALLDATASIZE PUSH1 0x4 PUSH2 0x47AD JUMP JUMPDEST PUSH2 0xFC0 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x41C CALLDATASIZE PUSH1 0x4 PUSH2 0x4805 JUMP JUMPDEST PUSH2 0x103F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x441 PUSH2 0x43C CALLDATASIZE PUSH1 0x4 PUSH2 0x4850 JUMP JUMPDEST PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x494D JUMP JUMPDEST PUSH2 0x27C PUSH2 0x45C CALLDATASIZE PUSH1 0x4 PUSH2 0x4805 JUMP JUMPDEST PUSH2 0x11B1 JUMP JUMPDEST PUSH2 0x27C PUSH2 0x46F CALLDATASIZE PUSH1 0x4 PUSH2 0x4980 JUMP JUMPDEST PUSH2 0x1773 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x27C SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AE PUSH2 0x4A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A3E JUMP JUMPDEST PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND DUP3 DUP5 ADD MSTORE DUP6 DUP5 ADD MLOAD DUP4 DUP6 ADD MSTORE PUSH1 0x60 SWAP6 DUP7 ADD MLOAD DUP7 DUP5 ADD MSTORE DUP5 MLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x80 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 DUP7 ADD MLOAD AND PUSH1 0xA0 DUP5 ADD MSTORE SWAP3 DUP5 ADD MLOAD SWAP1 SWAP3 AND PUSH1 0xC0 DUP3 ADD MSTORE SWAP3 DUP3 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE ADD MLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD PUSH2 0x253 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x540 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x253 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x57C SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x253 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x5AC CALLDATASIZE PUSH1 0x4 PUSH2 0x4A77 JUMP JUMPDEST PUSH2 0x1E58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x1E78 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x5E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A94 JUMP JUMPDEST PUSH2 0x1EAE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x606 PUSH2 0x601 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A77 JUMP JUMPDEST PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x4AB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x540 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x64C CALLDATASIZE PUSH1 0x4 PUSH2 0x464F JUMP JUMPDEST PUSH2 0x1F54 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0x1F87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x681 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BCA JUMP JUMPDEST PUSH2 0x1F94 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C2 PUSH2 0x6A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A77 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x253 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x6F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C0A JUMP JUMPDEST PUSH2 0x206A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71A PUSH2 0x715 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A3E JUMP JUMPDEST PUSH2 0x23FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x4CD9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x742 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D0D JUMP JUMPDEST PUSH2 0x24AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x762 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D48 JUMP JUMPDEST PUSH2 0x259B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x782 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D76 JUMP JUMPDEST PUSH2 0x2657 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x793 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x7A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x464F JUMP JUMPDEST PUSH2 0x26DE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x540 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x892 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x85B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x85B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x4DDE JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH4 0x2329A29 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2329A29 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x931 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x945 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x976 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x4DDE JUMP JUMPDEST PUSH2 0x97F DUP2 PUSH2 0x2776 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x98F SWAP1 PUSH2 0x4E13 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9BB SWAP1 PUSH2 0x4E13 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA08 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9DD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA08 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 DUP2 ADD DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP1 DUP6 SWAP1 KECCAK256 SLOAD DUP5 MSTORE DUP4 ADD MSTORE SWAP2 DUP2 ADD DUP7 SWAP1 MSTORE PUSH2 0xA4E DUP8 DUP3 DUP8 DUP8 DUP8 PUSH2 0x2786 JUMP JUMPDEST PUSH2 0xAA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E657220616E64207369676E617475726520646F206E6F74206D617463 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0xFB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xAC8 SWAP1 PUSH1 0x1 PUSH2 0x2876 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x5845892132946850460BFF5A0083F71031BC5BF9AADCD40F1DE79423EAC9B10B SWAP1 PUSH2 0xB18 SWAP1 DUP10 SWAP1 CALLER SWAP1 DUP11 SWAP1 PUSH2 0x4E47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP1 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB40 SWAP3 SWAP2 SWAP1 PUSH2 0x4E7C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0xB5A SWAP2 PUSH2 0x4EB3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB97 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xBEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E2063616C6C206E6F74207375636365737366756C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP3 AND EQ PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x4ECF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0xC4B SWAP1 PUSH2 0x4E13 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC77 SWAP1 PUSH2 0x4E13 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCC4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC99 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCC4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCA7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xD74 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xCEE SWAP1 PUSH2 0x4E13 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD1A SWAP1 PUSH2 0x4E13 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD67 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD3C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD67 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD4A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD7F DUP5 PUSH2 0x2882 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xD9F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xDCA JUMP JUMPDEST DUP1 PUSH2 0xDA9 DUP6 PUSH2 0x2916 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDBA SWAP3 SWAP2 SWAP1 PUSH2 0x4EF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x4DDE JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE40 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE64 SWAP2 SWAP1 PUSH2 0x4F30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xECF SWAP2 SWAP1 PUSH2 0x4F30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x10B7BBB732B9 PUSH1 0xD1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0xF4C JUMPI POP PUSH2 0xF4C DUP6 CALLER PUSH2 0x259B JUMP JUMPDEST PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82F JUMP JUMPDEST PUSH2 0x945 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x2A16 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x4DDE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1002 DUP3 DUP3 PUSH2 0x4F93 JUMP JUMPDEST POP DUP2 PUSH32 0x6BB7FF708619BA0610CBA295A58592E0451DEE2622938C8755667688DAF3529B DUP3 PUSH1 0x40 MLOAD PUSH2 0x1033 SWAP2 SWAP1 PUSH2 0x459A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1049 PUSH2 0x2C01 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xD SLOAD SUB PUSH2 0x106B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x5052 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xD SSTORE PUSH2 0x107B DUP5 DUP5 DUP5 PUSH2 0x2C44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x10ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82F JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1108 JUMPI PUSH2 0x1108 PUSH2 0x4461 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1131 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x11A9 JUMPI PUSH2 0x117C DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1155 JUMPI PUSH2 0x1155 PUSH2 0x5089 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x116F JUMPI PUSH2 0x116F PUSH2 0x5089 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x7C7 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x118E JUMPI PUSH2 0x118E PUSH2 0x5089 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x11A2 DUP2 PUSH2 0x50B5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1137 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0xD SLOAD SUB PUSH2 0x11D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x5052 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xD SSTORE PUSH1 0x11 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1216 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x1C185D5CD959 PUSH1 0xD2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH2 0x1A0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP1 SWAP5 AND DUP2 MSTORE PUSH1 0x1 DUP5 ADD DUP1 SLOAD SWAP4 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP5 ADD SWAP2 PUSH2 0x1258 SWAP1 PUSH2 0x4E13 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1284 SWAP1 PUSH2 0x4E13 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH3 0x10000 DUP3 DIV SWAP1 SWAP3 AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x7 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 AND PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP2 DIV AND PUSH2 0x160 SWAP1 SWAP2 ADD MSTORE SWAP1 POP PUSH2 0x139B DUP2 PUSH2 0x3089 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0xF8 SHL EQ PUSH2 0x13E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x21616374697665 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST TIMESTAMP DUP2 PUSH2 0x160 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT ISZERO PUSH2 0x142D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x85CDD185C9D PUSH1 0xD2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST TIMESTAMP DUP2 PUSH2 0x180 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x1473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x8595B991959 PUSH1 0xD2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST PUSH1 0xC SLOAD CALLER SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 EQ DUP1 PUSH2 0x1495 JUMPI POP PUSH2 0x1495 DUP3 PUSH2 0x30AD JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xA0 ADD MLOAD ISZERO PUSH2 0x14E2 JUMPI DUP1 PUSH2 0x14DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x1D5B985D5D1A1BDC9A5E9959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST PUSH2 0x15A7 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x156F JUMPI POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x14FE SWAP1 PUSH4 0xFFFFFFFF DUP9 AND PUSH2 0x50CE JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1548 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x156C SWAP2 SWAP1 PUSH2 0x50E5 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x15A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x18985B185B98D9480F PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND SWAP2 AND ISZERO PUSH2 0x1633 JUMPI PUSH2 0x100 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x15F4 PUSH4 0xFFFFFFFF DUP10 AND DUP4 PUSH2 0x50FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO PUSH2 0x1633 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x1B1A5B5A5D PUSH1 0xDA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP9 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1666 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x50FE JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0xA0 ADD MLOAD ISZERO DUP1 ISZERO PUSH2 0x169A JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0x16DD JUMPI PUSH1 0xF SLOAD PUSH1 0x80 DUP6 ADD MLOAD PUSH2 0x16DD SWAP2 DUP6 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x16C9 SWAP1 PUSH4 0xFFFFFFFF DUP13 AND PUSH2 0x50CE JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 SWAP1 PUSH2 0x30DB JUMP JUMPDEST PUSH2 0x1704 DUP7 DUP10 PUSH4 0xFFFFFFFF AND DUP10 PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x313B JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH4 0xFFFFFFFF AND DUP10 PUSH4 0xFFFFFFFF AND PUSH32 0xDA1373DCDE55ACEB480442EE22608E2601F3639E5D1E81E6F9DCD8D231607899 PUSH2 0x1744 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH1 0x1 PUSH1 0xD SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0xD SLOAD SUB PUSH2 0x1797 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x5052 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xD SSTORE PUSH2 0x17A7 PUSH1 0x3C TIMESTAMP PUSH2 0x513B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT ISZERO PUSH2 0x17F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x78206E6F6E6365 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST PUSH2 0x17FB DUP5 PUSH2 0x324B JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH2 0x1A0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP1 SWAP5 AND DUP2 MSTORE PUSH1 0x1 DUP5 ADD DUP1 SLOAD SWAP4 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP5 ADD SWAP2 PUSH2 0x183D SWAP1 PUSH2 0x4E13 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1869 SWAP1 PUSH2 0x4E13 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18B6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x188B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18B6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1899 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH3 0x10000 DUP3 DIV SWAP1 SWAP3 AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x7 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 AND PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP2 DIV AND PUSH2 0x160 SWAP1 SWAP2 ADD MSTORE SWAP1 POP PUSH2 0x1980 DUP2 PUSH2 0x3089 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND SWAP2 AND ISZERO PUSH2 0x1A0C JUMPI PUSH2 0x100 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x19CD PUSH4 0xFFFFFFFF DUP10 AND DUP4 PUSH2 0x50FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO PUSH2 0x1A0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x1B1A5B5A5D PUSH1 0xDA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP13 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP6 DUP2 SHL DUP3 AND PUSH1 0x24 DUP7 ADD MSTORE DUP13 SWAP1 SHL AND PUSH1 0x38 DUP5 ADD MSTORE DUP12 SWAP1 SHL AND PUSH1 0x4C DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT PUSH1 0xC0 DUP10 SWAP1 SHL AND PUSH1 0x50 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1A8F SWAP1 PUSH1 0x58 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x328A JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 SWAP2 POP PUSH2 0x1AA9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP9 PUSH2 0x32DE JUMP JUMPDEST PUSH2 0x1AE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x78207369676E6174757265 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFD DUP4 PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND EQ SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x1B0C JUMPI POP PUSH2 0x1B0C DUP4 PUSH2 0x30AD JUMP JUMPDEST SWAP1 POP DUP1 DUP1 PUSH2 0x1B9B JUMPI POP PUSH1 0x80 DUP6 ADD MLOAD PUSH2 0x1B2A SWAP1 PUSH4 0xFFFFFFFF DUP13 AND PUSH2 0x50CE JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B98 SWAP2 SWAP1 PUSH2 0x50E5 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x1BD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x18985B185B98D9480F PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP12 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 DUP14 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1C06 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x50FE JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x1C45 DUP4 ADDRESS DUP8 PUSH1 0x80 ADD MLOAD DUP14 PUSH4 0xFFFFFFFF AND PUSH2 0x16C9 SWAP2 SWAP1 PUSH2 0x50CE JUMP JUMPDEST PUSH2 0x1C6C DUP10 DUP13 PUSH4 0xFFFFFFFF AND DUP13 PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x313B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND DUP3 MSTORE DUP11 AND SWAP1 PUSH4 0xFFFFFFFF DUP1 DUP14 AND SWAP2 SWAP1 DUP15 AND SWAP1 PUSH32 0xDA1373DCDE55ACEB480442EE22608E2601F3639E5D1E81E6F9DCD8D231607899 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP6 POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xD SSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1D04 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x1D38 DUP5 PUSH2 0x324B JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND GT PUSH2 0x1D5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x5161 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH4 0xAEAED1B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xAEAED1B7 SWAP1 PUSH2 0x1D91 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DAE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DD2 SWAP2 SWAP1 PUSH2 0x51A4 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH4 0x45E4969 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x8BC92D2 SWAP1 PUSH2 0x1E0A SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x5185 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E27 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E4B SWAP2 SWAP1 PUSH2 0x520F JUMP JUMPDEST SWAP2 SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP3 AND EQ PUSH2 0x85B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x4DDE JUMP JUMPDEST PUSH2 0x1EAC PUSH1 0x0 PUSH2 0x3371 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0xD SLOAD SUB PUSH2 0x1ED2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x5052 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xD SSTORE CALLER PUSH1 0x0 PUSH2 0x1EEA DUP3 PUSH4 0xFFFFFFFF DUP8 AND PUSH2 0x7C7 JUMP JUMPDEST SWAP1 POP DUP4 PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x1F2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x38BA3C901F PUSH1 0xD9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST PUSH2 0x1F35 DUP6 DUP6 DUP5 PUSH2 0x2C44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD SSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1F4B PUSH2 0x4355 JUMP JUMPDEST PUSH2 0x85B DUP3 PUSH2 0x33C3 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x4DDE JUMP JUMPDEST PUSH2 0x97F DUP2 PUSH2 0x35A7 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH2 0x98F SWAP1 PUSH2 0x4E13 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER SUB PUSH2 0x1FFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x2087 JUMPI POP PUSH2 0x2087 CALLER PUSH2 0x30AD JUMP JUMPDEST PUSH2 0x20C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x10B0B236B4B71010B7BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST DUP7 ISZERO PUSH2 0x2103 JUMPI PUSH1 0x0 DUP9 GT PUSH2 0x2103 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x70726963653D3 PUSH1 0xCC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x211C JUMPI POP PUSH1 0x3C DUP6 PUSH2 0xFFFF AND GT ISZERO JUMPDEST PUSH2 0x2151 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x78207465726D PUSH1 0xD0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 SWAP1 PUSH2 0x216F SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x1 PUSH2 0x5296 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP13 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP2 MSTORE PUSH1 0x20 ADD DUP11 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0xB PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x226B SWAP2 SWAP1 PUSH2 0x4F93 JUMP JUMPDEST POP PUSH1 0x40 DUP3 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH1 0xA0 SHL PUSH2 0xFFFF SWAP4 DUP5 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0x4 DUP6 ADD DUP1 SLOAD PUSH1 0xC0 DUP9 ADD MLOAD PUSH1 0xE0 DUP10 ADD MLOAD PUSH2 0x100 DUP1 DUP12 ADD MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP5 AND SWAP6 ISZERO ISZERO PUSH2 0xFF00 NOT AND SWAP6 SWAP1 SWAP6 OR PUSH1 0xF8 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP5 MUL OR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 NOT AND PUSH3 0x10000 SWAP4 SWAP1 SWAP6 AND SWAP3 SWAP1 SWAP3 MUL PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT AND SWAP4 SWAP1 SWAP4 OR PUSH5 0x100000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SWAP2 SSTORE PUSH2 0x120 DUP5 ADD MLOAD PUSH1 0x5 DUP5 ADD SSTORE PUSH2 0x140 DUP5 ADD MLOAD PUSH1 0x6 DUP5 ADD SSTORE PUSH2 0x160 DUP5 ADD MLOAD PUSH1 0x7 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH2 0x180 SWAP1 SWAP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 DUP6 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 OR PUSH1 0x1 PUSH1 0x40 SHL SWAP5 SWAP1 SWAP6 AND SWAP4 SWAP1 SWAP4 MUL SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP2 SSTORE PUSH1 0xE DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH4 0xFFFFFFFF DUP7 DUP2 AND SWAP1 SWAP5 MUL OR SWAP1 SSTORE DUP3 MLOAD SWAP1 MLOAD SWAP2 AND SWAP1 PUSH32 0x6F053DFBE49C7E82E9B2091B20E94C3BB32DE62F97ED3DFFE0213A33C0AF15B3 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2430 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH4 0xAEAED1B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xAEAED1B7 SWAP1 PUSH2 0x2462 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x247F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24A3 SWAP2 SWAP1 PUSH2 0x51A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x24C7 JUMPI POP PUSH2 0x24C7 CALLER PUSH2 0x30AD JUMP JUMPDEST PUSH2 0x2503 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x10B0B236B4B71010B7BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND EQ PUSH2 0x253A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x4ECF JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 PUSH1 0xF8 DUP8 SWAP1 SHR MUL OR SWAP1 SSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP5 AND SWAP3 SWAP2 PUSH32 0x1E59E47AF4D9B02977749192DE0A0E8C70AE8EF5CF99CEBB7E2F707571FD0AB7 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC4552791 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 DUP2 AND SWAP2 SWAP1 DUP5 AND SWAP1 DUP3 SWAP1 PUSH4 0xC4552791 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2611 SWAP2 SWAP1 PUSH2 0x4F30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x2629 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x85B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xDCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x2673 JUMPI POP PUSH2 0x2673 DUP6 CALLER PUSH2 0x259B JUMP JUMPDEST PUSH2 0x26D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82F JUMP JUMPDEST PUSH2 0x945 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x35F1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2708 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x4DDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x276D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82F JUMP JUMPDEST PUSH2 0x97F DUP2 PUSH2 0x3371 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x2782 DUP3 DUP3 PUSH2 0x4F93 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x27EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E61746976654D6574615472616E73616374696F6E3A20494E56414C49445F53 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x24A3A722A9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82F JUMP JUMPDEST PUSH1 0x1 PUSH2 0x27FF PUSH2 0x27FA DUP8 PUSH2 0x370E JUMP JUMPDEST PUSH2 0x376E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF DUP6 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x284D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A3 DUP3 DUP5 PUSH2 0x52B3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2891 SWAP1 PUSH2 0x4E13 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28BD SWAP1 PUSH2 0x4E13 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x290A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x28DF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x290A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x28ED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x293D JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x2967 JUMPI DUP1 PUSH2 0x2951 DUP2 PUSH2 0x50B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2960 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x52C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2941 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2981 JUMPI PUSH2 0x2981 PUSH2 0x4461 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29AB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xDCA JUMPI PUSH2 0x29C0 PUSH1 0x1 DUP4 PUSH2 0x52DA JUMP JUMPDEST SWAP2 POP PUSH2 0x29CD PUSH1 0xA DUP7 PUSH2 0x52ED JUMP JUMPDEST PUSH2 0x29D8 SWAP1 PUSH1 0x30 PUSH2 0x52B3 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x29ED JUMPI PUSH2 0x29ED PUSH2 0x5089 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x2A0F PUSH1 0xA DUP7 PUSH2 0x52C6 JUMP JUMPDEST SWAP5 POP PUSH2 0x29AF JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x2A78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2A9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x5301 JUMP JUMPDEST CALLER PUSH2 0x2AAD DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x379E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2B93 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2ACD JUMPI PUSH2 0x2ACD PUSH2 0x5089 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2AEB JUMPI PUSH2 0x2AEB PUSH2 0x5089 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x2B3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x5346 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2B78 SWAP1 DUP5 SWAP1 PUSH2 0x52B3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x2B8C SWAP1 PUSH2 0x50B5 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AB0 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2BE3 SWAP3 SWAP2 SWAP1 PUSH2 0x5390 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2BF9 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x3D70 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x10B0B236B4B7 PUSH1 0xD1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C4F DUP3 PUSH2 0x324B JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT PUSH2 0x2C75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x5161 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND GT PUSH2 0x2CB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x21717479 PUSH1 0xE0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH2 0x1A0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP1 SWAP5 AND DUP2 MSTORE PUSH1 0x1 DUP5 ADD DUP1 SLOAD SWAP4 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP5 ADD SWAP2 PUSH2 0x2CF6 SWAP1 PUSH2 0x4E13 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D22 SWAP1 PUSH2 0x4E13 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D6F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D44 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D6F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D52 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH3 0x10000 DUP3 DIV SWAP1 SWAP3 AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x7 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 AND PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP2 DIV AND PUSH2 0x160 SWAP1 SWAP2 ADD MSTORE SWAP1 POP PUSH2 0x2E39 DUP2 PUSH2 0x3089 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 DUP6 AND DUP2 LT ISZERO PUSH2 0x2E9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x65786365656420737570706C79 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EDC9D8D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDDB93B1A SWAP1 PUSH2 0x2ECE SWAP1 DUP9 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x5185 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2EEB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F0F SWAP2 SWAP1 PUSH2 0x520F JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0x2F86 JUMPI DUP1 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP7 PUSH4 0xFFFFFFFF AND PUSH2 0x2F41 DUP8 DUP11 PUSH4 0xFFFFFFFF AND PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x2F4B SWAP2 SWAP1 PUSH2 0x52DA JUMP JUMPDEST LT ISZERO PUSH2 0x2F86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x696E207374616B696E67 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP8 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 DUP10 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2FB9 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x53B5 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x2FF4 DUP6 DUP9 PUSH4 0xFFFFFFFF AND DUP9 PUSH4 0xFFFFFFFF AND PUSH2 0x3ECB JUMP JUMPDEST DUP3 PUSH1 0xA0 ADD MLOAD PUSH2 0x3038 JUMPI PUSH1 0x0 DUP4 PUSH1 0x80 ADD MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH2 0x3015 SWAP2 SWAP1 PUSH2 0x50CE JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xE SLOAD SWAP2 SWAP3 POP PUSH2 0x3036 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP9 DUP5 PUSH2 0x30DB JUMP JUMPDEST POP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH4 0xFFFFFFFF AND DUP9 PUSH4 0xFFFFFFFF AND PUSH32 0x51DC334A9A8F008638BDEB6C9A6F4AABF63FF2510E4BE9998B7ECF63010AB8AA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x97F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x4ECF JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x30CB PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x3135 SWAP1 DUP6 SWAP1 PUSH2 0x4044 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x319B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82F JUMP JUMPDEST CALLER PUSH2 0x31BB DUP2 PUSH1 0x0 DUP8 PUSH2 0x31AC DUP9 PUSH2 0x411B JUMP JUMPDEST PUSH2 0x31B5 DUP9 PUSH2 0x411B JUMP JUMPDEST DUP8 PUSH2 0x379E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x31EB SWAP1 DUP5 SWAP1 PUSH2 0x52B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x945 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x4166 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x97F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x3C1030B23239 PUSH1 0xD1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP5 DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x0 ADD MLOAD DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3332 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3354 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x33CB PUSH2 0x4355 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x33F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x5161 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND EQ PUSH2 0x3428 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x4ECF JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH2 0x1A0 DUP2 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0x3469 SWAP1 PUSH2 0x4E13 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3495 SWAP1 PUSH2 0x4E13 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x34E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x34B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x34E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x34C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH3 0x10000 DUP3 DIV SWAP1 SWAP3 AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x7 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 AND PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP2 DIV AND PUSH2 0x160 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7CE7EC0B50378FB6C0186FFB5F48325F6593FCB4CA4386F21861AF3129188F5C SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3617 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x5301 JUMP JUMPDEST CALLER PUSH2 0x3627 DUP2 DUP8 DUP8 PUSH2 0x31AC DUP9 PUSH2 0x411B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x3668 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x5346 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x36A5 SWAP1 DUP5 SWAP1 PUSH2 0x52B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x3705 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x4166 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x43 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x55DC PUSH1 0x43 SWAP2 CODECOPY DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 MLOAD DUP5 DUP4 ADD MLOAD PUSH1 0x40 DUP1 DUP8 ADD MLOAD DUP1 MLOAD SWAP1 DUP7 ADD KECCAK256 SWAP1 MLOAD PUSH2 0x32C1 SWAP6 ADD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3779 PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x42 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x62 ADD PUSH2 0x32C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO DUP1 ISZERO PUSH2 0x37BC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO JUMPDEST PUSH2 0x2BF9 JUMPI PUSH2 0x37F4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x3D66 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3814 JUMPI PUSH2 0x3814 PUSH2 0x5089 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3832 JUMPI PUSH2 0x3832 PUSH2 0x5089 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x3847 DUP4 PUSH2 0x33C3 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EDC9D8D PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDDB93B1A SWAP1 PUSH2 0x387F SWAP1 DUP15 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x5185 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x389C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38C0 SWAP2 SWAP1 PUSH2 0x520F JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0x3931 JUMPI DUP1 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH2 0x38EC DUP14 DUP8 PUSH4 0xFFFFFFFF AND PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x38F6 SWAP2 SWAP1 PUSH2 0x52DA JUMP JUMPDEST LT ISZERO PUSH2 0x3931 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x696E207374616B696E67 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND ISZERO PUSH2 0x3B3E JUMPI PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH4 0x128FD139 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x947E89C8 SWAP1 PUSH2 0x3973 SWAP1 DUP16 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3990 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39B4 SWAP2 SWAP1 PUSH2 0x51A4 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP8 POP ISZERO PUSH2 0x3AC3 JUMPI PUSH1 0x0 PUSH2 0x39CF TIMESTAMP DUP6 PUSH2 0x180 ADD MLOAD PUSH2 0x4221 JUMP JUMPDEST SWAP1 POP DUP5 DUP9 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x39E3 SWAP2 SWAP1 PUSH2 0x52DA JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND GT ISZERO PUSH2 0x3AC1 JUMPI PUSH1 0xF SLOAD PUSH1 0x80 DUP6 ADD MLOAD DUP10 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x45305AB8 SWAP2 PUSH2 0x3A24 SWAP2 PUSH2 0x50CE JUMP JUMPDEST PUSH1 0x20 DUP12 ADD MLOAD PUSH2 0x120 DUP9 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE SWAP1 DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A88 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AAC SWAP2 SWAP1 PUSH2 0x50E5 JUMP JUMPDEST DUP9 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x3ABD SWAP2 SWAP1 PUSH2 0x52B3 JUMP JUMPDEST SWAP1 MSTORE POP JUMPDEST POP JUMPDEST POP PUSH1 0x20 DUP7 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB TIMESTAMP AND SWAP1 SWAP2 MSTORE PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH4 0x667E6B11 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xCCFCD622 SWAP1 PUSH2 0x3B0B SWAP1 DUP16 SWAP1 DUP10 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x53D5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND ISZERO PUSH2 0x3D4E JUMPI PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH4 0x128FD139 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x947E89C8 SWAP1 PUSH2 0x3B7F SWAP1 DUP15 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x5185 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B9C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BC0 SWAP2 SWAP1 PUSH2 0x51A4 JUMP JUMPDEST SWAP7 POP PUSH1 0x0 PUSH2 0x3BD3 TIMESTAMP DUP6 PUSH2 0x180 ADD MLOAD PUSH2 0x4221 JUMP JUMPDEST DUP9 MLOAD SWAP1 SWAP2 POP ISZERO DUP1 ISZERO SWAP1 PUSH2 0x3BFB JUMPI POP DUP8 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT JUMPDEST ISZERO PUSH2 0x3CC2 JUMPI PUSH1 0xF SLOAD PUSH1 0x80 DUP6 ADD MLOAD DUP10 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x45305AB8 SWAP2 PUSH2 0x3C25 SWAP2 PUSH2 0x50CE JUMP JUMPDEST PUSH1 0x20 DUP12 ADD MLOAD PUSH2 0x120 DUP9 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE SWAP1 DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CAD SWAP2 SWAP1 PUSH2 0x50E5 JUMP JUMPDEST DUP9 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x3CBE SWAP2 SWAP1 PUSH2 0x52B3 JUMP JUMPDEST SWAP1 MSTORE POP JUMPDEST DUP5 DUP9 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x3CD4 SWAP2 SWAP1 PUSH2 0x52B3 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH4 0x667E6B11 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xCCFCD622 SWAP1 PUSH2 0x3D1A SWAP1 DUP16 SWAP1 DUP11 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x53D5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3D48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST POP POP POP POP POP DUP1 DUP1 PUSH2 0x3D5E SWAP1 PUSH2 0x50B5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x37F7 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2BF9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x3DB4 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x5428 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3DEF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3DEC SWAP2 DUP2 ADD SWAP1 PUSH2 0x547A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3E9B JUMPI PUSH2 0x3DFB PUSH2 0x5497 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x3E34 JUMPI POP PUSH2 0x3E0F PUSH2 0x54B3 JUMP JUMPDEST DUP1 PUSH2 0x3E1A JUMPI POP PUSH2 0x3E36 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP2 SWAP1 PUSH2 0x459A JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x3705 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x553C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3F2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82F JUMP JUMPDEST CALLER PUSH2 0x3F5C DUP2 DUP6 PUSH1 0x0 PUSH2 0x3F3E DUP8 PUSH2 0x411B JUMP JUMPDEST PUSH2 0x3F47 DUP8 PUSH2 0x411B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x379E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3FD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP9 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP10 DUP2 MSTORE SWAP4 DUP5 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4099 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x424A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x4116 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x40B7 SWAP2 SWAP1 PUSH2 0x5584 JUMP JUMPDEST PUSH2 0x4116 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x82F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x4155 JUMPI PUSH2 0x4155 PUSH2 0x5089 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2BF9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x41AA SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x55A1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x41E5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x41E2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x547A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x41F1 JUMPI PUSH2 0x3DFB PUSH2 0x5497 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x3705 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x553C JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT ISZERO PUSH2 0x4243 JUMPI DUP2 PUSH2 0x24A3 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDCA DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 DUP5 EXTCODESIZE PUSH2 0x42A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x82F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x42BF SWAP2 SWAP1 PUSH2 0x4EB3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x42FC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4301 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4311 DUP3 DUP3 DUP7 PUSH2 0x431C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x432B JUMPI POP DUP2 PUSH2 0x24A3 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x433B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP2 SWAP1 PUSH2 0x459A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x1A0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x60 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x140 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x160 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x180 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x97F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x43F5 DUP2 PUSH2 0x43C2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x97F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x442B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x24A3 DUP2 PUSH2 0x4403 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x97F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x24A3 DUP2 PUSH2 0x4436 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x449C JUMPI PUSH2 0x449C PUSH2 0x4461 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x44B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x44CD JUMPI PUSH2 0x44CD PUSH2 0x4461 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44E4 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x4477 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x44F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x453E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDCA DUP5 DUP3 DUP6 ADD PUSH2 0x44A3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4565 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x454D JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x4586 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x454A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x24A3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x456E JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x45BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x45DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x45E6 DUP2 PUSH2 0x43C2 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x460D DUP9 DUP3 DUP10 ADD PUSH2 0x44A3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH2 0x462A PUSH1 0x80 DUP8 ADD PUSH2 0x45AD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x24A3 DUP2 PUSH2 0x43C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x4685 JUMPI PUSH2 0x4685 PUSH2 0x4461 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x46A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x46AD DUP3 PUSH2 0x466C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46BA DUP3 DUP3 PUSH2 0x4477 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x46DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x46F5 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x46DE JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x4723 DUP2 PUSH2 0x43C2 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x4733 DUP2 PUSH2 0x43C2 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x474F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x475B DUP10 DUP4 DUP11 ADD PUSH2 0x468F JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x477D DUP10 DUP4 DUP11 ADD PUSH2 0x468F JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4793 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A0 DUP9 DUP3 DUP10 ADD PUSH2 0x44A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x47C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x47DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x47E9 DUP6 DUP3 DUP7 ADD PUSH2 0x44A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x97F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x481A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4825 DUP2 PUSH2 0x47F3 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x4835 DUP2 PUSH2 0x47F3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x4845 DUP2 PUSH2 0x43C2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4863 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x487A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x488E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x489B DUP3 PUSH2 0x466C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48A8 DUP3 DUP3 PUSH2 0x4477 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x48C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x48EF JUMPI DUP6 CALLDATALOAD PUSH2 0x48E0 DUP2 PUSH2 0x43C2 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x48CD JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x4905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47E9 DUP6 DUP3 DUP7 ADD PUSH2 0x468F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4942 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4926 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x24A3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4912 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x97F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x45BE DUP2 PUSH2 0x4960 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP8 SUB PUSH1 0xE0 DUP2 SLT ISZERO PUSH2 0x4999 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x49A4 DUP2 PUSH2 0x47F3 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x49B4 DUP2 PUSH2 0x47F3 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x49C4 DUP2 PUSH2 0x43C2 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x49D4 DUP2 PUSH2 0x4960 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 PUSH1 0x7F NOT DUP3 ADD SLT ISZERO PUSH2 0x49E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x4A0B JUMPI PUSH2 0x4A0B PUSH2 0x4461 JUMP JUMPDEST PUSH1 0x40 MSTORE PUSH1 0x80 DUP8 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x4A2B PUSH1 0xC0 DUP9 ADD PUSH2 0x45AD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4A51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4A5C DUP2 PUSH2 0x43C2 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4A6C DUP2 PUSH2 0x47F3 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x24A3 DUP2 PUSH2 0x47F3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4A5C DUP2 PUSH2 0x47F3 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH2 0x4AC9 PUSH1 0x20 DUP3 ADD DUP4 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1A0 DUP1 PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x4AE7 PUSH2 0x1C0 DUP6 ADD DUP4 PUSH2 0x456E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP6 ADD MLOAD PUSH2 0x4B03 PUSH1 0x60 DUP7 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0xFFFF DUP2 AND PUSH1 0x80 DUP7 ADD MSTORE POP PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA0 DUP6 ADD MLOAD PUSH2 0x4B31 PUSH1 0xC0 DUP7 ADD DUP3 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP2 AND PUSH1 0xE0 DUP7 ADD MSTORE POP PUSH1 0xE0 DUP6 ADD MLOAD PUSH2 0x100 PUSH2 0x4B5F DUP2 DUP8 ADD DUP4 PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST DUP7 ADD MLOAD SWAP1 POP PUSH2 0x120 PUSH2 0x4B7B DUP7 DUP3 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST DUP7 ADD MLOAD PUSH2 0x140 DUP7 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 ADD MLOAD PUSH2 0x160 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 ADD MLOAD SWAP1 POP PUSH2 0x180 PUSH2 0x4BB1 DUP2 DUP8 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST SWAP1 SWAP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4BDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4BE8 DUP2 PUSH2 0x43C2 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4A6C DUP2 PUSH2 0x4436 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x45BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH2 0x4C2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C33 DUP12 PUSH2 0x4BF8 JUMP JUMPDEST SWAP10 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4C4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C5A DUP14 DUP3 DUP15 ADD PUSH2 0x44A3 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x40 DUP12 ADD CALLDATALOAD SWAP8 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD PUSH2 0x4C72 DUP2 PUSH2 0x4436 JUMP JUMPDEST SWAP7 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4C8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 POP PUSH2 0x4C9C PUSH1 0xA0 DUP13 ADD PUSH2 0x4BF8 JUMP JUMPDEST SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP4 POP PUSH1 0xE0 DUP12 ADD CALLDATALOAD SWAP3 POP PUSH2 0x4CB9 PUSH2 0x100 DUP13 ADD PUSH2 0x4975 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CC8 PUSH2 0x120 DUP13 ADD PUSH2 0x4975 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4D20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4D2B DUP2 PUSH2 0x47F3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x4A6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4D5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4D66 DUP2 PUSH2 0x43C2 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4A6C DUP2 PUSH2 0x43C2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4D8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x4D99 DUP2 PUSH2 0x43C2 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x4DA9 DUP2 PUSH2 0x43C2 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4DD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x47A0 DUP9 DUP3 DUP10 ADD PUSH2 0x44A3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4E27 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDD2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND DUP3 MSTORE DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x4E73 SWAP1 DUP4 ADD DUP5 PUSH2 0x456E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x4E8E DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x454A JUMP JUMPDEST PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 SWAP1 SWAP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4EC5 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x454A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x8 SWAP1 DUP3 ADD MSTORE PUSH8 0x85C1C9BDA9958DD PUSH1 0xC2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x4F03 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x454A JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x4F17 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x454A JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x24A3 DUP2 PUSH2 0x43C2 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4116 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x4F74 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2BF9 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4F80 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4FAC JUMPI PUSH2 0x4FAC PUSH2 0x4461 JUMP JUMPDEST PUSH2 0x4FC0 DUP2 PUSH2 0x4FBA DUP5 SLOAD PUSH2 0x4E13 JUMP JUMPDEST DUP5 PUSH2 0x4F4D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4FF5 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4FDD JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2BF9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5024 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x5005 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x5042 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x50C7 JUMPI PUSH2 0x50C7 PUSH2 0x509F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x85B JUMPI PUSH2 0x85B PUSH2 0x509F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x50F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x511E JUMPI PUSH2 0x511E PUSH2 0x509F JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x5155 JUMPI PUSH2 0x5155 PUSH2 0x5125 JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xA SWAP1 DUP3 ADD MSTORE PUSH10 0x85C1C9BDA9958DD1259 PUSH1 0xB2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x51D8 JUMPI PUSH2 0x51D8 PUSH2 0x4461 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x51ED DUP2 PUSH2 0x4960 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x5243 JUMPI PUSH2 0x5243 PUSH2 0x4461 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD PUSH2 0x5251 DUP2 PUSH2 0x47F3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x5261 DUP2 PUSH2 0x47F3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x5274 DUP2 PUSH2 0x4960 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x511E JUMPI PUSH2 0x511E PUSH2 0x509F JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x85B JUMPI PUSH2 0x85B PUSH2 0x509F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x52D5 JUMPI PUSH2 0x52D5 PUSH2 0x5125 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x85B JUMPI PUSH2 0x85B PUSH2 0x509F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x52FC JUMPI PUSH2 0x52FC PUSH2 0x5125 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x53A3 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4912 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x4E73 DUP2 DUP6 PUSH2 0x4912 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x511E JUMPI PUSH2 0x511E PUSH2 0x509F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD PUSH2 0xDCA PUSH1 0x40 DUP4 ADD DUP5 DUP1 MLOAD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x5454 SWAP1 DUP4 ADD DUP7 PUSH2 0x4912 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x5466 DUP2 DUP7 PUSH2 0x4912 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0xBEE DUP2 DUP6 PUSH2 0x456E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x548C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x24A3 DUP2 PUSH2 0x4403 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x54B0 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x54C1 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x54F0 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x5508 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x5522 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x5531 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x4477 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x24A3 DUP2 PUSH2 0x4436 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x4311 SWAP1 DUP4 ADD DUP5 PUSH2 0x456E JUMP INVALID 0x4D PUSH6 0x74615472616E PUSH20 0x616374696F6E2875696E74323536206E6F6E6365 0x2C PUSH2 0x6464 PUSH19 0x6573732066726F6D2C62797465732066756E63 PUSH21 0x696F6E5369676E617475726529A264697066735822 SLT KECCAK256 0x5E 0xFC CODECOPY PUSH17 0xB46AF4828FD4E1633DB410506969910B25 0x29 0xE7 0x4F ADDMOD SWAP11 0xC8 0xC0 0x2B SWAP5 0xD1 0x29 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        612,
        19084
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "8": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "LT",
      "path": "18"
    },
    "9": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x224"
    },
    "12": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "13": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "16": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "SHR",
      "path": "18"
    },
    "19": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "20": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x5CEB9F14"
    },
    "25": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "GT",
      "path": "18"
    },
    "26": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x123"
    },
    "29": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "30": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "31": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x95D89B41"
    },
    "36": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "GT",
      "path": "18"
    },
    "37": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAB"
    },
    "40": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "41": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "42": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC7BA34F4"
    },
    "47": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "GT",
      "path": "18"
    },
    "48": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6F"
    },
    "51": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "52": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "53": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC7BA34F4"
    },
    "58": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "59": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x727"
    },
    "62": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "63": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "64": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE985E9C5"
    },
    "69": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "70": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x747"
    },
    "73": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "74": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "75": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xF242432A"
    },
    "80": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "81": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x767"
    },
    "84": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "85": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "86": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xF2FDE38B"
    },
    "91": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "92": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x787"
    },
    "95": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "96": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "97": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xF851A440"
    },
    "102": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "103": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7A7"
    },
    "106": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "107": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "110": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "REVERT",
      "path": "18"
    },
    "111": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "112": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "113": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x95D89B41"
    },
    "118": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "119": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x651"
    },
    "122": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "123": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "124": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xA22CB465"
    },
    "129": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "130": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x666"
    },
    "133": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "134": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "135": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xA3AAFE89"
    },
    "140": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "141": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x686"
    },
    "144": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "145": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "146": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xAE4CD7E0"
    },
    "151": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "152": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6DA"
    },
    "155": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "156": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "157": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xAEAED1B7"
    },
    "162": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "163": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6FA"
    },
    "166": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "167": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "169": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "170": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "REVERT",
      "path": "18"
    },
    "171": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "172": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "173": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x715018A6"
    },
    "178": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "GT",
      "path": "18"
    },
    "179": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF2"
    },
    "182": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "183": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "184": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x715018A6"
    },
    "189": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "190": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5B1"
    },
    "193": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "194": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "195": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x7E28EB44"
    },
    "200": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "201": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5C6"
    },
    "204": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "205": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "206": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x8206D49F"
    },
    "211": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "212": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5E6"
    },
    "215": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "216": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "217": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x8DA5CB5B"
    },
    "222": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "223": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x613"
    },
    "226": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "227": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "228": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x8F283970"
    },
    "233": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "234": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x631"
    },
    "237": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "238": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "240": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "241": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "REVERT",
      "path": "18"
    },
    "242": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "243": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "244": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x5CEB9F14"
    },
    "249": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "250": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x48E"
    },
    "253": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "254": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "255": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x5EBAF1DB"
    },
    "260": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "261": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x520"
    },
    "264": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "265": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "266": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x63184726"
    },
    "271": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "272": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x558"
    },
    "275": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "276": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "277": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x694D0797"
    },
    "282": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "283": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x591"
    },
    "286": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "287": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "289": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "290": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "REVERT",
      "path": "18"
    },
    "291": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "292": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "293": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2465B556"
    },
    "298": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "GT",
      "path": "18"
    },
    "299": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B1"
    },
    "302": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "303": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "304": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x3BA60D16"
    },
    "309": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "GT",
      "path": "18"
    },
    "310": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x175"
    },
    "313": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "314": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "315": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x3BA60D16"
    },
    "320": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "321": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x40E"
    },
    "324": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "325": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "326": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x4E1273F4"
    },
    "331": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "332": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x421"
    },
    "335": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "336": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "337": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x51248B4E"
    },
    "342": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "343": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x44E"
    },
    "346": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "347": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "348": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x52D0D8EE"
    },
    "353": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "354": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x461"
    },
    "357": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "358": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "359": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x5C975ABB"
    },
    "364": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "365": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x474"
    },
    "368": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "369": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "371": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "372": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "REVERT",
      "path": "18"
    },
    "373": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "374": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "375": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2465B556"
    },
    "380": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "381": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x365"
    },
    "384": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "385": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "386": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2D0335AB"
    },
    "391": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "392": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x385"
    },
    "395": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "396": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "397": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2EB2C2D6"
    },
    "402": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "403": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3BB"
    },
    "406": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "407": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "408": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x3408E470"
    },
    "413": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "414": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3DB"
    },
    "417": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "418": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "419": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x3ADF80B4"
    },
    "424": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "425": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3EE"
    },
    "428": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "429": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "431": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "432": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "REVERT",
      "path": "18"
    },
    "433": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "434": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "435": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6FDDE03"
    },
    "440": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "GT",
      "path": "18"
    },
    "441": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F8"
    },
    "444": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "445": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "446": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6FDDE03"
    },
    "451": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "452": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2CE"
    },
    "455": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "456": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "457": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC53C51C"
    },
    "462": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "463": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2F0"
    },
    "466": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "467": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "468": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE89341C"
    },
    "473": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "474": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x303"
    },
    "477": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "478": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "479": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xF7E5970"
    },
    "484": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "485": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x323"
    },
    "488": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "489": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "490": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x20379EE5"
    },
    "495": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "496": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x350"
    },
    "499": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "500": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "502": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "503": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "REVERT",
      "path": "18"
    },
    "504": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "505": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "506": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH3",
      "path": "18",
      "value": "0xFDD58E"
    },
    "510": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "511": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x229"
    },
    "514": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "515": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "516": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1FFC9A7"
    },
    "521": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "522": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x25C"
    },
    "525": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "526": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "527": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2329A29"
    },
    "532": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "533": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x28C"
    },
    "536": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "537": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "538": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2FE5305"
    },
    "543": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "EQ",
      "path": "18"
    },
    "544": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2AE"
    },
    "547": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "548": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "549": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "551": {
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "552": {
      "first_revert": true,
      "fn": null,
      "offset": [
        612,
        19084
      ],
      "op": "REVERT",
      "path": "18"
    },
    "553": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "554": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "555": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "DUP1",
      "path": "2"
    },
    "556": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "557": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x235"
    },
    "560": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "561": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "563": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "DUP1",
      "path": "2"
    },
    "564": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "REVERT",
      "path": "2"
    },
    "565": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "566": {
      "op": "POP"
    },
    "567": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x249"
    },
    "570": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x244"
    },
    "573": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "574": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "576": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43D7"
    },
    "579": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMP",
      "path": "2"
    },
    "580": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "581": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C7"
    },
    "584": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMP",
      "path": "2"
    },
    "585": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "586": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "588": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "589": {
      "op": "SWAP1"
    },
    "590": {
      "op": "DUP2"
    },
    "591": {
      "op": "MSTORE"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "594": {
      "op": "ADD"
    },
    "595": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "596": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "598": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "599": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "DUP1",
      "path": "2"
    },
    "600": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "601": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "SUB",
      "path": "2"
    },
    "602": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "603": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "RETURN",
      "path": "2"
    },
    "604": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "605": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "606": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "DUP1",
      "path": "2"
    },
    "607": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "608": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x268"
    },
    "611": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "612": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "614": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "DUP1",
      "path": "2"
    },
    "615": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "REVERT",
      "path": "2"
    },
    "616": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "617": {
      "op": "POP"
    },
    "618": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27C"
    },
    "621": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x277"
    },
    "624": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "625": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "627": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4419"
    },
    "630": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMP",
      "path": "2"
    },
    "631": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "632": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x861"
    },
    "635": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMP",
      "path": "2"
    },
    "636": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "637": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "639": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "640": {
      "op": "SWAP1"
    },
    "641": {
      "op": "ISZERO"
    },
    "642": {
      "op": "ISZERO"
    },
    "643": {
      "op": "DUP2"
    },
    "644": {
      "op": "MSTORE"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "647": {
      "op": "ADD"
    },
    "648": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x253"
    },
    "651": {
      "op": "JUMP"
    },
    "652": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14871,
        14983
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "653": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14871,
        14983
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "654": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14871,
        14983
      ],
      "op": "DUP1",
      "path": "18"
    },
    "655": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14871,
        14983
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "656": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14871,
        14983
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x298"
    },
    "659": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14871,
        14983
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "660": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14871,
        14983
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "662": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14871,
        14983
      ],
      "op": "DUP1",
      "path": "18"
    },
    "663": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14871,
        14983
      ],
      "op": "REVERT",
      "path": "18"
    },
    "664": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14871,
        14983
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "665": {
      "op": "POP"
    },
    "666": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14871,
        14983
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2AC"
    },
    "669": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14871,
        14983
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2A7"
    },
    "672": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14871,
        14983
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "673": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14871,
        14983
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "675": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14871,
        14983
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4444"
    },
    "678": {
      "fn": "HouseOfPanda.pause",
      "jump": "i",
      "offset": [
        14871,
        14983
      ],
      "op": "JUMP",
      "path": "18"
    },
    "679": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14871,
        14983
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "680": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14871,
        14983
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8B1"
    },
    "683": {
      "fn": "HouseOfPanda.pause",
      "jump": "i",
      "offset": [
        14871,
        14983
      ],
      "op": "JUMP",
      "path": "18"
    },
    "684": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14871,
        14983
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "685": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14871,
        14983
      ],
      "op": "STOP",
      "path": "18"
    },
    "686": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1659,
        1748
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "687": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1659,
        1748
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "688": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1659,
        1748
      ],
      "op": "DUP1",
      "path": "16"
    },
    "689": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1659,
        1748
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "690": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1659,
        1748
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2BA"
    },
    "693": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1659,
        1748
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "694": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1659,
        1748
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "696": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1659,
        1748
      ],
      "op": "DUP1",
      "path": "16"
    },
    "697": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1659,
        1748
      ],
      "op": "REVERT",
      "path": "16"
    },
    "698": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1659,
        1748
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "699": {
      "op": "POP"
    },
    "700": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1659,
        1748
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2AC"
    },
    "703": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1659,
        1748
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C9"
    },
    "706": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1659,
        1748
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "707": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1659,
        1748
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "709": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1659,
        1748
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4516"
    },
    "712": {
      "fn": "ERC1155Tradable.setURI",
      "jump": "i",
      "offset": [
        1659,
        1748
      ],
      "op": "JUMP",
      "path": "16"
    },
    "713": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1659,
        1748
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "714": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1659,
        1748
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x94C"
    },
    "717": {
      "fn": "ERC1155Tradable.setURI",
      "jump": "i",
      "offset": [
        1659,
        1748
      ],
      "op": "JUMP",
      "path": "16"
    },
    "718": {
      "offset": [
        1027,
        1045
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "719": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "720": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP1",
      "path": "16"
    },
    "721": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "722": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2DA"
    },
    "725": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "726": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "728": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP1",
      "path": "16"
    },
    "729": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "REVERT",
      "path": "16"
    },
    "730": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "731": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "POP",
      "path": "16"
    },
    "732": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E3"
    },
    "735": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x982"
    },
    "738": {
      "fn": "ERC1155Tradable.setURI",
      "jump": "i",
      "offset": [
        1027,
        1045
      ],
      "op": "JUMP",
      "path": "16"
    },
    "739": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "740": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "742": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "743": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x253"
    },
    "746": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "747": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "748": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459A"
    },
    "751": {
      "fn": "ERC1155Tradable.setURI",
      "jump": "i",
      "offset": [
        1027,
        1045
      ],
      "op": "JUMP",
      "path": "16"
    },
    "752": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        976,
        2093
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "753": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        976,
        2093
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E3"
    },
    "756": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        976,
        2093
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2FE"
    },
    "759": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        976,
        2093
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "760": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        976,
        2093
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "762": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        976,
        2093
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x45C3"
    },
    "765": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "jump": "i",
      "offset": [
        976,
        2093
      ],
      "op": "JUMP",
      "path": "24"
    },
    "766": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        976,
        2093
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "767": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        976,
        2093
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA10"
    },
    "770": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "jump": "i",
      "offset": [
        976,
        2093
      ],
      "op": "JUMP",
      "path": "24"
    },
    "771": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "772": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "773": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "DUP1",
      "path": "18"
    },
    "774": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "775": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x30F"
    },
    "778": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "779": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "781": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "DUP1",
      "path": "18"
    },
    "782": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "REVERT",
      "path": "18"
    },
    "783": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "784": {
      "op": "POP"
    },
    "785": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2E3"
    },
    "788": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x31E"
    },
    "791": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "792": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "794": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4636"
    },
    "797": {
      "fn": "HouseOfPanda.uri",
      "jump": "i",
      "offset": [
        13577,
        14416
      ],
      "op": "JUMP",
      "path": "18"
    },
    "798": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "799": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBFA"
    },
    "802": {
      "fn": "HouseOfPanda.uri",
      "jump": "i",
      "offset": [
        13577,
        14416
      ],
      "op": "JUMP",
      "path": "18"
    },
    "803": {
      "offset": [
        288,
        331
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "804": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "805": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "DUP1",
      "path": "22"
    },
    "806": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "807": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x32F"
    },
    "810": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "811": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "813": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "DUP1",
      "path": "22"
    },
    "814": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "REVERT",
      "path": "22"
    },
    "815": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "816": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "POP",
      "path": "22"
    },
    "817": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2E3"
    },
    "820": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "822": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "823": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "DUP1",
      "path": "22"
    },
    "824": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "826": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "ADD",
      "path": "22"
    },
    "827": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "829": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "830": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "DUP1",
      "path": "22"
    },
    "831": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "833": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "DUP2",
      "path": "22"
    },
    "834": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "835": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "837": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "ADD",
      "path": "22"
    },
    "838": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "840": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "842": {
      "op": "SHL"
    },
    "843": {
      "offset": [
        288,
        331
      ],
      "op": "DUP2",
      "path": "22"
    },
    "844": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "845": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "POP",
      "path": "22"
    },
    "846": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "DUP2",
      "path": "22"
    },
    "847": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        288,
        331
      ],
      "op": "JUMP",
      "path": "22"
    },
    "848": {
      "fn": "EIP712Base.getDomainSeperator",
      "offset": [
        1264,
        1363
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "849": {
      "fn": "EIP712Base.getDomainSeperator",
      "offset": [
        1264,
        1363
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "850": {
      "fn": "EIP712Base.getDomainSeperator",
      "offset": [
        1264,
        1363
      ],
      "op": "DUP1",
      "path": "22"
    },
    "851": {
      "fn": "EIP712Base.getDomainSeperator",
      "offset": [
        1264,
        1363
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "852": {
      "fn": "EIP712Base.getDomainSeperator",
      "offset": [
        1264,
        1363
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x35C"
    },
    "855": {
      "fn": "EIP712Base.getDomainSeperator",
      "offset": [
        1264,
        1363
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "856": {
      "fn": "EIP712Base.getDomainSeperator",
      "offset": [
        1264,
        1363
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "858": {
      "fn": "EIP712Base.getDomainSeperator",
      "offset": [
        1264,
        1363
      ],
      "op": "DUP1",
      "path": "22"
    },
    "859": {
      "fn": "EIP712Base.getDomainSeperator",
      "offset": [
        1264,
        1363
      ],
      "op": "REVERT",
      "path": "22"
    },
    "860": {
      "fn": "EIP712Base.getDomainSeperator",
      "offset": [
        1264,
        1363
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "861": {
      "op": "POP"
    },
    "862": {
      "fn": "EIP712Base.getDomainSeperator",
      "offset": [
        1341,
        1356
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 0,
      "value": "0x4"
    },
    "864": {
      "fn": "EIP712Base.getDomainSeperator",
      "offset": [
        1341,
        1356
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "865": {
      "fn": "EIP712Base.getDomainSeperator",
      "offset": [
        1264,
        1363
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x249"
    },
    "868": {
      "fn": "EIP712Base.getDomainSeperator",
      "offset": [
        1264,
        1363
      ],
      "op": "JUMP",
      "path": "22"
    },
    "869": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17626,
        17825
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "870": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17626,
        17825
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "871": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17626,
        17825
      ],
      "op": "DUP1",
      "path": "18"
    },
    "872": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17626,
        17825
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "873": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17626,
        17825
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x371"
    },
    "876": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17626,
        17825
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "877": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17626,
        17825
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "879": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17626,
        17825
      ],
      "op": "DUP1",
      "path": "18"
    },
    "880": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17626,
        17825
      ],
      "op": "REVERT",
      "path": "18"
    },
    "881": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17626,
        17825
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "882": {
      "op": "POP"
    },
    "883": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17626,
        17825
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2AC"
    },
    "886": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17626,
        17825
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x380"
    },
    "889": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17626,
        17825
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "890": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17626,
        17825
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "892": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17626,
        17825
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x464F"
    },
    "895": {
      "fn": "HouseOfPanda.updateStaker",
      "jump": "i",
      "offset": [
        17626,
        17825
      ],
      "op": "JUMP",
      "path": "18"
    },
    "896": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17626,
        17825
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "897": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17626,
        17825
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDD8"
    },
    "900": {
      "fn": "HouseOfPanda.updateStaker",
      "jump": "i",
      "offset": [
        17626,
        17825
      ],
      "op": "JUMP",
      "path": "18"
    },
    "901": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2501,
        2606
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "902": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2501,
        2606
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "903": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2501,
        2606
      ],
      "op": "DUP1",
      "path": "24"
    },
    "904": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2501,
        2606
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "905": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2501,
        2606
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x391"
    },
    "908": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2501,
        2606
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "909": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2501,
        2606
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "911": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2501,
        2606
      ],
      "op": "DUP1",
      "path": "24"
    },
    "912": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2501,
        2606
      ],
      "op": "REVERT",
      "path": "24"
    },
    "913": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2501,
        2606
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "914": {
      "op": "POP"
    },
    "915": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2501,
        2606
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x249"
    },
    "918": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2501,
        2606
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3A0"
    },
    "921": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2501,
        2606
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "922": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2501,
        2606
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "924": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2501,
        2606
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x464F"
    },
    "927": {
      "fn": "NativeMetaTransaction.getNonce",
      "jump": "i",
      "offset": [
        2501,
        2606
      ],
      "op": "JUMP",
      "path": "24"
    },
    "928": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2501,
        2606
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "935": {
      "op": "SHL"
    },
    "936": {
      "op": "SUB"
    },
    "937": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2587,
        2599
      ],
      "op": "AND",
      "path": "24",
      "statement": 1
    },
    "938": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2554,
        2567
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "940": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "941": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP2",
      "path": "24"
    },
    "942": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2587,
        2599
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "943": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2587,
        2593
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x5"
    },
    "945": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2587,
        2599
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "947": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2587,
        2599
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "948": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2587,
        2599
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "950": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "951": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2587,
        2599
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "952": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2587,
        2599
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "953": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "954": {
      "fn": "NativeMetaTransaction.getNonce",
      "offset": [
        2501,
        2606
      ],
      "op": "JUMP",
      "path": "24"
    },
    "955": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "956": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "957": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "DUP1",
      "path": "2"
    },
    "958": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "959": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C7"
    },
    "962": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "963": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "965": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "DUP1",
      "path": "2"
    },
    "966": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "REVERT",
      "path": "2"
    },
    "967": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "968": {
      "op": "POP"
    },
    "969": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AC"
    },
    "972": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D6"
    },
    "975": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "976": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "978": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4700"
    },
    "981": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMP",
      "path": "2"
    },
    "982": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "983": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF30"
    },
    "986": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMP",
      "path": "2"
    },
    "987": {
      "fn": "EIP712Base.getChainId",
      "offset": [
        1369,
        1524
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "988": {
      "fn": "EIP712Base.getChainId",
      "offset": [
        1369,
        1524
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "989": {
      "fn": "EIP712Base.getChainId",
      "offset": [
        1369,
        1524
      ],
      "op": "DUP1",
      "path": "22"
    },
    "990": {
      "fn": "EIP712Base.getChainId",
      "offset": [
        1369,
        1524
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "991": {
      "fn": "EIP712Base.getChainId",
      "offset": [
        1369,
        1524
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3E7"
    },
    "994": {
      "fn": "EIP712Base.getChainId",
      "offset": [
        1369,
        1524
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "995": {
      "fn": "EIP712Base.getChainId",
      "offset": [
        1369,
        1524
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "997": {
      "fn": "EIP712Base.getChainId",
      "offset": [
        1369,
        1524
      ],
      "op": "DUP1",
      "path": "22"
    },
    "998": {
      "fn": "EIP712Base.getChainId",
      "offset": [
        1369,
        1524
      ],
      "op": "REVERT",
      "path": "22"
    },
    "999": {
      "fn": "EIP712Base.getChainId",
      "offset": [
        1369,
        1524
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1000": {
      "op": "POP"
    },
    "1001": {
      "fn": "EIP712Base.getChainId",
      "offset": [
        1480,
        1489
      ],
      "op": "CHAINID",
      "path": "22"
    },
    "1002": {
      "fn": "EIP712Base.getChainId",
      "offset": [
        1369,
        1524
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x249"
    },
    "1005": {
      "fn": "EIP712Base.getChainId",
      "offset": [
        1369,
        1524
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1006": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        1944,
        2127
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1007": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        1944,
        2127
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1008": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        1944,
        2127
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1009": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        1944,
        2127
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1010": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        1944,
        2127
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3FA"
    },
    "1013": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        1944,
        2127
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1014": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        1944,
        2127
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1016": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        1944,
        2127
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1017": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        1944,
        2127
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1018": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        1944,
        2127
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1019": {
      "op": "POP"
    },
    "1020": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        1944,
        2127
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2AC"
    },
    "1023": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        1944,
        2127
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x409"
    },
    "1026": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        1944,
        2127
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1027": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        1944,
        2127
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1029": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        1944,
        2127
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47AD"
    },
    "1032": {
      "fn": "ERC1155Tradable.setCustomURI",
      "jump": "i",
      "offset": [
        1944,
        2127
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1033": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        1944,
        2127
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1034": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        1944,
        2127
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFC0"
    },
    "1037": {
      "fn": "ERC1155Tradable.setCustomURI",
      "jump": "i",
      "offset": [
        1944,
        2127
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1038": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        16963,
        17166
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1039": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        16963,
        17166
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x27C"
    },
    "1042": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        16963,
        17166
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x41C"
    },
    "1045": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        16963,
        17166
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1046": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        16963,
        17166
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1048": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        16963,
        17166
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4805"
    },
    "1051": {
      "fn": "HouseOfPanda.adminBurn",
      "jump": "i",
      "offset": [
        16963,
        17166
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1052": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        16963,
        17166
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1053": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        16963,
        17166
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x103F"
    },
    "1056": {
      "fn": "HouseOfPanda.adminBurn",
      "jump": "i",
      "offset": [
        16963,
        17166
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1057": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1058": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1059": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1060": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1061": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x42D"
    },
    "1064": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1065": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1067": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1068": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1069": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1070": {
      "op": "POP"
    },
    "1071": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x441"
    },
    "1074": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43C"
    },
    "1077": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1078": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1080": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4850"
    },
    "1083": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1084": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1085": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1088"
    },
    "1088": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1089": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1090": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1092": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1093": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x253"
    },
    "1096": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1097": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1098": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x494D"
    },
    "1101": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1102": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10057,
        11541
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1103": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10057,
        11541
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x27C"
    },
    "1106": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10057,
        11541
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x45C"
    },
    "1109": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10057,
        11541
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1110": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10057,
        11541
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1112": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10057,
        11541
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4805"
    },
    "1115": {
      "fn": "HouseOfPanda.mint",
      "jump": "i",
      "offset": [
        10057,
        11541
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1116": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10057,
        11541
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1117": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10057,
        11541
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11B1"
    },
    "1120": {
      "fn": "HouseOfPanda.mint",
      "jump": "i",
      "offset": [
        10057,
        11541
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1121": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11692,
        13044
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1122": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11692,
        13044
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x27C"
    },
    "1125": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11692,
        13044
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x46F"
    },
    "1128": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11692,
        13044
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1129": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11692,
        13044
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1131": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11692,
        13044
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4980"
    },
    "1134": {
      "fn": "HouseOfPanda.authorizedMint",
      "jump": "i",
      "offset": [
        11692,
        13044
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1135": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11692,
        13044
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1136": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11692,
        13044
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1773"
    },
    "1139": {
      "fn": "HouseOfPanda.authorizedMint",
      "jump": "i",
      "offset": [
        11692,
        13044
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1140": {
      "offset": [
        938,
        964
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1141": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        938,
        964
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1142": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        938,
        964
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1143": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        938,
        964
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1144": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        938,
        964
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x480"
    },
    "1147": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        938,
        964
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1148": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        938,
        964
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1150": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        938,
        964
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1151": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        938,
        964
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1152": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        938,
        964
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1153": {
      "op": "POP"
    },
    "1154": {
      "offset": [
        938,
        964
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x11"
    },
    "1156": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        938,
        964
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1157": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        938,
        964
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x27C"
    },
    "1160": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        938,
        964
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1161": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        938,
        964
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "1163": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        938,
        964
      ],
      "op": "AND",
      "path": "18"
    },
    "1164": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        938,
        964
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1165": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        938,
        964
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1166": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1167": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1168": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1169": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1170": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x49A"
    },
    "1173": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1174": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1176": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1177": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1178": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1179": {
      "op": "POP"
    },
    "1180": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4AE"
    },
    "1183": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4A9"
    },
    "1186": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1187": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1189": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4A3E"
    },
    "1192": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "jump": "i",
      "offset": [
        18669,
        19082
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1193": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1194": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CD0"
    },
    "1197": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "jump": "i",
      "offset": [
        18669,
        19082
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1198": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1199": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1201": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1202": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1203": {
      "op": "DUP4"
    },
    "1204": {
      "op": "MLOAD"
    },
    "1205": {
      "op": "DUP2"
    },
    "1206": {
      "op": "MSTORE"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1209": {
      "op": "DUP1"
    },
    "1210": {
      "op": "DUP6"
    },
    "1211": {
      "op": "ADD"
    },
    "1212": {
      "op": "MLOAD"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1219": {
      "op": "SHL"
    },
    "1220": {
      "op": "SUB"
    },
    "1221": {
      "op": "SWAP1"
    },
    "1222": {
      "op": "DUP2"
    },
    "1223": {
      "op": "AND"
    },
    "1224": {
      "op": "DUP3"
    },
    "1225": {
      "op": "DUP5"
    },
    "1226": {
      "op": "ADD"
    },
    "1227": {
      "op": "MSTORE"
    },
    "1228": {
      "op": "DUP6"
    },
    "1229": {
      "op": "DUP5"
    },
    "1230": {
      "op": "ADD"
    },
    "1231": {
      "op": "MLOAD"
    },
    "1232": {
      "op": "DUP4"
    },
    "1233": {
      "op": "DUP6"
    },
    "1234": {
      "op": "ADD"
    },
    "1235": {
      "op": "MSTORE"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1238": {
      "op": "SWAP6"
    },
    "1239": {
      "op": "DUP7"
    },
    "1240": {
      "op": "ADD"
    },
    "1241": {
      "op": "MLOAD"
    },
    "1242": {
      "op": "DUP7"
    },
    "1243": {
      "op": "DUP5"
    },
    "1244": {
      "op": "ADD"
    },
    "1245": {
      "op": "MSTORE"
    },
    "1246": {
      "op": "DUP5"
    },
    "1247": {
      "op": "MLOAD"
    },
    "1248": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1253": {
      "op": "SWAP1"
    },
    "1254": {
      "op": "DUP2"
    },
    "1255": {
      "op": "AND"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1258": {
      "op": "DUP1"
    },
    "1259": {
      "op": "DUP7"
    },
    "1260": {
      "op": "ADD"
    },
    "1261": {
      "op": "SWAP2"
    },
    "1262": {
      "op": "SWAP1"
    },
    "1263": {
      "op": "SWAP2"
    },
    "1264": {
      "op": "MSTORE"
    },
    "1265": {
      "op": "SWAP3"
    },
    "1266": {
      "op": "DUP7"
    },
    "1267": {
      "op": "ADD"
    },
    "1268": {
      "op": "MLOAD"
    },
    "1269": {
      "op": "AND"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1272": {
      "op": "DUP5"
    },
    "1273": {
      "op": "ADD"
    },
    "1274": {
      "op": "MSTORE"
    },
    "1275": {
      "op": "SWAP3"
    },
    "1276": {
      "op": "DUP5"
    },
    "1277": {
      "op": "ADD"
    },
    "1278": {
      "op": "MLOAD"
    },
    "1279": {
      "op": "SWAP1"
    },
    "1280": {
      "op": "SWAP3"
    },
    "1281": {
      "op": "AND"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1284": {
      "op": "DUP3"
    },
    "1285": {
      "op": "ADD"
    },
    "1286": {
      "op": "MSTORE"
    },
    "1287": {
      "op": "SWAP3"
    },
    "1288": {
      "op": "DUP3"
    },
    "1289": {
      "op": "ADD"
    },
    "1290": {
      "op": "MLOAD"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1293": {
      "op": "DUP5"
    },
    "1294": {
      "op": "ADD"
    },
    "1295": {
      "op": "MSTORE"
    },
    "1296": {
      "op": "ADD"
    },
    "1297": {
      "op": "MLOAD"
    },
    "1298": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1301": {
      "op": "DUP3"
    },
    "1302": {
      "op": "ADD"
    },
    "1303": {
      "op": "MSTORE"
    },
    "1304": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "1307": {
      "op": "ADD"
    },
    "1308": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x253"
    },
    "1311": {
      "op": "JUMP"
    },
    "1312": {
      "offset": [
        858,
        879
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1313": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        858,
        879
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1314": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        858,
        879
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1315": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        858,
        879
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1316": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        858,
        879
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x52C"
    },
    "1319": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        858,
        879
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1320": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        858,
        879
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1322": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        858,
        879
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1323": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        858,
        879
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1324": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        858,
        879
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1325": {
      "op": "POP"
    },
    "1326": {
      "offset": [
        858,
        879
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "1328": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        858,
        879
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1329": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        858,
        879
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x540"
    },
    "1332": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        858,
        879
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1339": {
      "op": "SHL"
    },
    "1340": {
      "op": "SUB"
    },
    "1341": {
      "offset": [
        858,
        879
      ],
      "op": "AND",
      "path": "18"
    },
    "1342": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        858,
        879
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1343": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        858,
        879
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1344": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        858,
        879
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1345": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        858,
        879
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1347": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        858,
        879
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1354": {
      "op": "SHL"
    },
    "1355": {
      "op": "SUB"
    },
    "1356": {
      "op": "SWAP1"
    },
    "1357": {
      "op": "SWAP2"
    },
    "1358": {
      "op": "AND"
    },
    "1359": {
      "op": "DUP2"
    },
    "1360": {
      "op": "MSTORE"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1363": {
      "op": "ADD"
    },
    "1364": {
      "offset": [
        858,
        879
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x253"
    },
    "1367": {
      "op": "JUMP"
    },
    "1368": {
      "offset": [
        826,
        852
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1369": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        826,
        852
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1370": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        826,
        852
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1371": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        826,
        852
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1372": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        826,
        852
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x564"
    },
    "1375": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        826,
        852
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1376": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        826,
        852
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1378": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        826,
        852
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1379": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        826,
        852
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1380": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        826,
        852
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1381": {
      "op": "POP"
    },
    "1382": {
      "offset": [
        826,
        852
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE"
    },
    "1384": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        826,
        852
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1385": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        826,
        852
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x57C"
    },
    "1388": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        826,
        852
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1393": {
      "op": "SHL"
    },
    "1394": {
      "offset": [
        826,
        852
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1395": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        826,
        852
      ],
      "op": "DIV",
      "path": "18"
    },
    "1396": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        826,
        852
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "1401": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        826,
        852
      ],
      "op": "AND",
      "path": "18"
    },
    "1402": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        826,
        852
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1403": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        826,
        852
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1404": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        826,
        852
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1405": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        826,
        852
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1407": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        826,
        852
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1408": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1413": {
      "op": "SWAP1"
    },
    "1414": {
      "op": "SWAP2"
    },
    "1415": {
      "op": "AND"
    },
    "1416": {
      "op": "DUP2"
    },
    "1417": {
      "op": "MSTORE"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1420": {
      "op": "ADD"
    },
    "1421": {
      "offset": [
        826,
        852
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x253"
    },
    "1424": {
      "op": "JUMP"
    },
    "1425": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8306,
        8439
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1426": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8306,
        8439
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1427": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8306,
        8439
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1428": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8306,
        8439
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1429": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8306,
        8439
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x59D"
    },
    "1432": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8306,
        8439
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1433": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8306,
        8439
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1435": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8306,
        8439
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1436": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8306,
        8439
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1437": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8306,
        8439
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1438": {
      "op": "POP"
    },
    "1439": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8306,
        8439
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x27C"
    },
    "1442": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8306,
        8439
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5AC"
    },
    "1445": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8306,
        8439
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1446": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8306,
        8439
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1448": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8306,
        8439
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4A77"
    },
    "1451": {
      "fn": "HouseOfPanda.projectExists",
      "jump": "i",
      "offset": [
        8306,
        8439
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1452": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8306,
        8439
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1453": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8306,
        8439
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E58"
    },
    "1456": {
      "fn": "HouseOfPanda.projectExists",
      "jump": "i",
      "offset": [
        8306,
        8439
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1457": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1458": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1459": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1460": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1461": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5BD"
    },
    "1464": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1465": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1467": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1468": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1469": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1470": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "POP",
      "path": "0"
    },
    "1471": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC"
    },
    "1474": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E78"
    },
    "1477": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1478": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16324,
        16632
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1479": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16324,
        16632
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1480": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16324,
        16632
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1481": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16324,
        16632
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1482": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16324,
        16632
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5D2"
    },
    "1485": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16324,
        16632
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1486": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16324,
        16632
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1488": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16324,
        16632
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1489": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16324,
        16632
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1490": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16324,
        16632
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1491": {
      "op": "POP"
    },
    "1492": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16324,
        16632
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x27C"
    },
    "1495": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16324,
        16632
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5E1"
    },
    "1498": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16324,
        16632
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1499": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16324,
        16632
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1501": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16324,
        16632
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4A94"
    },
    "1504": {
      "fn": "HouseOfPanda.burn",
      "jump": "i",
      "offset": [
        16324,
        16632
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1505": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16324,
        16632
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1506": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16324,
        16632
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EAE"
    },
    "1509": {
      "fn": "HouseOfPanda.burn",
      "jump": "i",
      "offset": [
        16324,
        16632
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1510": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1511": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1512": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1513": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1514": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5F2"
    },
    "1517": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1518": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1520": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1521": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1522": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1523": {
      "op": "POP"
    },
    "1524": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x606"
    },
    "1527": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x601"
    },
    "1530": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1531": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1533": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4A77"
    },
    "1536": {
      "fn": "HouseOfPanda.getProject",
      "jump": "i",
      "offset": [
        8704,
        8852
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1537": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1538": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F43"
    },
    "1541": {
      "fn": "HouseOfPanda.getProject",
      "jump": "i",
      "offset": [
        8704,
        8852
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1542": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1543": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1545": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1546": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x253"
    },
    "1549": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1550": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1551": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4AB2"
    },
    "1554": {
      "fn": "HouseOfPanda.getProject",
      "jump": "i",
      "offset": [
        8704,
        8852
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1555": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1556": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1557": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1558": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1559": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x61F"
    },
    "1562": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1563": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1565": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1566": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1567": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1568": {
      "op": "POP"
    },
    "1569": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x6"
    },
    "1571": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1578": {
      "op": "SHL"
    },
    "1579": {
      "op": "SUB"
    },
    "1580": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1581": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x540"
    },
    "1584": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1585": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        2197,
        2293
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1586": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        2197,
        2293
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1587": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        2197,
        2293
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1588": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        2197,
        2293
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1589": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        2197,
        2293
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x63D"
    },
    "1592": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        2197,
        2293
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1593": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        2197,
        2293
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1595": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        2197,
        2293
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1596": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        2197,
        2293
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1597": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        2197,
        2293
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1598": {
      "op": "POP"
    },
    "1599": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        2197,
        2293
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2AC"
    },
    "1602": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        2197,
        2293
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x64C"
    },
    "1605": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        2197,
        2293
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1606": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        2197,
        2293
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1608": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        2197,
        2293
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x464F"
    },
    "1611": {
      "fn": "HouseOfPanda.changeAdmin",
      "jump": "i",
      "offset": [
        2197,
        2293
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1612": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        2197,
        2293
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1613": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        2197,
        2293
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F54"
    },
    "1616": {
      "fn": "HouseOfPanda.changeAdmin",
      "jump": "i",
      "offset": [
        2197,
        2293
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1617": {
      "offset": [
        1074,
        1094
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1618": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        1074,
        1094
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1619": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        1074,
        1094
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1620": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        1074,
        1094
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1621": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        1074,
        1094
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x65D"
    },
    "1624": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        1074,
        1094
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1625": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        1074,
        1094
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1627": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        1074,
        1094
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1628": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        1074,
        1094
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1629": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        1074,
        1094
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1630": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        1074,
        1094
      ],
      "op": "POP",
      "path": "16"
    },
    "1631": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        1074,
        1094
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E3"
    },
    "1634": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        1074,
        1094
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F87"
    },
    "1637": {
      "fn": "HouseOfPanda.changeAdmin",
      "jump": "i",
      "offset": [
        1074,
        1094
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1638": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1639": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1640": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1641": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1642": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x672"
    },
    "1645": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1646": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1648": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1649": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1650": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1651": {
      "op": "POP"
    },
    "1652": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AC"
    },
    "1655": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x681"
    },
    "1658": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1659": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1661": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCA"
    },
    "1664": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1665": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1666": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F94"
    },
    "1669": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1670": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13110,
        13224
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1671": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13110,
        13224
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1672": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13110,
        13224
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1673": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13110,
        13224
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1674": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13110,
        13224
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x692"
    },
    "1677": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13110,
        13224
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1678": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13110,
        13224
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1680": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13110,
        13224
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1681": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13110,
        13224
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1682": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13110,
        13224
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1683": {
      "op": "POP"
    },
    "1684": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13110,
        13224
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6C2"
    },
    "1687": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13110,
        13224
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6A1"
    },
    "1690": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13110,
        13224
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1691": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13110,
        13224
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1693": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13110,
        13224
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4A77"
    },
    "1696": {
      "fn": "HouseOfPanda.supplyFor",
      "jump": "i",
      "offset": [
        13110,
        13224
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1697": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13110,
        13224
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1698": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13196,
        13217
      ],
      "op": "PUSH4",
      "path": "18",
      "statement": 3,
      "value": "0xFFFFFFFF"
    },
    "1703": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13196,
        13217
      ],
      "op": "AND",
      "path": "18"
    },
    "1704": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13170,
        13177
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1706": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13196,
        13217
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1707": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13196,
        13217
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1708": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13196,
        13217
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1709": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13196,
        13206
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "1711": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13196,
        13217
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1713": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13196,
        13217
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1714": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13196,
        13217
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1716": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13196,
        13217
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1717": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13196,
        13217
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1718": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13196,
        13217
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1725": {
      "op": "SHL"
    },
    "1726": {
      "op": "SUB"
    },
    "1727": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13196,
        13217
      ],
      "op": "AND",
      "path": "18"
    },
    "1728": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13196,
        13217
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1729": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13110,
        13224
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1730": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13110,
        13224
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1731": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13110,
        13224
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1733": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13110,
        13224
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1740": {
      "op": "SHL"
    },
    "1741": {
      "op": "SUB"
    },
    "1742": {
      "op": "SWAP1"
    },
    "1743": {
      "op": "SWAP2"
    },
    "1744": {
      "op": "AND"
    },
    "1745": {
      "op": "DUP2"
    },
    "1746": {
      "op": "MSTORE"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1749": {
      "op": "ADD"
    },
    "1750": {
      "fn": "HouseOfPanda.supplyFor",
      "offset": [
        13110,
        13224
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x253"
    },
    "1753": {
      "op": "JUMP"
    },
    "1754": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1755": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1756": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1757": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1758": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6E6"
    },
    "1761": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1762": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1764": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1765": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1766": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1767": {
      "op": "POP"
    },
    "1768": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2AC"
    },
    "1771": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6F5"
    },
    "1774": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1775": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1777": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4C0A"
    },
    "1780": {
      "fn": "HouseOfPanda.createProject",
      "jump": "i",
      "offset": [
        7128,
        8170
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1781": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1782": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x206A"
    },
    "1785": {
      "fn": "HouseOfPanda.createProject",
      "jump": "i",
      "offset": [
        7128,
        8170
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1786": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1787": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1788": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1789": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1790": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x706"
    },
    "1793": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1794": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1796": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1797": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1798": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1799": {
      "op": "POP"
    },
    "1800": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x71A"
    },
    "1803": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x715"
    },
    "1806": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1807": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1809": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4A3E"
    },
    "1812": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "jump": "i",
      "offset": [
        17172,
        17369
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1813": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1814": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x23FC"
    },
    "1817": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "jump": "i",
      "offset": [
        17172,
        17369
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1818": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1819": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1821": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1822": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x253"
    },
    "1825": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1826": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1827": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4CD9"
    },
    "1830": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "jump": "i",
      "offset": [
        17172,
        17369
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1831": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9541,
        9804
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1832": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9541,
        9804
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1833": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9541,
        9804
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1834": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9541,
        9804
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1835": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9541,
        9804
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x733"
    },
    "1838": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9541,
        9804
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1839": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9541,
        9804
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1841": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9541,
        9804
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1842": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9541,
        9804
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1843": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9541,
        9804
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1844": {
      "op": "POP"
    },
    "1845": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9541,
        9804
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2AC"
    },
    "1848": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9541,
        9804
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x742"
    },
    "1851": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9541,
        9804
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1852": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9541,
        9804
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1854": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9541,
        9804
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4D0D"
    },
    "1857": {
      "fn": "HouseOfPanda.setProjectStatus",
      "jump": "i",
      "offset": [
        9541,
        9804
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1858": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9541,
        9804
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1859": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9541,
        9804
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x24AA"
    },
    "1862": {
      "fn": "HouseOfPanda.setProjectStatus",
      "jump": "i",
      "offset": [
        9541,
        9804
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1863": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2254,
        2705
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1864": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2254,
        2705
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1865": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2254,
        2705
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1866": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2254,
        2705
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1867": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2254,
        2705
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x753"
    },
    "1870": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2254,
        2705
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1871": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2254,
        2705
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1873": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2254,
        2705
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1874": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2254,
        2705
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1875": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2254,
        2705
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1876": {
      "op": "POP"
    },
    "1877": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2254,
        2705
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x27C"
    },
    "1880": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2254,
        2705
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x762"
    },
    "1883": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2254,
        2705
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1884": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2254,
        2705
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1886": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2254,
        2705
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4D48"
    },
    "1889": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "jump": "i",
      "offset": [
        2254,
        2705
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1890": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2254,
        2705
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1891": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2254,
        2705
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x259B"
    },
    "1894": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "jump": "i",
      "offset": [
        2254,
        2705
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1895": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1896": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1897": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1898": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1899": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x773"
    },
    "1902": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1903": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1905": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1906": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1907": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1908": {
      "op": "POP"
    },
    "1909": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AC"
    },
    "1912": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x782"
    },
    "1915": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1916": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1918": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D76"
    },
    "1921": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1922": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1923": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2657"
    },
    "1926": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1927": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1928": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1929": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1930": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1931": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x793"
    },
    "1934": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1935": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1937": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1938": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1939": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1940": {
      "op": "POP"
    },
    "1941": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC"
    },
    "1944": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A2"
    },
    "1947": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1948": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1950": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x464F"
    },
    "1953": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1954": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1955": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26DE"
    },
    "1958": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1959": {
      "offset": [
        326,
        346
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1960": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        326,
        346
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "1961": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        326,
        346
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1962": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        326,
        346
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1963": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        326,
        346
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7B3"
    },
    "1966": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        326,
        346
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1967": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        326,
        346
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1969": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        326,
        346
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1970": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        326,
        346
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1971": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        326,
        346
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1972": {
      "op": "POP"
    },
    "1973": {
      "offset": [
        326,
        346
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xC"
    },
    "1975": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        326,
        346
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1976": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        326,
        346
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x540"
    },
    "1979": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        326,
        346
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1986": {
      "op": "SHL"
    },
    "1987": {
      "op": "SUB"
    },
    "1988": {
      "offset": [
        326,
        346
      ],
      "op": "AND",
      "path": "17"
    },
    "1989": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        326,
        346
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1990": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        326,
        346
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1991": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1992": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2195,
        2202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2000": {
      "op": "SHL"
    },
    "2001": {
      "op": "SUB"
    },
    "2002": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2222,
        2243
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 4
    },
    "2003": {
      "branch": 227,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2222,
        2243
      ],
      "op": "AND",
      "path": "2"
    },
    "2004": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x838"
    },
    "2007": {
      "branch": 227,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2008": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2010": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2011": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2017": {
      "op": "SHL"
    },
    "2018": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2019": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2022": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2024": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2025": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "ADD",
      "path": "2"
    },
    "2026": {
      "op": "MSTORE"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2031": {
      "op": "DUP3"
    },
    "2032": {
      "op": "ADD"
    },
    "2033": {
      "op": "MSTORE"
    },
    "2034": {
      "op": "PUSH32",
      "value": "0x455243313135353A2062616C616E636520717565727920666F7220746865207A"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2069": {
      "op": "DUP3"
    },
    "2070": {
      "op": "ADD"
    },
    "2071": {
      "op": "MSTORE"
    },
    "2072": {
      "op": "PUSH11",
      "value": "0x65726F2061646472657373"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2086": {
      "op": "SHL"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2089": {
      "op": "DUP3"
    },
    "2090": {
      "op": "ADD"
    },
    "2091": {
      "op": "MSTORE"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2094": {
      "op": "ADD"
    },
    "2095": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2096": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2098": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2099": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2100": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2101": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "SUB",
      "path": "2"
    },
    "2102": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2103": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "2104": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2105": {
      "op": "POP"
    },
    "2106": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2317
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x0"
    },
    "2108": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2109": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2110": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2111": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2113": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2114": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2115": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2116": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2118": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2119": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2120": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2127": {
      "op": "SHL"
    },
    "2128": {
      "op": "SUB"
    },
    "2129": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2130": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "AND",
      "path": "2"
    },
    "2131": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2132": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2133": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2134": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2135": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2136": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2137": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2138": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2139": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2140": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2141": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2142": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "POP",
      "path": "2"
    },
    "2143": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "POP",
      "path": "2"
    },
    "2144": {
      "fn": "ERC1155.balanceOf",
      "jump": "o",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2145": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2146": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1262,
        1266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2154": {
      "op": "SHL"
    },
    "2155": {
      "op": "SUB"
    },
    "2156": {
      "op": "NOT"
    },
    "2157": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 6
    },
    "2158": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "AND",
      "path": "2"
    },
    "2159": {
      "op": "PUSH4",
      "value": "0x6CDB3D13"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2166": {
      "op": "SHL"
    },
    "2167": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "EQ",
      "path": "2"
    },
    "2168": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2169": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1406
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x892"
    },
    "2172": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1406
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2173": {
      "op": "POP"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2180": {
      "op": "SHL"
    },
    "2181": {
      "op": "SUB"
    },
    "2182": {
      "op": "NOT"
    },
    "2183": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1354,
        1406
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2184": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1354,
        1406
      ],
      "op": "AND",
      "path": "2"
    },
    "2185": {
      "op": "PUSH4",
      "value": "0x3A24D07"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2192": {
      "op": "SHL"
    },
    "2193": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1354,
        1406
      ],
      "op": "EQ",
      "path": "2"
    },
    "2194": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1406
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2195": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1458
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2196": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1458
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x85B"
    },
    "2199": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1458
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2200": {
      "op": "POP"
    },
    "2201": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2208": {
      "op": "SHL"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2215": {
      "op": "SHL"
    },
    "2216": {
      "op": "SUB"
    },
    "2217": {
      "op": "NOT"
    },
    "2218": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "13",
      "statement": 7
    },
    "2219": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "13"
    },
    "2220": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "13"
    },
    "2221": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1422,
        1458
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x85B"
    },
    "2224": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        763,
        918
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2225": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14871,
        14983
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2226": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2228": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2235": {
      "op": "SHL"
    },
    "2236": {
      "op": "SUB"
    },
    "2237": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2238": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 8
    },
    "2239": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2240": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8DB"
    },
    "2243": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2244": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2246": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2247": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2253": {
      "op": "SHL"
    },
    "2254": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2255": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2256": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2258": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2259": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82F"
    },
    "2262": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2263": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DDE"
    },
    "2266": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2267": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2268": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14929,
        14935
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 9,
      "value": "0x11"
    },
    "2270": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14929,
        14945
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2271": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14929,
        14945
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2274": {
      "op": "NOT"
    },
    "2275": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14929,
        14945
      ],
      "op": "AND",
      "path": "18"
    },
    "2276": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14929,
        14945
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2277": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14929,
        14945
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2278": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14929,
        14945
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2279": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14929,
        14945
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2280": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14929,
        14945
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2281": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14929,
        14945
      ],
      "op": "OR",
      "path": "18"
    },
    "2282": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14929,
        14945
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2283": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14929,
        14945
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2284": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14929,
        14945
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2285": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14961
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 10,
      "value": "0xF"
    },
    "2287": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14961
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2288": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2290": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2291": {
      "op": "PUSH4",
      "value": "0x2329A29"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2298": {
      "op": "SHL"
    },
    "2299": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2300": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2301": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2303": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2304": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "ADD",
      "path": "18"
    },
    "2305": {
      "op": "SWAP3"
    },
    "2306": {
      "op": "SWAP1"
    },
    "2307": {
      "op": "SWAP3"
    },
    "2308": {
      "op": "MSTORE"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2315": {
      "op": "SHL"
    },
    "2316": {
      "op": "SUB"
    },
    "2317": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14961
      ],
      "op": "AND",
      "path": "18"
    },
    "2318": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14961
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2319": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14967
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2329A29"
    },
    "2324": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14967
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2327": {
      "op": "ADD"
    },
    "2328": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2330": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2332": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2333": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2334": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2335": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "SUB",
      "path": "18"
    },
    "2336": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2337": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2339": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "DUP8",
      "path": "18"
    },
    "2340": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2341": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "2342": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2343": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2344": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2345": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x931"
    },
    "2348": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2349": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2351": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2352": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2353": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2354": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "POP",
      "path": "18"
    },
    "2355": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "GAS",
      "path": "18"
    },
    "2356": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "CALL",
      "path": "18"
    },
    "2357": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2358": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2359": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2360": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x945"
    },
    "2363": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2364": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2365": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2367": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2368": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "2369": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2370": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2372": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2373": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2374": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "POP",
      "path": "18"
    },
    "2375": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "POP",
      "path": "18"
    },
    "2376": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "POP",
      "path": "18"
    },
    "2377": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14955,
        14976
      ],
      "op": "POP",
      "path": "18"
    },
    "2378": {
      "fn": "HouseOfPanda.pause",
      "offset": [
        14871,
        14983
      ],
      "op": "POP",
      "path": "18"
    },
    "2379": {
      "fn": "HouseOfPanda.pause",
      "jump": "o",
      "offset": [
        14871,
        14983
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2380": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1659,
        1748
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2381": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2383": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2390": {
      "op": "SHL"
    },
    "2391": {
      "op": "SUB"
    },
    "2392": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2393": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2394": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2395": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x976"
    },
    "2398": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2399": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2401": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2402": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2408": {
      "op": "SHL"
    },
    "2409": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2410": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2411": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2413": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2414": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82F"
    },
    "2417": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2418": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DDE"
    },
    "2421": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2422": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2423": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1725,
        1741
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 11,
      "value": "0x97F"
    },
    "2426": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1733,
        1740
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2427": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1725,
        1732
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2776"
    },
    "2430": {
      "fn": "ERC1155Tradable.setURI",
      "jump": "i",
      "offset": [
        1725,
        1741
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2431": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1725,
        1741
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2432": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1659,
        1748
      ],
      "op": "POP",
      "path": "16"
    },
    "2433": {
      "fn": "ERC1155Tradable.setURI",
      "jump": "o",
      "offset": [
        1659,
        1748
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2434": {
      "offset": [
        1027,
        1045
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2435": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "2437": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2438": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2439": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x98F"
    },
    "2442": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2443": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E13"
    },
    "2446": {
      "fn": "ERC1155Tradable.setURI",
      "jump": "i",
      "offset": [
        1027,
        1045
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2447": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2448": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2449": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2451": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "ADD",
      "path": "16"
    },
    "2452": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2454": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2455": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2456": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DIV",
      "path": "16"
    },
    "2457": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "MUL",
      "path": "16"
    },
    "2458": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2460": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "ADD",
      "path": "16"
    },
    "2461": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2463": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2464": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2465": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2466": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "ADD",
      "path": "16"
    },
    "2467": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2469": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2470": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2471": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2472": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2473": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2474": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2475": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2476": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2477": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2479": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "ADD",
      "path": "16"
    },
    "2480": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2481": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2482": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2483": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9BB"
    },
    "2486": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2487": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E13"
    },
    "2490": {
      "fn": "ERC1155Tradable.setURI",
      "jump": "i",
      "offset": [
        1027,
        1045
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2491": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2492": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2493": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2494": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA08"
    },
    "2497": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2498": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2499": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2501": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "LT",
      "path": "16"
    },
    "2502": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9DD"
    },
    "2505": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2506": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "2509": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2510": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2511": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2512": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DIV",
      "path": "16"
    },
    "2513": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "MUL",
      "path": "16"
    },
    "2514": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2515": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2516": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2517": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2519": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "ADD",
      "path": "16"
    },
    "2520": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2521": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA08"
    },
    "2524": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2525": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2526": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2527": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "ADD",
      "path": "16"
    },
    "2528": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2529": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2530": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2532": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2533": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2535": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2537": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2538": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2539": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2540": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2541": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2542": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2543": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2544": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2545": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2547": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "ADD",
      "path": "16"
    },
    "2548": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2549": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2551": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "ADD",
      "path": "16"
    },
    "2552": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2553": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2554": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "GT",
      "path": "16"
    },
    "2555": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9EB"
    },
    "2558": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2559": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2560": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2561": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SUB",
      "path": "16"
    },
    "2562": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2564": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "AND",
      "path": "16"
    },
    "2565": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2566": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "ADD",
      "path": "16"
    },
    "2567": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2568": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2569": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "POP",
      "path": "16"
    },
    "2570": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "POP",
      "path": "16"
    },
    "2571": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "POP",
      "path": "16"
    },
    "2572": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "POP",
      "path": "16"
    },
    "2573": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "POP",
      "path": "16"
    },
    "2574": {
      "fn": "ERC1155Tradable.setURI",
      "offset": [
        1027,
        1045
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2575": {
      "fn": "ERC1155Tradable.setURI",
      "jump": "o",
      "offset": [
        1027,
        1045
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2576": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        976,
        2093
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2577": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1227,
        1375
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2579": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1227,
        1375
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2580": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1227,
        1375
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2581": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1171,
        1183
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "2583": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1227,
        1375
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2584": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1227,
        1375
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2585": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1227,
        1375
      ],
      "op": "ADD",
      "path": "24"
    },
    "2586": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1227,
        1375
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2587": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1227,
        1375
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2594": {
      "op": "SHL"
    },
    "2595": {
      "op": "SUB"
    },
    "2596": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1264,
        1283
      ],
      "op": "DUP9",
      "path": "24"
    },
    "2597": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1264,
        1283
      ],
      "op": "AND",
      "path": "24"
    },
    "2598": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1195,
        1224
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2600": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1264,
        1283
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2601": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1264,
        1283
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2602": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1264,
        1283
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2603": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1264,
        1270
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x5"
    },
    "2605": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1264,
        1283
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2607": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1264,
        1283
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2608": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1264,
        1283
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2609": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1264,
        1283
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2610": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1264,
        1283
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2611": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1264,
        1283
      ],
      "op": "DUP6",
      "path": "24"
    },
    "2612": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1264,
        1283
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2613": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1264,
        1283
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2614": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1264,
        1283
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2615": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1227,
        1375
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2616": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1227,
        1375
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2617": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1227,
        1375
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2618": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1227,
        1375
      ],
      "op": "ADD",
      "path": "24"
    },
    "2619": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1227,
        1375
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2620": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1227,
        1375
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2621": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1227,
        1375
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2622": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1227,
        1375
      ],
      "op": "ADD",
      "path": "24"
    },
    "2623": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1227,
        1375
      ],
      "op": "DUP7",
      "path": "24"
    },
    "2624": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1227,
        1375
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2625": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1227,
        1375
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2626": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1407,
        1452
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 12,
      "value": "0xA4E"
    },
    "2629": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1271,
        1282
      ],
      "op": "DUP8",
      "path": "24"
    },
    "2630": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1227,
        1375
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2631": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1435,
        1439
      ],
      "op": "DUP8",
      "path": "24"
    },
    "2632": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1441,
        1445
      ],
      "op": "DUP8",
      "path": "24"
    },
    "2633": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1447,
        1451
      ],
      "op": "DUP8",
      "path": "24"
    },
    "2634": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1407,
        1413
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2786"
    },
    "2637": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "jump": "i",
      "offset": [
        1407,
        1452
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2638": {
      "branch": 245,
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1407,
        1452
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2639": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1386,
        1511
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAA4"
    },
    "2642": {
      "branch": 245,
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1386,
        1511
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2643": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1386,
        1511
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2645": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1386,
        1511
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2646": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2652": {
      "op": "SHL"
    },
    "2653": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1386,
        1511
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2654": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1386,
        1511
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2657": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1386,
        1511
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2659": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1386,
        1511
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2660": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1386,
        1511
      ],
      "op": "ADD",
      "path": "24"
    },
    "2661": {
      "op": "MSTORE"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2666": {
      "op": "DUP3"
    },
    "2667": {
      "op": "ADD"
    },
    "2668": {
      "op": "MSTORE"
    },
    "2669": {
      "op": "PUSH32",
      "value": "0x5369676E657220616E64207369676E617475726520646F206E6F74206D617463"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2704": {
      "op": "DUP3"
    },
    "2705": {
      "op": "ADD"
    },
    "2706": {
      "op": "MSTORE"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "2709": {
      "op": "PUSH1",
      "value": "0xFB"
    },
    "2711": {
      "op": "SHL"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2714": {
      "op": "DUP3"
    },
    "2715": {
      "op": "ADD"
    },
    "2716": {
      "op": "MSTORE"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2719": {
      "op": "ADD"
    },
    "2720": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1386,
        1511
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x82F"
    },
    "2723": {
      "op": "JUMP"
    },
    "2724": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1386,
        1511
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2731": {
      "op": "SHL"
    },
    "2732": {
      "op": "SUB"
    },
    "2733": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1597,
        1616
      ],
      "op": "DUP8",
      "path": "24",
      "statement": 13
    },
    "2734": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1597,
        1616
      ],
      "op": "AND",
      "path": "24"
    },
    "2735": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1597,
        1616
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2737": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1597,
        1616
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2738": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1597,
        1616
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2739": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1597,
        1616
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2740": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1597,
        1603
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x5"
    },
    "2742": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1597,
        1616
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2744": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1597,
        1616
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2745": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1597,
        1616
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2747": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1597,
        1616
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2748": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1597,
        1616
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2749": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1597,
        1616
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2750": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1597,
        1623
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAC8"
    },
    "2753": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1597,
        1623
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2754": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1621,
        1622
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "2756": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1597,
        1620
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2876"
    },
    "2759": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "jump": "i",
      "offset": [
        1597,
        1623
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2760": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1597,
        1623
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2767": {
      "op": "SHL"
    },
    "2768": {
      "op": "SUB"
    },
    "2769": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1575,
        1594
      ],
      "op": "DUP9",
      "path": "24"
    },
    "2770": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1575,
        1594
      ],
      "op": "AND",
      "path": "24"
    },
    "2771": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1575,
        1594
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2773": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1575,
        1594
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2774": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1575,
        1594
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2775": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1575,
        1594
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2776": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1575,
        1581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x5"
    },
    "2778": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1575,
        1594
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2780": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1575,
        1594
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2781": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1575,
        1594
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2783": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1575,
        1594
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2784": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1575,
        1594
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2785": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1575,
        1594
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2786": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1575,
        1594
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2787": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1575,
        1623
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2788": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1575,
        1623
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2789": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1575,
        1623
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2790": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1575,
        1623
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2791": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1639,
        1761
      ],
      "op": "MLOAD",
      "path": "24",
      "statement": 14
    },
    "2792": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1639,
        1761
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x5845892132946850460BFF5A0083F71031BC5BF9AADCD40F1DE79423EAC9B10B"
    },
    "2825": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1639,
        1761
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2826": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1639,
        1761
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB18"
    },
    "2829": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1639,
        1761
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2830": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1582,
        1593
      ],
      "op": "DUP10",
      "path": "24"
    },
    "2831": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1582,
        1593
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2832": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1709,
        1719
      ],
      "op": "CALLER",
      "path": "24"
    },
    "2833": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1709,
        1719
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2834": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1734,
        1751
      ],
      "op": "DUP11",
      "path": "24"
    },
    "2835": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1734,
        1751
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2836": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1639,
        1761
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4E47"
    },
    "2839": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "jump": "i",
      "offset": [
        1639,
        1761
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2840": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1639,
        1761
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2841": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1639,
        1761
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2843": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1639,
        1761
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2844": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1639,
        1761
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2845": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1639,
        1761
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2846": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1639,
        1761
      ],
      "op": "SUB",
      "path": "24"
    },
    "2847": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1639,
        1761
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2848": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1639,
        1761
      ],
      "op": "LOG1",
      "path": "24"
    },
    "2849": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1869,
        1881
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2851": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1883,
        1906
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2852": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1918,
        1922
      ],
      "op": "ADDRESS",
      "path": "24"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2859": {
      "op": "SHL"
    },
    "2860": {
      "op": "SUB"
    },
    "2861": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        1928
      ],
      "op": "AND",
      "path": "24"
    },
    "2862": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1959,
        1976
      ],
      "op": "DUP9",
      "path": "24"
    },
    "2863": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1978,
        1989
      ],
      "op": "DUP11",
      "path": "24"
    },
    "2864": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2866": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2867": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2869": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "ADD",
      "path": "24"
    },
    "2870": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB40"
    },
    "2873": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2874": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2875": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2876": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4E7C"
    },
    "2879": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "jump": "i",
      "offset": [
        1942,
        1990
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2880": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2881": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2883": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2884": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2887": {
      "op": "NOT"
    },
    "2888": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2889": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2890": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "SUB",
      "path": "24"
    },
    "2891": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "ADD",
      "path": "24"
    },
    "2892": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2893": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2894": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2895": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2896": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2897": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1942,
        1990
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2898": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB5A"
    },
    "2901": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2902": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4EB3"
    },
    "2905": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "jump": "i",
      "offset": [
        1910,
        2000
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2906": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2907": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2909": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2911": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2912": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2913": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2914": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "SUB",
      "path": "24"
    },
    "2915": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2916": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2918": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "DUP7",
      "path": "24"
    },
    "2919": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "GAS",
      "path": "24"
    },
    "2920": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "CALL",
      "path": "24"
    },
    "2921": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2922": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "POP",
      "path": "24"
    },
    "2923": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "POP",
      "path": "24"
    },
    "2924": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2925": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2926": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2928": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2929": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "EQ",
      "path": "24"
    },
    "2930": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB97"
    },
    "2933": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2934": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2936": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2937": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2938": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "POP",
      "path": "24"
    },
    "2939": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "2941": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "NOT",
      "path": "24"
    },
    "2942": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3F"
    },
    "2944": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2945": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "ADD",
      "path": "24"
    },
    "2946": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "AND",
      "path": "24"
    },
    "2947": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2948": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "ADD",
      "path": "24"
    },
    "2949": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2951": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2952": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2953": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2954": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2955": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2956": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2958": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2960": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2961": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "ADD",
      "path": "24"
    },
    "2962": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "2963": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB9C"
    },
    "2966": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2967": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2968": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "2970": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2971": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "POP",
      "path": "24"
    },
    "2972": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2973": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1910,
        2000
      ],
      "op": "POP",
      "path": "24"
    },
    "2974": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1868,
        2000
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2975": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1868,
        2000
      ],
      "op": "POP",
      "path": "24"
    },
    "2976": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1868,
        2000
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2977": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        1868,
        2000
      ],
      "op": "POP",
      "path": "24"
    },
    "2978": {
      "branch": 246,
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        2018,
        2025
      ],
      "op": "DUP2",
      "path": "24",
      "statement": 15
    },
    "2979": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        2010,
        2058
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xBEE"
    },
    "2982": {
      "branch": 246,
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        2010,
        2058
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2983": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        2010,
        2058
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2985": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        2010,
        2058
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2986": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2992": {
      "op": "SHL"
    },
    "2993": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        2010,
        2058
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2994": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        2010,
        2058
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2997": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        2010,
        2058
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2999": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        2010,
        2058
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3000": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        2010,
        2058
      ],
      "op": "ADD",
      "path": "24"
    },
    "3001": {
      "op": "MSTORE"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "3004": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3006": {
      "op": "DUP3"
    },
    "3007": {
      "op": "ADD"
    },
    "3008": {
      "op": "MSTORE"
    },
    "3009": {
      "op": "PUSH32",
      "value": "0x46756E6374696F6E2063616C6C206E6F74207375636365737366756C00000000"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3044": {
      "op": "DUP3"
    },
    "3045": {
      "op": "ADD"
    },
    "3046": {
      "op": "MSTORE"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3049": {
      "op": "ADD"
    },
    "3050": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        2010,
        2058
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x82F"
    },
    "3053": {
      "op": "JUMP"
    },
    "3054": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        2010,
        2058
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3055": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        2076,
        2086
      ],
      "op": "SWAP9",
      "path": "24",
      "statement": 16
    },
    "3056": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "offset": [
        976,
        2093
      ],
      "op": "SWAP8",
      "path": "24"
    },
    "3057": {
      "op": "POP"
    },
    "3058": {
      "op": "POP"
    },
    "3059": {
      "op": "POP"
    },
    "3060": {
      "op": "POP"
    },
    "3061": {
      "op": "POP"
    },
    "3062": {
      "op": "POP"
    },
    "3063": {
      "op": "POP"
    },
    "3064": {
      "op": "POP"
    },
    "3065": {
      "fn": "NativeMetaTransaction.executeMetaTransaction",
      "jump": "o",
      "offset": [
        976,
        2093
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3066": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3067": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8293
      ],
      "op": "PUSH4",
      "path": "18",
      "statement": 17,
      "value": "0xFFFFFFFF"
    },
    "3072": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8293
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3073": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8293
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3074": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8293
      ],
      "op": "AND",
      "path": "18"
    },
    "3075": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8234,
        8238
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3077": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3078": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3079": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3080": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8266
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "3082": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3084": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3085": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3087": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3088": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3089": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8280
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3090": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13654,
        13667
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "3092": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13654,
        13667
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3093": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8280
      ],
      "op": "AND",
      "path": "18"
    },
    "3094": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8293
      ],
      "op": "EQ",
      "path": "18"
    },
    "3095": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13679,
        13727
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 18,
      "value": "0xC32"
    },
    "3098": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13679,
        13727
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3099": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13679,
        13727
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3101": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13679,
        13727
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3102": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3108": {
      "op": "SHL"
    },
    "3109": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13679,
        13727
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3110": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13679,
        13727
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3111": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13679,
        13727
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3113": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13679,
        13727
      ],
      "op": "ADD",
      "path": "18"
    },
    "3114": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13679,
        13727
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "3117": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13679,
        13727
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3118": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13679,
        13727
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4ECF"
    },
    "3121": {
      "fn": "HouseOfPanda.uri",
      "jump": "i",
      "offset": [
        13679,
        13727
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3122": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13679,
        13727
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3123": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13833
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3125": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13842,
        13863
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3126": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13842,
        13863
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3127": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13842,
        13863
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3128": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13842,
        13851
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "3130": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13842,
        13863
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3132": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13842,
        13863
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3133": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13842,
        13863
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3135": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13842,
        13863
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3136": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13842,
        13863
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3137": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3138": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3139": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC4B"
    },
    "3142": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3143": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4E13"
    },
    "3146": {
      "fn": "HouseOfPanda.uri",
      "jump": "i",
      "offset": [
        13806,
        13864
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3147": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3148": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3149": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "3151": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "ADD",
      "path": "18"
    },
    "3152": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3154": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3155": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3156": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DIV",
      "path": "18"
    },
    "3157": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "MUL",
      "path": "18"
    },
    "3158": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3160": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "ADD",
      "path": "18"
    },
    "3161": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3163": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3164": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3165": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3166": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "ADD",
      "path": "18"
    },
    "3167": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3169": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3170": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3171": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3172": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3173": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3174": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3175": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3176": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3177": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3179": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "ADD",
      "path": "18"
    },
    "3180": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3181": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3182": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3183": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC77"
    },
    "3186": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3187": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4E13"
    },
    "3190": {
      "fn": "HouseOfPanda.uri",
      "jump": "i",
      "offset": [
        13806,
        13864
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3191": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3192": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3193": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3194": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCC4"
    },
    "3197": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3198": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3199": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "3201": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "LT",
      "path": "18"
    },
    "3202": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC99"
    },
    "3205": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3206": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "3209": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3210": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3211": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3212": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DIV",
      "path": "18"
    },
    "3213": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "MUL",
      "path": "18"
    },
    "3214": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3215": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3216": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3217": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3219": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "ADD",
      "path": "18"
    },
    "3220": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3221": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCC4"
    },
    "3224": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3225": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3226": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3227": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "ADD",
      "path": "18"
    },
    "3228": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3229": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3230": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3232": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3233": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3235": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3237": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3238": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3239": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3240": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3241": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3242": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3243": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3244": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3245": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3247": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "ADD",
      "path": "18"
    },
    "3248": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3249": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3251": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "ADD",
      "path": "18"
    },
    "3252": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3253": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3254": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "GT",
      "path": "18"
    },
    "3255": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCA7"
    },
    "3258": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3259": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3260": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3261": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SUB",
      "path": "18"
    },
    "3262": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "3264": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "AND",
      "path": "18"
    },
    "3265": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3266": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "ADD",
      "path": "18"
    },
    "3267": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3268": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3269": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "POP",
      "path": "18"
    },
    "3270": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "POP",
      "path": "18"
    },
    "3271": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "POP",
      "path": "18"
    },
    "3272": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "POP",
      "path": "18"
    },
    "3273": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "POP",
      "path": "18"
    },
    "3274": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3275": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13806,
        13864
      ],
      "op": "POP",
      "path": "18"
    },
    "3276": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13902,
        13903
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3278": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13878,
        13892
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3279": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13878,
        13899
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3280": {
      "branch": 176,
      "fn": "HouseOfPanda.uri",
      "offset": [
        13878,
        13903
      ],
      "op": "GT",
      "path": "18"
    },
    "3281": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13874,
        14410
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3282": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13874,
        14410
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD74"
    },
    "3285": {
      "branch": 176,
      "fn": "HouseOfPanda.uri",
      "offset": [
        13874,
        14410
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3286": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13926,
        13947
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 19,
      "value": "0x0"
    },
    "3288": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13926,
        13947
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3289": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13926,
        13947
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3290": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13926,
        13947
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3291": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13926,
        13935
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "3293": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13926,
        13947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3295": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13926,
        13947
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3296": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13926,
        13947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3298": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13926,
        13947
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3299": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13926,
        13947
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3300": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3301": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3302": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCEE"
    },
    "3305": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3306": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4E13"
    },
    "3309": {
      "fn": "HouseOfPanda.uri",
      "jump": "i",
      "offset": [
        13919,
        13947
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3310": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3311": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3312": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "3314": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "ADD",
      "path": "18"
    },
    "3315": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3317": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3318": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3319": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DIV",
      "path": "18"
    },
    "3320": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "MUL",
      "path": "18"
    },
    "3321": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3323": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "ADD",
      "path": "18"
    },
    "3324": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3326": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3327": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3328": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3329": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "ADD",
      "path": "18"
    },
    "3330": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3332": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3333": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3334": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3335": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3336": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3337": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3338": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3339": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3340": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3342": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "ADD",
      "path": "18"
    },
    "3343": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3344": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3345": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3346": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD1A"
    },
    "3349": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3350": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4E13"
    },
    "3353": {
      "fn": "HouseOfPanda.uri",
      "jump": "i",
      "offset": [
        13919,
        13947
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3354": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3355": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3356": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3357": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD67"
    },
    "3360": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3361": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3362": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "3364": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "LT",
      "path": "18"
    },
    "3365": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD3C"
    },
    "3368": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3369": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "3372": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3373": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3374": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3375": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DIV",
      "path": "18"
    },
    "3376": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "MUL",
      "path": "18"
    },
    "3377": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3378": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3379": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3380": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3382": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "ADD",
      "path": "18"
    },
    "3383": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3384": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD67"
    },
    "3387": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3388": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3389": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3390": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "ADD",
      "path": "18"
    },
    "3391": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3392": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3393": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3395": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3396": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3398": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3400": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3401": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3402": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3403": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3404": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3405": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3406": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3407": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3408": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3410": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "ADD",
      "path": "18"
    },
    "3411": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3412": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3414": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "ADD",
      "path": "18"
    },
    "3415": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3416": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3417": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "GT",
      "path": "18"
    },
    "3418": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD4A"
    },
    "3421": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3422": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3423": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3424": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SUB",
      "path": "18"
    },
    "3425": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "3427": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "AND",
      "path": "18"
    },
    "3428": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3429": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "ADD",
      "path": "18"
    },
    "3430": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3431": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3432": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "POP",
      "path": "18"
    },
    "3433": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "POP",
      "path": "18"
    },
    "3434": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "POP",
      "path": "18"
    },
    "3435": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "POP",
      "path": "18"
    },
    "3436": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "POP",
      "path": "18"
    },
    "3437": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3438": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "POP",
      "path": "18"
    },
    "3439": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13919,
        13947
      ],
      "op": "POP",
      "path": "18"
    },
    "3440": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3441": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3442": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "POP",
      "path": "18"
    },
    "3443": {
      "fn": "HouseOfPanda.uri",
      "jump": "o",
      "offset": [
        13577,
        14416
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3444": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13874,
        14410
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3445": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14023,
        14044
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3447": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14047,
        14068
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD7F"
    },
    "3450": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14057,
        14067
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3451": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14047,
        14056
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2882"
    },
    "3454": {
      "fn": "HouseOfPanda.uri",
      "jump": "i",
      "offset": [
        14047,
        14068
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3455": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14047,
        14068
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3456": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14023,
        14068
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3457": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14023,
        14068
      ],
      "op": "POP",
      "path": "18"
    },
    "3458": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14129,
        14130
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 20,
      "value": "0x0"
    },
    "3460": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14111,
        14118
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3461": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14105,
        14126
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3462": {
      "branch": 177,
      "fn": "HouseOfPanda.uri",
      "offset": [
        14105,
        14130
      ],
      "op": "GT",
      "path": "18"
    },
    "3463": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14105,
        14399
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD9F"
    },
    "3466": {
      "branch": 177,
      "fn": "HouseOfPanda.uri",
      "offset": [
        14105,
        14399
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3467": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14105,
        14399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3469": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14105,
        14399
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3470": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14105,
        14399
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3471": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14105,
        14399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3473": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14105,
        14399
      ],
      "op": "ADD",
      "path": "18"
    },
    "3474": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14105,
        14399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3476": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14105,
        14399
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3477": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14105,
        14399
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3478": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14105,
        14399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3480": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14105,
        14399
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3481": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14105,
        14399
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3482": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14105,
        14399
      ],
      "op": "POP",
      "path": "18"
    },
    "3483": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14105,
        14399
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDCA"
    },
    "3486": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14105,
        14399
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3487": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14105,
        14399
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3488": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14231,
        14238
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3489": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14268,
        14289
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDA9"
    },
    "3492": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14268,
        14278
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3493": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14268,
        14287
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2916"
    },
    "3496": {
      "fn": "HouseOfPanda.uri",
      "jump": "i",
      "offset": [
        14268,
        14289
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3497": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14268,
        14289
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3498": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3500": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3501": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3503": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "ADD",
      "path": "18"
    },
    "3504": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDBA"
    },
    "3507": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3508": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3509": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3510": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4EF1"
    },
    "3513": {
      "fn": "HouseOfPanda.uri",
      "jump": "i",
      "offset": [
        14185,
        14352
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3514": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3515": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3517": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3518": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3520": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3521": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3522": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "SUB",
      "path": "18"
    },
    "3523": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "SUB",
      "path": "18"
    },
    "3524": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3525": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3526": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3527": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3529": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14185,
        14352
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3530": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14105,
        14399
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3531": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        14082,
        14399
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "3532": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3533": {
      "op": "POP"
    },
    "3534": {
      "op": "POP"
    },
    "3535": {
      "op": "POP"
    },
    "3536": {
      "op": "POP"
    },
    "3537": {
      "fn": "HouseOfPanda.uri",
      "jump": "o",
      "offset": [
        13577,
        14416
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3538": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13874,
        14410
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3539": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13669,
        14416
      ],
      "op": "POP",
      "path": "18"
    },
    "3540": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3541": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3542": {
      "fn": "HouseOfPanda.uri",
      "offset": [
        13577,
        14416
      ],
      "op": "POP",
      "path": "18"
    },
    "3543": {
      "fn": "HouseOfPanda.uri",
      "jump": "o",
      "offset": [
        13577,
        14416
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3544": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17626,
        17825
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3545": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3547": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3554": {
      "op": "SHL"
    },
    "3555": {
      "op": "SUB"
    },
    "3556": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "3557": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3558": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "3559": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE02"
    },
    "3562": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3563": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3565": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3566": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3570": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3572": {
      "op": "SHL"
    },
    "3573": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3574": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3575": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3577": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "3578": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82F"
    },
    "3581": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3582": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DDE"
    },
    "3585": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3586": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3587": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17764
      ],
      "op": "ADDRESS",
      "path": "18",
      "statement": 21
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3594": {
      "op": "SHL"
    },
    "3595": {
      "op": "SUB"
    },
    "3596": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17770
      ],
      "op": "AND",
      "path": "18"
    },
    "3597": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17770
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x8DA5CB5B"
    },
    "3602": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3604": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3605": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3606": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "3611": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "AND",
      "path": "18"
    },
    "3612": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "3614": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "SHL",
      "path": "18"
    },
    "3615": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3616": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3617": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3619": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "ADD",
      "path": "18"
    },
    "3620": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3622": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3624": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3625": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3626": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3627": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "SUB",
      "path": "18"
    },
    "3628": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3629": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "DUP7",
      "path": "18"
    },
    "3630": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "GAS",
      "path": "18"
    },
    "3631": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "3632": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3633": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3634": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3635": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE40"
    },
    "3638": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3639": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3640": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3642": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3643": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "3644": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3645": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3647": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "REVERT",
      "path": "18"
    },
    "3648": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3649": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "POP",
      "path": "18"
    },
    "3650": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "POP",
      "path": "18"
    },
    "3651": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "POP",
      "path": "18"
    },
    "3652": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "POP",
      "path": "18"
    },
    "3653": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3655": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3656": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3657": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "3659": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "NOT",
      "path": "18"
    },
    "3660": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "3662": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3663": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "ADD",
      "path": "18"
    },
    "3664": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "AND",
      "path": "18"
    },
    "3665": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3666": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "ADD",
      "path": "18"
    },
    "3667": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3668": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3670": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3671": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "POP",
      "path": "18"
    },
    "3672": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3673": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "ADD",
      "path": "18"
    },
    "3674": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3675": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE64"
    },
    "3678": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3679": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3680": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4F30"
    },
    "3683": {
      "fn": "HouseOfPanda.updateStaker",
      "jump": "i",
      "offset": [
        17760,
        17772
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3684": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17760,
        17772
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3691": {
      "op": "SHL"
    },
    "3692": {
      "op": "SUB"
    },
    "3693": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17772
      ],
      "op": "AND",
      "path": "18"
    },
    "3694": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17740,
        17747
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3701": {
      "op": "SHL"
    },
    "3702": {
      "op": "SUB"
    },
    "3703": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17754
      ],
      "op": "AND",
      "path": "18"
    },
    "3704": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17754
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x8DA5CB5B"
    },
    "3709": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3711": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3712": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3713": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "3718": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "AND",
      "path": "18"
    },
    "3719": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "3721": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "SHL",
      "path": "18"
    },
    "3722": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3723": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3724": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3726": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "ADD",
      "path": "18"
    },
    "3727": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3729": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3731": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3732": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3733": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3734": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "SUB",
      "path": "18"
    },
    "3735": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3736": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "DUP7",
      "path": "18"
    },
    "3737": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "GAS",
      "path": "18"
    },
    "3738": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "3739": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3740": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3741": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3742": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xEAB"
    },
    "3745": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3746": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3747": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3749": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3750": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "3751": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3752": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3754": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "REVERT",
      "path": "18"
    },
    "3755": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3756": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "POP",
      "path": "18"
    },
    "3757": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "POP",
      "path": "18"
    },
    "3758": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "POP",
      "path": "18"
    },
    "3759": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "POP",
      "path": "18"
    },
    "3760": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3762": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3763": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3764": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "3766": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "NOT",
      "path": "18"
    },
    "3767": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "3769": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3770": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "ADD",
      "path": "18"
    },
    "3771": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "AND",
      "path": "18"
    },
    "3772": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3773": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "ADD",
      "path": "18"
    },
    "3774": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3775": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3777": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3778": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "POP",
      "path": "18"
    },
    "3779": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3780": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "ADD",
      "path": "18"
    },
    "3781": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3782": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xECF"
    },
    "3785": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3786": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3787": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4F30"
    },
    "3790": {
      "fn": "HouseOfPanda.updateStaker",
      "jump": "i",
      "offset": [
        17732,
        17756
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3791": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17756
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3798": {
      "op": "SHL"
    },
    "3799": {
      "op": "SUB"
    },
    "3800": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17772
      ],
      "op": "AND",
      "path": "18"
    },
    "3801": {
      "branch": 178,
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17732,
        17772
      ],
      "op": "EQ",
      "path": "18"
    },
    "3802": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17724,
        17783
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF0E"
    },
    "3805": {
      "branch": 178,
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17724,
        17783
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3806": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17724,
        17783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3808": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17724,
        17783
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3809": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3815": {
      "op": "SHL"
    },
    "3816": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17724,
        17783
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3817": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17724,
        17783
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3818": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3820": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17724,
        17783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3822": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17724,
        17783
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3823": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17724,
        17783
      ],
      "op": "ADD",
      "path": "18"
    },
    "3824": {
      "op": "MSTORE"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3829": {
      "op": "DUP3"
    },
    "3830": {
      "op": "ADD"
    },
    "3831": {
      "op": "MSTORE"
    },
    "3832": {
      "op": "PUSH6",
      "value": "0x10B7BBB732B9"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "3841": {
      "op": "SHL"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3844": {
      "op": "DUP3"
    },
    "3845": {
      "op": "ADD"
    },
    "3846": {
      "op": "MSTORE"
    },
    "3847": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3849": {
      "op": "ADD"
    },
    "3850": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17724,
        17783
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "3853": {
      "op": "JUMP"
    },
    "3854": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17724,
        17783
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3855": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17793,
        17799
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 22,
      "value": "0xF"
    },
    "3857": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17793,
        17818
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3858": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17793,
        17818
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3865": {
      "op": "SHL"
    },
    "3866": {
      "op": "SUB"
    },
    "3867": {
      "op": "NOT"
    },
    "3868": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17793,
        17818
      ],
      "op": "AND",
      "path": "18"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3875": {
      "op": "SHL"
    },
    "3876": {
      "op": "SUB"
    },
    "3877": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17793,
        17818
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3878": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17793,
        17818
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3879": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17793,
        17818
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3880": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17793,
        17818
      ],
      "op": "AND",
      "path": "18"
    },
    "3881": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17793,
        17818
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3882": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17793,
        17818
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3883": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17793,
        17818
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3884": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17793,
        17818
      ],
      "op": "OR",
      "path": "18"
    },
    "3885": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17793,
        17818
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3886": {
      "fn": "HouseOfPanda.updateStaker",
      "offset": [
        17793,
        17818
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3887": {
      "fn": "HouseOfPanda.updateStaker",
      "jump": "o",
      "offset": [
        17626,
        17825
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3888": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3895": {
      "op": "SHL"
    },
    "3896": {
      "op": "SUB"
    },
    "3897": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 23
    },
    "3898": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "AND",
      "path": "2"
    },
    "3899": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3900": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "EQ",
      "path": "2"
    },
    "3901": {
      "branch": 228,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3902": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4422
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF4C"
    },
    "3905": {
      "branch": 228,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4422
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3906": {
      "op": "POP"
    },
    "3907": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4386,
        4422
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF4C"
    },
    "3910": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4403,
        4407
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3911": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3912": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2254,
        2705
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x259B"
    },
    "3915": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "jump": "i",
      "offset": [
        2254,
        2705
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3916": {
      "branch": 229,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4386,
        4422
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3917": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFB3"
    },
    "3920": {
      "branch": 229,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3921": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3923": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3924": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3928": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3930": {
      "op": "SHL"
    },
    "3931": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3932": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3935": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3937": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3938": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "ADD",
      "path": "2"
    },
    "3939": {
      "op": "MSTORE"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3942": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3944": {
      "op": "DUP3"
    },
    "3945": {
      "op": "ADD"
    },
    "3946": {
      "op": "MSTORE"
    },
    "3947": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
    },
    "3980": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3982": {
      "op": "DUP3"
    },
    "3983": {
      "op": "ADD"
    },
    "3984": {
      "op": "MSTORE"
    },
    "3985": {
      "op": "PUSH18",
      "value": "0x1BDDDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "4006": {
      "op": "SHL"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4009": {
      "op": "DUP3"
    },
    "4010": {
      "op": "ADD"
    },
    "4011": {
      "op": "MSTORE"
    },
    "4012": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4014": {
      "op": "ADD"
    },
    "4015": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82F"
    },
    "4018": {
      "op": "JUMP"
    },
    "4019": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4020": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4508,
        4560
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 24,
      "value": "0x945"
    },
    "4023": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4531,
        4535
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4024": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4537,
        4539
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4025": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4541,
        4544
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4026": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4546,
        4553
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4027": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4555,
        4559
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4028": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4508,
        4530
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A16"
    },
    "4031": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4508,
        4560
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4032": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        1944,
        2127
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4033": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4035": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4042": {
      "op": "SHL"
    },
    "4043": {
      "op": "SUB"
    },
    "4044": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4045": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4046": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4047": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFEA"
    },
    "4050": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4051": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4053": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4054": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4060": {
      "op": "SHL"
    },
    "4061": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4062": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4063": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4065": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4066": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82F"
    },
    "4069": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4070": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DDE"
    },
    "4073": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4074": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4075": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2054,
        2073
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 25,
      "value": "0x0"
    },
    "4077": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2054,
        2073
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4078": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2054,
        2073
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4079": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2054,
        2073
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4080": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2054,
        2063
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "4082": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2054,
        2073
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4084": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2054,
        2073
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4085": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2054,
        2073
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4087": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2054,
        2073
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4088": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2054,
        2073
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4089": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2054,
        2083
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1002"
    },
    "4092": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2076,
        2083
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4093": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2054,
        2073
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4094": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2054,
        2083
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4F93"
    },
    "4097": {
      "fn": "ERC1155Tradable.setCustomURI",
      "jump": "i",
      "offset": [
        2054,
        2083
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4098": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2054,
        2083
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4099": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2054,
        2083
      ],
      "op": "POP",
      "path": "16"
    },
    "4100": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2111,
        2119
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 26
    },
    "4101": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2098,
        2120
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x6BB7FF708619BA0610CBA295A58592E0451DEE2622938C8755667688DAF3529B"
    },
    "4134": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2102,
        2109
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4135": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2098,
        2120
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4137": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2098,
        2120
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4138": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2098,
        2120
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1033"
    },
    "4141": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2098,
        2120
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4142": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2098,
        2120
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4143": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2098,
        2120
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459A"
    },
    "4146": {
      "fn": "ERC1155Tradable.setCustomURI",
      "jump": "i",
      "offset": [
        2098,
        2120
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4147": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2098,
        2120
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4148": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2098,
        2120
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4150": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2098,
        2120
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4151": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2098,
        2120
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4152": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2098,
        2120
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4153": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2098,
        2120
      ],
      "op": "SUB",
      "path": "16"
    },
    "4154": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2098,
        2120
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4155": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        2098,
        2120
      ],
      "op": "LOG2",
      "path": "16"
    },
    "4156": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        1944,
        2127
      ],
      "op": "POP",
      "path": "16"
    },
    "4157": {
      "fn": "ERC1155Tradable.setCustomURI",
      "offset": [
        1944,
        2127
      ],
      "op": "POP",
      "path": "16"
    },
    "4158": {
      "fn": "ERC1155Tradable.setCustomURI",
      "jump": "o",
      "offset": [
        1944,
        2127
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4159": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        16963,
        17166
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4160": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        17103,
        17107
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4162": {
      "offset": [
        430,
        442
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1049"
    },
    "4165": {
      "offset": [
        430,
        440
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2C01"
    },
    "4168": {
      "jump": "i",
      "offset": [
        430,
        442
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4169": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        430,
        442
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4170": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4172": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xD"
    },
    "4174": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4175": {
      "offset": [
        2259,
        2278
      ],
      "op": "SUB",
      "path": "1"
    },
    "4176": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x106B"
    },
    "4179": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4180": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4182": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4183": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4187": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4189": {
      "op": "SHL"
    },
    "4190": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4191": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4192": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4194": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "1"
    },
    "4195": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x82F"
    },
    "4198": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        2251,
        2314
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4199": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5052"
    },
    "4202": {
      "fn": "HouseOfPanda.adminBurn",
      "jump": "i",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4203": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4204": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4206": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xD"
    },
    "4208": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4209": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        17126,
        17159
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 27,
      "value": "0x107B"
    },
    "4212": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        17140,
        17149
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4213": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        17151,
        17154
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4214": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        17156,
        17158
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4215": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        17126,
        17139
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C44"
    },
    "4218": {
      "fn": "HouseOfPanda.adminBurn",
      "jump": "i",
      "offset": [
        17126,
        17159
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4219": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        17126,
        17159
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4220": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4222": {
      "offset": [
        2562,
        2569
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xD"
    },
    "4224": {
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4225": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        17119,
        17159
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "4226": {
      "fn": "HouseOfPanda.adminBurn",
      "offset": [
        16963,
        17166
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "4227": {
      "op": "POP"
    },
    "4228": {
      "op": "POP"
    },
    "4229": {
      "op": "POP"
    },
    "4230": {
      "op": "POP"
    },
    "4231": {
      "fn": "HouseOfPanda.adminBurn",
      "jump": "o",
      "offset": [
        16963,
        17166
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4232": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4233": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2645,
        2661
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4235": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2704,
        2707
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 28
    },
    "4236": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2704,
        2714
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4237": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2685,
        2693
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4238": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2685,
        2700
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4239": {
      "branch": 230,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2685,
        2714
      ],
      "op": "EQ",
      "path": "2"
    },
    "4240": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10ED"
    },
    "4243": {
      "branch": 230,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4244": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4246": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4247": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4253": {
      "op": "SHL"
    },
    "4254": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4255": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4258": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4260": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4261": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "ADD",
      "path": "2"
    },
    "4262": {
      "op": "MSTORE"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4267": {
      "op": "DUP3"
    },
    "4268": {
      "op": "ADD"
    },
    "4269": {
      "op": "MSTORE"
    },
    "4270": {
      "op": "PUSH32",
      "value": "0x455243313135353A206163636F756E747320616E6420696473206C656E677468"
    },
    "4303": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4305": {
      "op": "DUP3"
    },
    "4306": {
      "op": "ADD"
    },
    "4307": {
      "op": "MSTORE"
    },
    "4308": {
      "op": "PUSH9",
      "value": "0x40DAD2E6DAC2E8C6D"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "4320": {
      "op": "SHL"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4323": {
      "op": "DUP3"
    },
    "4324": {
      "op": "ADD"
    },
    "4325": {
      "op": "MSTORE"
    },
    "4326": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4328": {
      "op": "ADD"
    },
    "4329": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82F"
    },
    "4332": {
      "op": "JUMP"
    },
    "4333": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4334": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2771,
        2801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4336": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2818,
        2826
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4337": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2818,
        2833
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4344": {
      "op": "SHL"
    },
    "4345": {
      "op": "SUB"
    },
    "4346": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4347": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "GT",
      "path": "2"
    },
    "4348": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4349": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1108"
    },
    "4352": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4353": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1108"
    },
    "4356": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4461"
    },
    "4359": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4360": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4361": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4363": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4364": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4365": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4366": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4367": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4368": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4369": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4371": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MUL",
      "path": "2"
    },
    "4372": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4374": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "2"
    },
    "4375": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4376": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "2"
    },
    "4377": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4379": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4380": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4381": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4382": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1131"
    },
    "4385": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4386": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4387": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4389": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "2"
    },
    "4390": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4392": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4393": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MUL",
      "path": "2"
    },
    "4394": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4395": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "4396": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4397": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "4398": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "2"
    },
    "4399": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4400": {
      "op": "POP"
    },
    "4401": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4402": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "POP",
      "path": "2"
    },
    "4403": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2771,
        2834
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4404": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2771,
        2834
      ],
      "op": "POP",
      "path": "2"
    },
    "4405": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2850,
        2859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4407": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4408": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2869,
        2877
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4409": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2869,
        2884
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4410": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2866
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4411": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2884
      ],
      "op": "LT",
      "path": "2"
    },
    "4412": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4413": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11A9"
    },
    "4416": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4417": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2924,
        2954
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 29,
      "value": "0x117C"
    },
    "4420": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2942
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4421": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2943,
        2944
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4422": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4423": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4424": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4425": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "LT",
      "path": "2"
    },
    "4426": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1155"
    },
    "4429": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4430": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1155"
    },
    "4433": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5089"
    },
    "4436": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2934,
        2945
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4437": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4438": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4440": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "MUL",
      "path": "2"
    },
    "4441": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4443": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "ADD",
      "path": "2"
    },
    "4444": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "ADD",
      "path": "2"
    },
    "4445": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4446": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4447": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2951,
        2952
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4448": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4449": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4450": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4451": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "LT",
      "path": "2"
    },
    "4452": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x116F"
    },
    "4455": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4456": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x116F"
    },
    "4459": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5089"
    },
    "4462": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2947,
        2953
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4463": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4464": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4466": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "MUL",
      "path": "2"
    },
    "4467": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4469": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "ADD",
      "path": "2"
    },
    "4470": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "ADD",
      "path": "2"
    },
    "4471": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4472": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2924,
        2933
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C7"
    },
    "4475": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2924,
        2954
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4476": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2924,
        2954
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4477": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2918
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4478": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2919,
        2920
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4479": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4480": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4481": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4482": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "LT",
      "path": "2"
    },
    "4483": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x118E"
    },
    "4486": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4487": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x118E"
    },
    "4490": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5089"
    },
    "4493": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2905,
        2921
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4494": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4495": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4497": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4498": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4499": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "MUL",
      "path": "2"
    },
    "4500": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4501": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4502": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4503": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "ADD",
      "path": "2"
    },
    "4504": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "ADD",
      "path": "2"
    },
    "4505": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2954
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4506": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 30,
      "value": "0x11A2"
    },
    "4509": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4510": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x50B5"
    },
    "4513": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2886,
        2889
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4514": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4515": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4516": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "POP",
      "path": "2"
    },
    "4517": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1137"
    },
    "4520": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4521": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4522": {
      "op": "POP"
    },
    "4523": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2982,
        2995
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 31
    },
    "4524": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4525": {
      "op": "POP"
    },
    "4526": {
      "op": "POP"
    },
    "4527": {
      "op": "POP"
    },
    "4528": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "o",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4529": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10057,
        11541
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4530": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10182,
        10186
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4532": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4534": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xD"
    },
    "4536": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4537": {
      "offset": [
        2259,
        2278
      ],
      "op": "SUB",
      "path": "1"
    },
    "4538": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11D5"
    },
    "4541": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4542": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4544": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4545": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4551": {
      "op": "SHL"
    },
    "4552": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4553": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4554": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4556": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "1"
    },
    "4557": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x82F"
    },
    "4560": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        2251,
        2314
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4561": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5052"
    },
    "4564": {
      "fn": "HouseOfPanda.mint",
      "jump": "i",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4565": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4566": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4568": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xD"
    },
    "4570": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4571": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10207,
        10213
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 32,
      "value": "0x11"
    },
    "4573": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10207,
        10213
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4574": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10207,
        10213
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "4576": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10207,
        10213
      ],
      "op": "AND",
      "path": "18"
    },
    "4577": {
      "branch": 179,
      "fn": "HouseOfPanda.mint",
      "offset": [
        10206,
        10213
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4578": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10198,
        10224
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1216"
    },
    "4581": {
      "branch": 179,
      "fn": "HouseOfPanda.mint",
      "offset": [
        10198,
        10224
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4582": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10198,
        10224
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4584": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10198,
        10224
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4585": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4591": {
      "op": "SHL"
    },
    "4592": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10198,
        10224
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4593": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10198,
        10224
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4596": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10198,
        10224
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4598": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10198,
        10224
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4599": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10198,
        10224
      ],
      "op": "ADD",
      "path": "18"
    },
    "4600": {
      "op": "MSTORE"
    },
    "4601": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "4603": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4605": {
      "op": "DUP3"
    },
    "4606": {
      "op": "ADD"
    },
    "4607": {
      "op": "MSTORE"
    },
    "4608": {
      "op": "PUSH6",
      "value": "0x1C185D5CD959"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "4617": {
      "op": "SHL"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4620": {
      "op": "DUP3"
    },
    "4621": {
      "op": "ADD"
    },
    "4622": {
      "op": "MSTORE"
    },
    "4623": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4625": {
      "op": "ADD"
    },
    "4626": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10198,
        10224
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "4629": {
      "op": "JUMP"
    },
    "4630": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10198,
        10224
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4631": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10263,
        10283
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "4636": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10263,
        10283
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4637": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10263,
        10283
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4638": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10263,
        10283
      ],
      "op": "AND",
      "path": "18"
    },
    "4639": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10260
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4641": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10263,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4642": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10263,
        10283
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4643": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10263,
        10283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4644": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10263,
        10272
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "4646": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10263,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4648": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10263,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4649": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10263,
        10283
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4650": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10263,
        10283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4651": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10263,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4653": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10263,
        10283
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4654": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10263,
        10283
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4655": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10263,
        10283
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "4656": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4657": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4658": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A0"
    },
    "4661": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4662": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4663": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4664": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4665": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4666": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4667": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4668": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4669": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "4670": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "AND",
      "path": "18"
    },
    "4671": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4672": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4673": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4675": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4676": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4677": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4678": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4679": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10260
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "4680": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10260
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "4681": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4682": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "4683": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10263,
        10283
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4684": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10263,
        10283
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4685": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4686": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4687": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4688": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1258"
    },
    "4691": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4692": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4E13"
    },
    "4695": {
      "fn": "HouseOfPanda.mint",
      "jump": "i",
      "offset": [
        10234,
        10283
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4696": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4697": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4698": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "4700": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4701": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4703": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4704": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4705": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DIV",
      "path": "18"
    },
    "4706": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MUL",
      "path": "18"
    },
    "4707": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4709": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4710": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4712": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4713": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4714": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4715": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4716": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4718": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4719": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4720": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4721": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4722": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4723": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4724": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4725": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4726": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4728": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4729": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4730": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4731": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4732": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1284"
    },
    "4735": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4736": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4E13"
    },
    "4739": {
      "fn": "HouseOfPanda.mint",
      "jump": "i",
      "offset": [
        10234,
        10283
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4740": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4741": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4742": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4743": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x12D1"
    },
    "4746": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4747": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4748": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "4750": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "LT",
      "path": "18"
    },
    "4751": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x12A6"
    },
    "4754": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4755": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "4758": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4759": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4760": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4761": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DIV",
      "path": "18"
    },
    "4762": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MUL",
      "path": "18"
    },
    "4763": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4764": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4765": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4766": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4768": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4769": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4770": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x12D1"
    },
    "4773": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4774": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4775": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4776": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4777": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4778": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4779": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4781": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4782": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4784": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4786": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "4787": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4788": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4789": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4790": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4791": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4792": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4793": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4794": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4796": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4797": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4798": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4800": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4801": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4802": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4803": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "GT",
      "path": "18"
    },
    "4804": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x12B4"
    },
    "4807": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4808": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4809": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4810": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SUB",
      "path": "18"
    },
    "4811": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "4813": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "AND",
      "path": "18"
    },
    "4814": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4815": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4816": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4817": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4818": {
      "op": "POP"
    },
    "4819": {
      "op": "POP"
    },
    "4820": {
      "op": "POP"
    },
    "4821": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4822": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4823": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4824": {
      "op": "POP"
    },
    "4825": {
      "op": "POP"
    },
    "4826": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "4828": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4829": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4830": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4835": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4837": {
      "op": "SHL"
    },
    "4838": {
      "op": "SUB"
    },
    "4839": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4840": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "AND",
      "path": "18"
    },
    "4841": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4843": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4844": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4845": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4850": {
      "op": "SHL"
    },
    "4851": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4852": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DIV",
      "path": "18"
    },
    "4853": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "4856": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4857": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4858": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "AND",
      "path": "18"
    },
    "4859": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4861": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4862": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4863": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4864": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "4866": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4867": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4868": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4869": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "4871": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4872": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4873": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4874": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4876": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4877": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4878": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4879": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "4881": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4882": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "AND",
      "path": "18"
    },
    "4883": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4884": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4885": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "4887": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4888": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4889": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4890": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "4893": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4894": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4895": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DIV",
      "path": "18"
    },
    "4896": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF8"
    },
    "4898": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SHL",
      "path": "18"
    },
    "4899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4903": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4905": {
      "op": "SHL"
    },
    "4906": {
      "op": "SUB"
    },
    "4907": {
      "op": "NOT"
    },
    "4908": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "AND",
      "path": "18"
    },
    "4909": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "4911": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4912": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4913": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4914": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH3",
      "path": "18",
      "value": "0x10000"
    },
    "4918": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4919": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DIV",
      "path": "18"
    },
    "4920": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4921": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4922": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "AND",
      "path": "18"
    },
    "4923": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC0"
    },
    "4925": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4926": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4927": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4928": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH5",
      "path": "18",
      "value": "0x100000000"
    },
    "4934": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4935": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DIV",
      "path": "18"
    },
    "4936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4942": {
      "op": "SHL"
    },
    "4943": {
      "op": "SUB"
    },
    "4944": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "AND",
      "path": "18"
    },
    "4945": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "4947": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4948": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4949": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4950": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "4952": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4953": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4954": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4955": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4956": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4957": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4958": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4959": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x6"
    },
    "4961": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4962": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4963": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4964": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x120"
    },
    "4967": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4968": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4969": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4970": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x7"
    },
    "4972": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4973": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4974": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4975": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4982": {
      "op": "SHL"
    },
    "4983": {
      "op": "SUB"
    },
    "4984": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4985": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4986": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "AND",
      "path": "18"
    },
    "4987": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x140"
    },
    "4990": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4991": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "4992": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4995": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4997": {
      "op": "SHL"
    },
    "4998": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4999": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5000": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DIV",
      "path": "18"
    },
    "5001": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "AND",
      "path": "18"
    },
    "5002": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x160"
    },
    "5005": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5006": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5007": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "ADD",
      "path": "18"
    },
    "5008": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5009": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5010": {
      "op": "POP"
    },
    "5011": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10293,
        10315
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 33,
      "value": "0x139B"
    },
    "5014": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10234,
        10283
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5015": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10293,
        10306
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3089"
    },
    "5018": {
      "fn": "HouseOfPanda.mint",
      "jump": "i",
      "offset": [
        10293,
        10315
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5019": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10293,
        10315
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5020": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10333,
        10347
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 34,
      "value": "0xC0"
    },
    "5022": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10333,
        10347
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5023": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10333,
        10347
      ],
      "op": "ADD",
      "path": "18"
    },
    "5024": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10333,
        10347
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5029": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "5031": {
      "op": "SHL"
    },
    "5032": {
      "op": "SUB"
    },
    "5033": {
      "op": "NOT"
    },
    "5034": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10333,
        10357
      ],
      "op": "AND",
      "path": "18"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5037": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "5039": {
      "op": "SHL"
    },
    "5040": {
      "branch": 180,
      "fn": "HouseOfPanda.mint",
      "offset": [
        10333,
        10357
      ],
      "op": "EQ",
      "path": "18"
    },
    "5041": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10325,
        10369
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13E6"
    },
    "5044": {
      "branch": 180,
      "fn": "HouseOfPanda.mint",
      "offset": [
        10325,
        10369
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5045": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10325,
        10369
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5047": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10325,
        10369
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5048": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5052": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5054": {
      "op": "SHL"
    },
    "5055": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10325,
        10369
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5056": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10325,
        10369
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5059": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10325,
        10369
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "5061": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10325,
        10369
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5062": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10325,
        10369
      ],
      "op": "ADD",
      "path": "18"
    },
    "5063": {
      "op": "MSTORE"
    },
    "5064": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "5066": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5068": {
      "op": "DUP3"
    },
    "5069": {
      "op": "ADD"
    },
    "5070": {
      "op": "MSTORE"
    },
    "5071": {
      "op": "PUSH7",
      "value": "0x21616374697665"
    },
    "5079": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "5081": {
      "op": "SHL"
    },
    "5082": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5084": {
      "op": "DUP3"
    },
    "5085": {
      "op": "ADD"
    },
    "5086": {
      "op": "MSTORE"
    },
    "5087": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5089": {
      "op": "ADD"
    },
    "5090": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10325,
        10369
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "5093": {
      "op": "JUMP"
    },
    "5094": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10325,
        10369
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5095": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10408,
        10423
      ],
      "op": "TIMESTAMP",
      "path": "18",
      "statement": 35
    },
    "5096": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10387,
        10394
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5097": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10387,
        10404
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x160"
    },
    "5100": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10387,
        10404
      ],
      "op": "ADD",
      "path": "18"
    },
    "5101": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10387,
        10404
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5106": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5108": {
      "op": "SHL"
    },
    "5109": {
      "op": "SUB"
    },
    "5110": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10387,
        10423
      ],
      "op": "AND",
      "path": "18"
    },
    "5111": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10387,
        10423
      ],
      "op": "GT",
      "path": "18"
    },
    "5112": {
      "branch": 181,
      "fn": "HouseOfPanda.mint",
      "offset": [
        10387,
        10423
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5113": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10379,
        10434
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x142D"
    },
    "5116": {
      "branch": 181,
      "fn": "HouseOfPanda.mint",
      "offset": [
        10379,
        10434
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5117": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10379,
        10434
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5119": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10379,
        10434
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5120": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5124": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5126": {
      "op": "SHL"
    },
    "5127": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10379,
        10434
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5128": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10379,
        10434
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5129": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5131": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10379,
        10434
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "5133": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10379,
        10434
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5134": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10379,
        10434
      ],
      "op": "ADD",
      "path": "18"
    },
    "5135": {
      "op": "MSTORE"
    },
    "5136": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "5138": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5140": {
      "op": "DUP3"
    },
    "5141": {
      "op": "ADD"
    },
    "5142": {
      "op": "MSTORE"
    },
    "5143": {
      "op": "PUSH6",
      "value": "0x85CDD185C9D"
    },
    "5150": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "5152": {
      "op": "SHL"
    },
    "5153": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5155": {
      "op": "DUP3"
    },
    "5156": {
      "op": "ADD"
    },
    "5157": {
      "op": "MSTORE"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5160": {
      "op": "ADD"
    },
    "5161": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10379,
        10434
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "5164": {
      "op": "JUMP"
    },
    "5165": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10379,
        10434
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5166": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10470,
        10485
      ],
      "op": "TIMESTAMP",
      "path": "18",
      "statement": 36
    },
    "5167": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10452,
        10459
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5168": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10452,
        10467
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x180"
    },
    "5171": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10452,
        10467
      ],
      "op": "ADD",
      "path": "18"
    },
    "5172": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10452,
        10467
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5179": {
      "op": "SHL"
    },
    "5180": {
      "op": "SUB"
    },
    "5181": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10452,
        10485
      ],
      "op": "AND",
      "path": "18"
    },
    "5182": {
      "branch": 182,
      "fn": "HouseOfPanda.mint",
      "offset": [
        10452,
        10485
      ],
      "op": "GT",
      "path": "18"
    },
    "5183": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10444,
        10496
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1473"
    },
    "5186": {
      "branch": 182,
      "fn": "HouseOfPanda.mint",
      "offset": [
        10444,
        10496
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5187": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10444,
        10496
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5189": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10444,
        10496
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5190": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5194": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5196": {
      "op": "SHL"
    },
    "5197": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10444,
        10496
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5198": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10444,
        10496
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5201": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10444,
        10496
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "5203": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10444,
        10496
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5204": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10444,
        10496
      ],
      "op": "ADD",
      "path": "18"
    },
    "5205": {
      "op": "MSTORE"
    },
    "5206": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "5208": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5210": {
      "op": "DUP3"
    },
    "5211": {
      "op": "ADD"
    },
    "5212": {
      "op": "MSTORE"
    },
    "5213": {
      "op": "PUSH6",
      "value": "0x8595B991959"
    },
    "5220": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "5222": {
      "op": "SHL"
    },
    "5223": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5225": {
      "op": "DUP3"
    },
    "5226": {
      "op": "ADD"
    },
    "5227": {
      "op": "MSTORE"
    },
    "5228": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5230": {
      "op": "ADD"
    },
    "5231": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10444,
        10496
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "5234": {
      "op": "JUMP"
    },
    "5235": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10444,
        10496
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5236": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        888,
        893
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 37,
      "value": "0xC"
    },
    "5238": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        888,
        893
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "5239": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5240": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5241": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10507,
        10522
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5243": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10507,
        10522
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5250": {
      "op": "SHL"
    },
    "5251": {
      "op": "SUB"
    },
    "5252": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        888,
        893
      ],
      "op": "AND",
      "path": "17"
    },
    "5253": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        877,
        893
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5254": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        877,
        893
      ],
      "op": "EQ",
      "path": "17"
    },
    "5255": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10567,
        10605
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5256": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10567,
        10605
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1495"
    },
    "5259": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10567,
        10605
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5260": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10567,
        10605
      ],
      "op": "POP",
      "path": "18"
    },
    "5261": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10588,
        10605
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1495"
    },
    "5264": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10597,
        10604
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5265": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10588,
        10596
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x30AD"
    },
    "5268": {
      "fn": "HouseOfPanda.mint",
      "jump": "i",
      "offset": [
        10588,
        10605
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5269": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10588,
        10605
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5270": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10548,
        10605
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5271": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10548,
        10605
      ],
      "op": "POP",
      "path": "18"
    },
    "5272": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10620,
        10627
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5273": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10620,
        10642
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "5275": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10620,
        10642
      ],
      "op": "ADD",
      "path": "18"
    },
    "5276": {
      "branch": 183,
      "fn": "HouseOfPanda.mint",
      "offset": [
        10620,
        10642
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5277": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10616,
        10891
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5278": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10616,
        10891
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14E2"
    },
    "5281": {
      "branch": 183,
      "fn": "HouseOfPanda.mint",
      "offset": [
        10616,
        10891
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5282": {
      "branch": 184,
      "fn": "HouseOfPanda.mint",
      "offset": [
        10666,
        10677
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 38
    },
    "5283": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10658,
        10694
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14DD"
    },
    "5286": {
      "branch": 184,
      "fn": "HouseOfPanda.mint",
      "offset": [
        10658,
        10694
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5287": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10658,
        10694
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5289": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10658,
        10694
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5290": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5296": {
      "op": "SHL"
    },
    "5297": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10658,
        10694
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5298": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10658,
        10694
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5301": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10658,
        10694
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "5303": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10658,
        10694
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5304": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10658,
        10694
      ],
      "op": "ADD",
      "path": "18"
    },
    "5305": {
      "op": "MSTORE"
    },
    "5306": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5310": {
      "op": "DUP3"
    },
    "5311": {
      "op": "ADD"
    },
    "5312": {
      "op": "MSTORE"
    },
    "5313": {
      "op": "PUSH12",
      "value": "0x1D5B985D5D1A1BDC9A5E9959"
    },
    "5326": {
      "op": "PUSH1",
      "value": "0xA2"
    },
    "5328": {
      "op": "SHL"
    },
    "5329": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5331": {
      "op": "DUP3"
    },
    "5332": {
      "op": "ADD"
    },
    "5333": {
      "op": "MSTORE"
    },
    "5334": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5336": {
      "op": "ADD"
    },
    "5337": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10658,
        10694
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "5340": {
      "op": "JUMP"
    },
    "5341": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10658,
        10694
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5342": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10616,
        10891
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x15A7"
    },
    "5345": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10616,
        10891
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5346": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10616,
        10891
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5347": {
      "branch": 185,
      "fn": "HouseOfPanda.mint",
      "offset": [
        10750,
        10761
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 39
    },
    "5348": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10750,
        10837
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5349": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10750,
        10837
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x156F"
    },
    "5352": {
      "branch": 185,
      "fn": "HouseOfPanda.mint",
      "offset": [
        10750,
        10837
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5353": {
      "op": "POP"
    },
    "5354": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10824,
        10837
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "5356": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10824,
        10837
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5357": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10824,
        10837
      ],
      "op": "ADD",
      "path": "18"
    },
    "5358": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10824,
        10837
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5359": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10818,
        10837
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14FE"
    },
    "5362": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10818,
        10837
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5363": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10818,
        10837
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "5368": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10818,
        10837
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5369": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10818,
        10837
      ],
      "op": "AND",
      "path": "18"
    },
    "5370": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10818,
        10837
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x50CE"
    },
    "5373": {
      "fn": "HouseOfPanda.mint",
      "jump": "i",
      "offset": [
        10818,
        10837
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5374": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10818,
        10837
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5375": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10795
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE"
    },
    "5377": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10795
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5378": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5380": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5381": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5386": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5388": {
      "op": "SHL"
    },
    "5389": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5390": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5397": {
      "op": "SHL"
    },
    "5398": {
      "op": "SUB"
    },
    "5399": {
      "op": "DUP6"
    },
    "5400": {
      "op": "DUP2"
    },
    "5401": {
      "op": "AND"
    },
    "5402": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "5404": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5405": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "ADD",
      "path": "18"
    },
    "5406": {
      "op": "MSTORE"
    },
    "5407": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10795
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5408": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10795
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5409": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10795
      ],
      "op": "AND",
      "path": "18"
    },
    "5410": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10795
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5411": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10805
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x70A08231"
    },
    "5416": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10805
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5417": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5419": {
      "op": "ADD"
    },
    "5420": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5422": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5424": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5425": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5426": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5427": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "SUB",
      "path": "18"
    },
    "5428": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5429": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "DUP7",
      "path": "18"
    },
    "5430": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "GAS",
      "path": "18"
    },
    "5431": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "5432": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5433": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5434": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5435": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1548"
    },
    "5438": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5439": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5440": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5442": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5443": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "5444": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5445": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5447": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "REVERT",
      "path": "18"
    },
    "5448": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5449": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "POP",
      "path": "18"
    },
    "5450": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "POP",
      "path": "18"
    },
    "5451": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "POP",
      "path": "18"
    },
    "5452": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "POP",
      "path": "18"
    },
    "5453": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5455": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5456": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5457": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "5459": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "NOT",
      "path": "18"
    },
    "5460": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "5462": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5463": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "ADD",
      "path": "18"
    },
    "5464": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "AND",
      "path": "18"
    },
    "5465": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5466": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "ADD",
      "path": "18"
    },
    "5467": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5468": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5470": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5471": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "POP",
      "path": "18"
    },
    "5472": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5473": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "ADD",
      "path": "18"
    },
    "5474": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5475": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x156C"
    },
    "5478": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5479": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5480": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x50E5"
    },
    "5483": {
      "fn": "HouseOfPanda.mint",
      "jump": "i",
      "offset": [
        10785,
        10814
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5484": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10814
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5485": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10837
      ],
      "op": "LT",
      "path": "18"
    },
    "5486": {
      "branch": 186,
      "fn": "HouseOfPanda.mint",
      "offset": [
        10785,
        10837
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5487": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10750,
        10837
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5488": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10725,
        10880
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x15A7"
    },
    "5491": {
      "branch": 186,
      "fn": "HouseOfPanda.mint",
      "offset": [
        10725,
        10880
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5492": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10725,
        10880
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5494": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10725,
        10880
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5495": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5499": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5501": {
      "op": "SHL"
    },
    "5502": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10725,
        10880
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5503": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10725,
        10880
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5506": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10725,
        10880
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "5508": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10725,
        10880
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5509": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10725,
        10880
      ],
      "op": "ADD",
      "path": "18"
    },
    "5510": {
      "op": "MSTORE"
    },
    "5511": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "5513": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5515": {
      "op": "DUP3"
    },
    "5516": {
      "op": "ADD"
    },
    "5517": {
      "op": "MSTORE"
    },
    "5518": {
      "op": "PUSH9",
      "value": "0x18985B185B98D9480F"
    },
    "5528": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "5530": {
      "op": "SHL"
    },
    "5531": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5533": {
      "op": "DUP3"
    },
    "5534": {
      "op": "ADD"
    },
    "5535": {
      "op": "MSTORE"
    },
    "5536": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5538": {
      "op": "ADD"
    },
    "5539": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10725,
        10880
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "5542": {
      "op": "JUMP"
    },
    "5543": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10725,
        10880
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5544": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10984,
        11005
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "5549": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10984,
        11005
      ],
      "op": "DUP8",
      "path": "18"
    },
    "5550": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10984,
        11005
      ],
      "op": "AND",
      "path": "18"
    },
    "5551": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10967,
        10981
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5553": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10984,
        11005
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5554": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10984,
        11005
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5555": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10984,
        11005
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5556": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10984,
        10994
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "5558": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10984,
        11005
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5560": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10984,
        11005
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5561": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10984,
        11005
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5563": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10984,
        11005
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5564": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10984,
        11005
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "5565": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10984,
        11005
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5566": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10984,
        11005
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "5569": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11019,
        11038
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5570": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11019,
        11038
      ],
      "op": "ADD",
      "path": "18"
    },
    "5571": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11019,
        11038
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5576": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5578": {
      "op": "SHL"
    },
    "5579": {
      "op": "SUB"
    },
    "5580": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10984,
        11005
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5581": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10984,
        11005
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5582": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10984,
        11005
      ],
      "op": "AND",
      "path": "18"
    },
    "5583": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10984,
        11005
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5584": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11019,
        11042
      ],
      "op": "AND",
      "path": "18"
    },
    "5585": {
      "branch": 187,
      "fn": "HouseOfPanda.mint",
      "offset": [
        11019,
        11042
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5586": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11015,
        11122
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1633"
    },
    "5589": {
      "branch": 187,
      "fn": "HouseOfPanda.mint",
      "offset": [
        11015,
        11122
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5590": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11082,
        11101
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 40,
      "value": "0x100"
    },
    "5593": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11082,
        11101
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5594": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11082,
        11101
      ],
      "op": "ADD",
      "path": "18"
    },
    "5595": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11082,
        11101
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5600": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5602": {
      "op": "SHL"
    },
    "5603": {
      "op": "SUB"
    },
    "5604": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11066,
        11101
      ],
      "op": "AND",
      "path": "18"
    },
    "5605": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11066,
        11078
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x15F4"
    },
    "5608": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11066,
        11078
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "5613": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11066,
        11078
      ],
      "op": "DUP10",
      "path": "18"
    },
    "5614": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11066,
        11078
      ],
      "op": "AND",
      "path": "18"
    },
    "5615": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11066,
        11072
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5616": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11066,
        11078
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x50FE"
    },
    "5619": {
      "fn": "HouseOfPanda.mint",
      "jump": "i",
      "offset": [
        11066,
        11078
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5620": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11066,
        11078
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5627": {
      "op": "SHL"
    },
    "5628": {
      "op": "SUB"
    },
    "5629": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11066,
        11101
      ],
      "op": "AND",
      "path": "18"
    },
    "5630": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11066,
        11101
      ],
      "op": "GT",
      "path": "18"
    },
    "5631": {
      "branch": 188,
      "fn": "HouseOfPanda.mint",
      "offset": [
        11066,
        11101
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5632": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11058,
        11111
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1633"
    },
    "5635": {
      "branch": 188,
      "fn": "HouseOfPanda.mint",
      "offset": [
        11058,
        11111
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5636": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11058,
        11111
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5638": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11058,
        11111
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5639": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5643": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5645": {
      "op": "SHL"
    },
    "5646": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11058,
        11111
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5647": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11058,
        11111
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5650": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11058,
        11111
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "5652": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11058,
        11111
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5653": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11058,
        11111
      ],
      "op": "ADD",
      "path": "18"
    },
    "5654": {
      "op": "MSTORE"
    },
    "5655": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5657": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5659": {
      "op": "DUP3"
    },
    "5660": {
      "op": "ADD"
    },
    "5661": {
      "op": "MSTORE"
    },
    "5662": {
      "op": "PUSH5",
      "value": "0x1B1A5B5A5D"
    },
    "5668": {
      "op": "PUSH1",
      "value": "0xDA"
    },
    "5670": {
      "op": "SHL"
    },
    "5671": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5673": {
      "op": "DUP3"
    },
    "5674": {
      "op": "ADD"
    },
    "5675": {
      "op": "MSTORE"
    },
    "5676": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5678": {
      "op": "ADD"
    },
    "5679": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11058,
        11111
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "5682": {
      "op": "JUMP"
    },
    "5683": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11058,
        11111
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5684": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "PUSH4",
      "path": "18",
      "statement": 41,
      "value": "0xFFFFFFFF"
    },
    "5689": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11153
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5690": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11153
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5691": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11153
      ],
      "op": "AND",
      "path": "18"
    },
    "5692": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11153
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5694": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11153
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5695": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11153
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5696": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11153
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5697": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11142
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "5699": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11153
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5701": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11153
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5702": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11153
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5704": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11153
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5705": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11153
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "5706": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5707": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5708": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5709": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5710": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "AND",
      "path": "18"
    },
    "5711": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5712": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11153
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5713": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11153
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5714": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11153
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5715": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1666"
    },
    "5718": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5719": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5720": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5725": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5727": {
      "op": "SHL"
    },
    "5728": {
      "op": "SUB"
    },
    "5729": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "AND",
      "path": "18"
    },
    "5730": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x50FE"
    },
    "5733": {
      "fn": "HouseOfPanda.mint",
      "jump": "i",
      "offset": [
        11132,
        11160
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5734": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5735": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5736": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "POP",
      "path": "18"
    },
    "5737": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "5740": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "EXP",
      "path": "18"
    },
    "5741": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5742": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5743": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5748": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5750": {
      "op": "SHL"
    },
    "5751": {
      "op": "SUB"
    },
    "5752": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "MUL",
      "path": "18"
    },
    "5753": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "NOT",
      "path": "18"
    },
    "5754": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "AND",
      "path": "18"
    },
    "5755": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5756": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5761": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5763": {
      "op": "SHL"
    },
    "5764": {
      "op": "SUB"
    },
    "5765": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "AND",
      "path": "18"
    },
    "5766": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "MUL",
      "path": "18"
    },
    "5767": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "OR",
      "path": "18"
    },
    "5768": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5769": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "5770": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11132,
        11160
      ],
      "op": "POP",
      "path": "18"
    },
    "5771": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11218,
        11225
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5772": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11218,
        11240
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "5774": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11218,
        11240
      ],
      "op": "ADD",
      "path": "18"
    },
    "5775": {
      "branch": 189,
      "fn": "HouseOfPanda.mint",
      "offset": [
        11218,
        11240
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5776": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11217,
        11240
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5777": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11217,
        11256
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5778": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11217,
        11256
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5779": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11217,
        11256
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x169A"
    },
    "5782": {
      "branch": 189,
      "fn": "HouseOfPanda.mint",
      "offset": [
        11217,
        11256
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5783": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11217,
        11256
      ],
      "op": "POP",
      "path": "18"
    },
    "5784": {
      "branch": 190,
      "fn": "HouseOfPanda.mint",
      "offset": [
        11245,
        11256
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5785": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11244,
        11256
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5786": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11217,
        11256
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5787": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11213,
        11419
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5788": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11213,
        11419
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16DD"
    },
    "5791": {
      "branch": 190,
      "fn": "HouseOfPanda.mint",
      "offset": [
        11213,
        11419
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5792": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11350,
        11356
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 42,
      "value": "0xF"
    },
    "5794": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11350,
        11356
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5795": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11381,
        11394
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "5797": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11381,
        11394
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5798": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11381,
        11394
      ],
      "op": "ADD",
      "path": "18"
    },
    "5799": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11381,
        11394
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5800": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11272,
        11408
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16DD"
    },
    "5803": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11272,
        11408
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5804": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11317,
        11324
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5805": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11317,
        11324
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5810": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5812": {
      "op": "SHL"
    },
    "5813": {
      "op": "SUB"
    },
    "5814": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11350,
        11356
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5815": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11350,
        11356
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5816": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11350,
        11356
      ],
      "op": "AND",
      "path": "18"
    },
    "5817": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11350,
        11356
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5818": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11375,
        11394
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16C9"
    },
    "5821": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11375,
        11394
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5822": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11375,
        11394
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "5827": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11375,
        11394
      ],
      "op": "DUP13",
      "path": "18"
    },
    "5828": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11375,
        11394
      ],
      "op": "AND",
      "path": "18"
    },
    "5829": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11375,
        11394
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x50CE"
    },
    "5832": {
      "fn": "HouseOfPanda.mint",
      "jump": "i",
      "offset": [
        11375,
        11394
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5833": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11375,
        11394
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5834": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11272,
        11282
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE"
    },
    "5836": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11272,
        11282
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5843": {
      "op": "SHL"
    },
    "5844": {
      "op": "SUB"
    },
    "5845": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11272,
        11282
      ],
      "op": "AND",
      "path": "18"
    },
    "5846": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11272,
        11282
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5847": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11272,
        11408
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5848": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11272,
        11408
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5849": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11272,
        11299
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x30DB"
    },
    "5852": {
      "fn": "HouseOfPanda.mint",
      "jump": "i",
      "offset": [
        11272,
        11408
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5853": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11272,
        11408
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5854": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11429,
        11458
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 43,
      "value": "0x1704"
    },
    "5857": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11435,
        11437
      ],
      "op": "DUP7",
      "path": "18"
    },
    "5858": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11439,
        11448
      ],
      "op": "DUP10",
      "path": "18"
    },
    "5859": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11429,
        11458
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "5864": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11429,
        11458
      ],
      "op": "AND",
      "path": "18"
    },
    "5865": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11450,
        11453
      ],
      "op": "DUP10",
      "path": "18"
    },
    "5866": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11429,
        11458
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "5871": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11429,
        11458
      ],
      "op": "AND",
      "path": "18"
    },
    "5872": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11429,
        11458
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5874": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11429,
        11458
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5875": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11429,
        11458
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5876": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11429,
        11458
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5878": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11429,
        11458
      ],
      "op": "ADD",
      "path": "18"
    },
    "5879": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11429,
        11458
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5881": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11429,
        11458
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5882": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11429,
        11458
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5883": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11429,
        11458
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5885": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11429,
        11458
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5886": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11429,
        11458
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5887": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11429,
        11458
      ],
      "op": "POP",
      "path": "18"
    },
    "5888": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11429,
        11434
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x313B"
    },
    "5891": {
      "fn": "HouseOfPanda.mint",
      "jump": "i",
      "offset": [
        11429,
        11458
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5892": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11429,
        11458
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5893": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11509,
        11511
      ],
      "op": "DUP6",
      "path": "18",
      "statement": 44
    },
    "5894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5900": {
      "op": "SHL"
    },
    "5901": {
      "op": "SUB"
    },
    "5902": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11474,
        11512
      ],
      "op": "AND",
      "path": "18"
    },
    "5903": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11490,
        11493
      ],
      "op": "DUP8",
      "path": "18"
    },
    "5904": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11474,
        11512
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "5909": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11474,
        11512
      ],
      "op": "AND",
      "path": "18"
    },
    "5910": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11479,
        11488
      ],
      "op": "DUP10",
      "path": "18"
    },
    "5911": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11474,
        11512
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "5916": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11474,
        11512
      ],
      "op": "AND",
      "path": "18"
    },
    "5917": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11474,
        11512
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xDA1373DCDE55ACEB480442EE22608E2601F3639E5D1E81E6F9DCD8D231607899"
    },
    "5950": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11495,
        11507
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1744"
    },
    "5953": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5954": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5955": {
      "fn": "Context._msgSender",
      "offset": [
        587,
        683
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5956": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11495,
        11507
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5957": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11474,
        11512
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5959": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11474,
        11512
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5966": {
      "op": "SHL"
    },
    "5967": {
      "op": "SUB"
    },
    "5968": {
      "op": "SWAP1"
    },
    "5969": {
      "op": "SWAP2"
    },
    "5970": {
      "op": "AND"
    },
    "5971": {
      "op": "DUP2"
    },
    "5972": {
      "op": "MSTORE"
    },
    "5973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5975": {
      "op": "ADD"
    },
    "5976": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11474,
        11512
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5978": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11474,
        11512
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5979": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11474,
        11512
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5980": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11474,
        11512
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5981": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11474,
        11512
      ],
      "op": "SUB",
      "path": "18"
    },
    "5982": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11474,
        11512
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5983": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11474,
        11512
      ],
      "op": "LOG4",
      "path": "18"
    },
    "5984": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11530,
        11534
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 45,
      "value": "0x1"
    },
    "5986": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11523,
        11534
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "5987": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11523,
        11534
      ],
      "op": "POP",
      "path": "18"
    },
    "5988": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11523,
        11534
      ],
      "op": "POP",
      "path": "18"
    },
    "5989": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11523,
        11534
      ],
      "op": "POP",
      "path": "18"
    },
    "5990": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11523,
        11534
      ],
      "op": "POP",
      "path": "18"
    },
    "5991": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        11523,
        11534
      ],
      "op": "POP",
      "path": "18"
    },
    "5992": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5994": {
      "offset": [
        2562,
        2569
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xD"
    },
    "5996": {
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5997": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10057,
        11541
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5998": {
      "fn": "HouseOfPanda.mint",
      "offset": [
        10057,
        11541
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5999": {
      "op": "POP"
    },
    "6000": {
      "op": "POP"
    },
    "6001": {
      "op": "POP"
    },
    "6002": {
      "fn": "HouseOfPanda.mint",
      "jump": "o",
      "offset": [
        10057,
        11541
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6003": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11692,
        13044
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6004": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11873,
        11877
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6006": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "6008": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xD"
    },
    "6010": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6011": {
      "offset": [
        2259,
        2278
      ],
      "op": "SUB",
      "path": "1"
    },
    "6012": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1797"
    },
    "6015": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6016": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6018": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6025": {
      "op": "SHL"
    },
    "6026": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6027": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6028": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6030": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "1"
    },
    "6031": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x82F"
    },
    "6034": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        2251,
        2314
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6035": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5052"
    },
    "6038": {
      "fn": "HouseOfPanda.authorizedMint",
      "jump": "i",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6039": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6040": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "6042": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xD"
    },
    "6044": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6045": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11906,
        11934
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 46,
      "value": "0x17A7"
    },
    "6048": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11932,
        11934
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3C"
    },
    "6050": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11913,
        11928
      ],
      "op": "TIMESTAMP",
      "path": "18"
    },
    "6051": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11906,
        11934
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x513B"
    },
    "6054": {
      "fn": "HouseOfPanda.authorizedMint",
      "jump": "i",
      "offset": [
        11906,
        11934
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6055": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11906,
        11934
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6060": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6062": {
      "op": "SHL"
    },
    "6063": {
      "op": "SUB"
    },
    "6064": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11897,
        11934
      ],
      "op": "AND",
      "path": "18"
    },
    "6065": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11897,
        11902
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6070": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6072": {
      "op": "SHL"
    },
    "6073": {
      "op": "SUB"
    },
    "6074": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11897,
        11934
      ],
      "op": "AND",
      "path": "18"
    },
    "6075": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11897,
        11934
      ],
      "op": "LT",
      "path": "18"
    },
    "6076": {
      "branch": 191,
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11897,
        11934
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6077": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11889,
        11946
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x17F2"
    },
    "6080": {
      "branch": 191,
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11889,
        11946
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6081": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11889,
        11946
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6083": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11889,
        11946
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6084": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6088": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6090": {
      "op": "SHL"
    },
    "6091": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11889,
        11946
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6092": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11889,
        11946
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6093": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6095": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11889,
        11946
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "6097": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11889,
        11946
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6098": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11889,
        11946
      ],
      "op": "ADD",
      "path": "18"
    },
    "6099": {
      "op": "MSTORE"
    },
    "6100": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "6102": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6104": {
      "op": "DUP3"
    },
    "6105": {
      "op": "ADD"
    },
    "6106": {
      "op": "MSTORE"
    },
    "6107": {
      "op": "PUSH7",
      "value": "0x78206E6F6E6365"
    },
    "6115": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "6117": {
      "op": "SHL"
    },
    "6118": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6120": {
      "op": "DUP3"
    },
    "6121": {
      "op": "ADD"
    },
    "6122": {
      "op": "MSTORE"
    },
    "6123": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6125": {
      "op": "ADD"
    },
    "6126": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11889,
        11946
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "6129": {
      "op": "JUMP"
    },
    "6130": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11889,
        11946
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6131": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11956,
        11973
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 47,
      "value": "0x17FB"
    },
    "6134": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11970,
        11972
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6135": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11956,
        11969
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x324B"
    },
    "6138": {
      "fn": "HouseOfPanda.authorizedMint",
      "jump": "i",
      "offset": [
        11956,
        11973
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6139": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11956,
        11973
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6140": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12040,
        12060
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "6145": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12040,
        12060
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6146": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12040,
        12060
      ],
      "op": "DUP8",
      "path": "18"
    },
    "6147": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12040,
        12060
      ],
      "op": "AND",
      "path": "18"
    },
    "6148": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12037
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6150": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12040,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6151": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12040,
        12060
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6152": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12040,
        12060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6153": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12040,
        12049
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "6155": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12040,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6157": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12040,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6158": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12040,
        12060
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6159": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12040,
        12060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6160": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12040,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6162": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12040,
        12060
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6163": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12040,
        12060
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6164": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12040,
        12060
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6165": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6166": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6167": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A0"
    },
    "6170": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6171": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6172": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6173": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "6174": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6175": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6176": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6177": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6178": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "6179": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "AND",
      "path": "18"
    },
    "6180": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6181": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6182": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "6184": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6185": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6186": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6187": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6188": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12037
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "6189": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12037
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "6190": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6191": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "6192": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12040,
        12060
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6193": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12040,
        12060
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "6194": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6195": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6196": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6197": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x183D"
    },
    "6200": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6201": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4E13"
    },
    "6204": {
      "fn": "HouseOfPanda.authorizedMint",
      "jump": "i",
      "offset": [
        12011,
        12060
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6205": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6206": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6207": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "6209": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6210": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6212": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6213": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6214": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DIV",
      "path": "18"
    },
    "6215": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MUL",
      "path": "18"
    },
    "6216": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6218": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6219": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6221": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6222": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6223": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6224": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6225": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6227": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6228": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6229": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "6230": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6231": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6232": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6233": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6234": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6235": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6237": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6238": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6239": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6240": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6241": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1869"
    },
    "6244": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6245": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4E13"
    },
    "6248": {
      "fn": "HouseOfPanda.authorizedMint",
      "jump": "i",
      "offset": [
        12011,
        12060
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6249": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6250": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6251": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6252": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18B6"
    },
    "6255": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6256": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6257": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "6259": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "LT",
      "path": "18"
    },
    "6260": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x188B"
    },
    "6263": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6264": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "6267": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6268": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6269": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6270": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DIV",
      "path": "18"
    },
    "6271": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MUL",
      "path": "18"
    },
    "6272": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6273": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6274": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6275": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6277": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6278": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6279": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18B6"
    },
    "6282": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6283": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6284": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6285": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6286": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6287": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6288": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6290": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6291": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6293": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6295": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6296": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6297": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6298": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6299": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6300": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6301": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6302": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6303": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "6305": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6306": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6307": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6309": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6310": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6311": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6312": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "GT",
      "path": "18"
    },
    "6313": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1899"
    },
    "6316": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6317": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6318": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6319": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SUB",
      "path": "18"
    },
    "6320": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "6322": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "AND",
      "path": "18"
    },
    "6323": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6324": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6325": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6326": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6327": {
      "op": "POP"
    },
    "6328": {
      "op": "POP"
    },
    "6329": {
      "op": "POP"
    },
    "6330": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6331": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6332": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6333": {
      "op": "POP"
    },
    "6334": {
      "op": "POP"
    },
    "6335": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "6337": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6338": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6339": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6346": {
      "op": "SHL"
    },
    "6347": {
      "op": "SUB"
    },
    "6348": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6349": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "AND",
      "path": "18"
    },
    "6350": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6352": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6353": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6354": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6359": {
      "op": "SHL"
    },
    "6360": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6361": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DIV",
      "path": "18"
    },
    "6362": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "6365": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6366": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6367": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "AND",
      "path": "18"
    },
    "6368": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6370": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6371": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6372": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6373": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "6375": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6376": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6377": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6378": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "6380": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6381": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6382": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6383": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "6385": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6386": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6387": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6388": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "6390": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6391": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "AND",
      "path": "18"
    },
    "6392": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6393": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6394": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "6396": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6397": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6398": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6399": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "6402": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6403": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6404": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DIV",
      "path": "18"
    },
    "6405": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF8"
    },
    "6407": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SHL",
      "path": "18"
    },
    "6408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6412": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6414": {
      "op": "SHL"
    },
    "6415": {
      "op": "SUB"
    },
    "6416": {
      "op": "NOT"
    },
    "6417": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "AND",
      "path": "18"
    },
    "6418": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "6420": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP6",
      "path": "18"
    },
    "6421": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6422": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6423": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH3",
      "path": "18",
      "value": "0x10000"
    },
    "6427": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6428": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DIV",
      "path": "18"
    },
    "6429": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6430": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "6431": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "AND",
      "path": "18"
    },
    "6432": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC0"
    },
    "6434": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6435": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6436": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6437": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH5",
      "path": "18",
      "value": "0x100000000"
    },
    "6443": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6444": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DIV",
      "path": "18"
    },
    "6445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6449": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6451": {
      "op": "SHL"
    },
    "6452": {
      "op": "SUB"
    },
    "6453": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "AND",
      "path": "18"
    },
    "6454": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "6456": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6457": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6458": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6459": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "6461": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6462": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6463": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6464": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6465": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6466": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6467": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6468": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x6"
    },
    "6470": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6471": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6472": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6473": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x120"
    },
    "6476": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6477": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6478": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6479": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x7"
    },
    "6481": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6482": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6483": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6484": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6489": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6491": {
      "op": "SHL"
    },
    "6492": {
      "op": "SUB"
    },
    "6493": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6494": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6495": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "AND",
      "path": "18"
    },
    "6496": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x140"
    },
    "6499": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6500": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6501": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6504": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6506": {
      "op": "SHL"
    },
    "6507": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6508": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6509": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DIV",
      "path": "18"
    },
    "6510": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "AND",
      "path": "18"
    },
    "6511": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x160"
    },
    "6514": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6515": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6516": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "ADD",
      "path": "18"
    },
    "6517": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6518": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6519": {
      "op": "POP"
    },
    "6520": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12070,
        12092
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 48,
      "value": "0x1980"
    },
    "6523": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12011,
        12060
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6524": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12070,
        12083
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3089"
    },
    "6527": {
      "fn": "HouseOfPanda.authorizedMint",
      "jump": "i",
      "offset": [
        12070,
        12092
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6528": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12070,
        12092
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6529": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12144,
        12165
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "6534": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12144,
        12165
      ],
      "op": "DUP8",
      "path": "18"
    },
    "6535": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12144,
        12165
      ],
      "op": "AND",
      "path": "18"
    },
    "6536": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12127,
        12141
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6538": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12144,
        12165
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6539": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12144,
        12165
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6540": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12144,
        12165
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6541": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12144,
        12154
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "6543": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12144,
        12165
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6545": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12144,
        12165
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6546": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12144,
        12165
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6548": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12144,
        12165
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6549": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12144,
        12165
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6550": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12144,
        12165
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6551": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12144,
        12165
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "6554": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12179,
        12198
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6555": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12179,
        12198
      ],
      "op": "ADD",
      "path": "18"
    },
    "6556": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12179,
        12198
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6561": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6563": {
      "op": "SHL"
    },
    "6564": {
      "op": "SUB"
    },
    "6565": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12144,
        12165
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6566": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12144,
        12165
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6567": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12144,
        12165
      ],
      "op": "AND",
      "path": "18"
    },
    "6568": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12144,
        12165
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6569": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12179,
        12202
      ],
      "op": "AND",
      "path": "18"
    },
    "6570": {
      "branch": 192,
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12179,
        12202
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6571": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12175,
        12282
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A0C"
    },
    "6574": {
      "branch": 192,
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12175,
        12282
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6575": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12242,
        12261
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 49,
      "value": "0x100"
    },
    "6578": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12242,
        12261
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6579": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12242,
        12261
      ],
      "op": "ADD",
      "path": "18"
    },
    "6580": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12242,
        12261
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6585": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6587": {
      "op": "SHL"
    },
    "6588": {
      "op": "SUB"
    },
    "6589": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12226,
        12261
      ],
      "op": "AND",
      "path": "18"
    },
    "6590": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12226,
        12238
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x19CD"
    },
    "6593": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12226,
        12238
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "6598": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12226,
        12238
      ],
      "op": "DUP10",
      "path": "18"
    },
    "6599": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12226,
        12238
      ],
      "op": "AND",
      "path": "18"
    },
    "6600": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12226,
        12232
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6601": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12226,
        12238
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x50FE"
    },
    "6604": {
      "fn": "HouseOfPanda.authorizedMint",
      "jump": "i",
      "offset": [
        12226,
        12238
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6605": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12226,
        12238
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6610": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6612": {
      "op": "SHL"
    },
    "6613": {
      "op": "SUB"
    },
    "6614": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12226,
        12261
      ],
      "op": "AND",
      "path": "18"
    },
    "6615": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12226,
        12261
      ],
      "op": "GT",
      "path": "18"
    },
    "6616": {
      "branch": 193,
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12226,
        12261
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6617": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12218,
        12271
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A0C"
    },
    "6620": {
      "branch": 193,
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12218,
        12271
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6621": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12218,
        12271
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6623": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12218,
        12271
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6624": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6628": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6630": {
      "op": "SHL"
    },
    "6631": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12218,
        12271
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6632": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12218,
        12271
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6633": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6635": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12218,
        12271
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "6637": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12218,
        12271
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6638": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12218,
        12271
      ],
      "op": "ADD",
      "path": "18"
    },
    "6639": {
      "op": "MSTORE"
    },
    "6640": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6642": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6644": {
      "op": "DUP3"
    },
    "6645": {
      "op": "ADD"
    },
    "6646": {
      "op": "MSTORE"
    },
    "6647": {
      "op": "PUSH5",
      "value": "0x1B1A5B5A5D"
    },
    "6653": {
      "op": "PUSH1",
      "value": "0xDA"
    },
    "6655": {
      "op": "SHL"
    },
    "6656": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6658": {
      "op": "DUP3"
    },
    "6659": {
      "op": "ADD"
    },
    "6660": {
      "op": "MSTORE"
    },
    "6661": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6663": {
      "op": "ADD"
    },
    "6664": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12218,
        12271
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "6667": {
      "op": "JUMP"
    },
    "6668": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12218,
        12271
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6669": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12292,
        12307
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6671": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6672": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12386,
        12438
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6674": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12386,
        12438
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6679": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6681": {
      "op": "SHL"
    },
    "6682": {
      "op": "SUB"
    },
    "6683": {
      "op": "NOT"
    },
    "6684": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6686": {
      "op": "DUP13"
    },
    "6687": {
      "op": "DUP2"
    },
    "6688": {
      "op": "SHL"
    },
    "6689": {
      "op": "DUP3"
    },
    "6690": {
      "op": "AND"
    },
    "6691": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12386,
        12438
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6693": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12386,
        12438
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6694": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12386,
        12438
      ],
      "op": "ADD",
      "path": "18"
    },
    "6695": {
      "op": "MSTORE"
    },
    "6696": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "6709": {
      "op": "NOT"
    },
    "6710": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6712": {
      "op": "DUP6"
    },
    "6713": {
      "op": "DUP2"
    },
    "6714": {
      "op": "SHL"
    },
    "6715": {
      "op": "DUP3"
    },
    "6716": {
      "op": "AND"
    },
    "6717": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6719": {
      "op": "DUP7"
    },
    "6720": {
      "op": "ADD"
    },
    "6721": {
      "op": "MSTORE"
    },
    "6722": {
      "op": "DUP13"
    },
    "6723": {
      "op": "SWAP1"
    },
    "6724": {
      "op": "SHL"
    },
    "6725": {
      "op": "AND"
    },
    "6726": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "6728": {
      "op": "DUP5"
    },
    "6729": {
      "op": "ADD"
    },
    "6730": {
      "op": "MSTORE"
    },
    "6731": {
      "op": "DUP12"
    },
    "6732": {
      "op": "SWAP1"
    },
    "6733": {
      "op": "SHL"
    },
    "6734": {
      "op": "AND"
    },
    "6735": {
      "op": "PUSH1",
      "value": "0x4C"
    },
    "6737": {
      "op": "DUP3"
    },
    "6738": {
      "op": "ADD"
    },
    "6739": {
      "op": "MSTORE"
    },
    "6740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6744": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6746": {
      "op": "SHL"
    },
    "6747": {
      "op": "SUB"
    },
    "6748": {
      "op": "NOT"
    },
    "6749": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6751": {
      "op": "DUP10"
    },
    "6752": {
      "op": "SWAP1"
    },
    "6753": {
      "op": "SHL"
    },
    "6754": {
      "op": "AND"
    },
    "6755": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6757": {
      "op": "DUP3"
    },
    "6758": {
      "op": "ADD"
    },
    "6759": {
      "op": "MSTORE"
    },
    "6760": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12292,
        12322
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6761": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12292,
        12322
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6762": {
      "op": "POP"
    },
    "6763": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12333,
        12348
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6765": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12333,
        12348
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6766": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12351,
        12449
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A8F"
    },
    "6769": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12351,
        12449
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6770": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "6772": {
      "op": "ADD"
    },
    "6773": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12386,
        12438
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6775": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12386,
        12438
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6776": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12386,
        12438
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6778": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12386,
        12438
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6779": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12386,
        12438
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6780": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12386,
        12438
      ],
      "op": "SUB",
      "path": "18"
    },
    "6781": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12386,
        12438
      ],
      "op": "SUB",
      "path": "18"
    },
    "6782": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12386,
        12438
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6783": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12386,
        12438
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6784": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12386,
        12438
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6785": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12386,
        12438
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6787": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12386,
        12438
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6788": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12376,
        12439
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6789": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12376,
        12439
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6790": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12376,
        12439
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6791": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12376,
        12439
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6793": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12376,
        12439
      ],
      "op": "ADD",
      "path": "18"
    },
    "6794": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12376,
        12439
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6795": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12351,
        12362
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x328A"
    },
    "6798": {
      "fn": "HouseOfPanda.authorizedMint",
      "jump": "i",
      "offset": [
        12351,
        12449
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6799": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12351,
        12449
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6800": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12478,
        12483
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 50,
      "value": "0xC"
    },
    "6802": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12478,
        12483
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6803": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12333,
        12449
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6804": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12333,
        12449
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6805": {
      "op": "POP"
    },
    "6806": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12468,
        12498
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1AA9"
    },
    "6809": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12468,
        12498
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6816": {
      "op": "SHL"
    },
    "6817": {
      "op": "SUB"
    },
    "6818": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12478,
        12483
      ],
      "op": "AND",
      "path": "18"
    },
    "6819": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12333,
        12449
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6820": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12494,
        12497
      ],
      "op": "DUP9",
      "path": "18"
    },
    "6821": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12468,
        12477
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x32DE"
    },
    "6824": {
      "fn": "HouseOfPanda.authorizedMint",
      "jump": "i",
      "offset": [
        12468,
        12498
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6825": {
      "branch": 194,
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12468,
        12498
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6826": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12460,
        12514
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1AE3"
    },
    "6829": {
      "branch": 194,
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12460,
        12514
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6830": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12460,
        12514
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6832": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12460,
        12514
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6833": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6837": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6839": {
      "op": "SHL"
    },
    "6840": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12460,
        12514
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6841": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12460,
        12514
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6844": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12460,
        12514
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "6846": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12460,
        12514
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6847": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12460,
        12514
      ],
      "op": "ADD",
      "path": "18"
    },
    "6848": {
      "op": "MSTORE"
    },
    "6849": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "6851": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6853": {
      "op": "DUP3"
    },
    "6854": {
      "op": "ADD"
    },
    "6855": {
      "op": "MSTORE"
    },
    "6856": {
      "op": "PUSH11",
      "value": "0x78207369676E6174757265"
    },
    "6868": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6870": {
      "op": "SHL"
    },
    "6871": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6873": {
      "op": "DUP3"
    },
    "6874": {
      "op": "ADD"
    },
    "6875": {
      "op": "MSTORE"
    },
    "6876": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6878": {
      "op": "ADD"
    },
    "6879": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12460,
        12514
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "6882": {
      "op": "JUMP"
    },
    "6883": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12460,
        12514
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6884": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12525,
        12541
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6886": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12544,
        12561
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1AFD"
    },
    "6889": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12553,
        12560
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6890": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        888,
        893
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xC"
    },
    "6892": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        888,
        893
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "6893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6899": {
      "op": "SHL"
    },
    "6900": {
      "op": "SUB"
    },
    "6901": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        877,
        893
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6902": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        877,
        893
      ],
      "op": "DUP3",
      "path": "17"
    },
    "6903": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        877,
        893
      ],
      "op": "AND",
      "path": "17"
    },
    "6904": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        888,
        893
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "6905": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        888,
        893
      ],
      "op": "AND",
      "path": "17"
    },
    "6906": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        877,
        893
      ],
      "op": "EQ",
      "path": "17"
    },
    "6907": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        877,
        893
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "6908": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        788,
        900
      ],
      "op": "JUMP",
      "path": "17"
    },
    "6909": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12544,
        12561
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6910": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12544,
        12582
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6911": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12544,
        12582
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B0C"
    },
    "6914": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12544,
        12582
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6915": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12544,
        12582
      ],
      "op": "POP",
      "path": "18"
    },
    "6916": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12565,
        12582
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B0C"
    },
    "6919": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12574,
        12581
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6920": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12565,
        12573
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x30AD"
    },
    "6923": {
      "fn": "HouseOfPanda.authorizedMint",
      "jump": "i",
      "offset": [
        12565,
        12582
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6924": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12565,
        12582
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6925": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12525,
        12582
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6926": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12525,
        12582
      ],
      "op": "POP",
      "path": "18"
    },
    "6927": {
      "branch": 195,
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12614,
        12625
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 51
    },
    "6928": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12614,
        12681
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6929": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12614,
        12681
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B9B"
    },
    "6932": {
      "branch": 195,
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12614,
        12681
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6933": {
      "op": "POP"
    },
    "6934": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12668,
        12681
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "6936": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12668,
        12681
      ],
      "op": "DUP6",
      "path": "18"
    },
    "6937": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12668,
        12681
      ],
      "op": "ADD",
      "path": "18"
    },
    "6938": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12668,
        12681
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6939": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12662,
        12681
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B2A"
    },
    "6942": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12662,
        12681
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6943": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12662,
        12681
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "6948": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12662,
        12681
      ],
      "op": "DUP13",
      "path": "18"
    },
    "6949": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12662,
        12681
      ],
      "op": "AND",
      "path": "18"
    },
    "6950": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12662,
        12681
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x50CE"
    },
    "6953": {
      "fn": "HouseOfPanda.authorizedMint",
      "jump": "i",
      "offset": [
        12662,
        12681
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6954": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12662,
        12681
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6955": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12639
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE"
    },
    "6957": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12639
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6958": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6960": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6961": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6966": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6968": {
      "op": "SHL"
    },
    "6969": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6970": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6977": {
      "op": "SHL"
    },
    "6978": {
      "op": "SUB"
    },
    "6979": {
      "op": "DUP7"
    },
    "6980": {
      "op": "DUP2"
    },
    "6981": {
      "op": "AND"
    },
    "6982": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "6984": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6985": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "ADD",
      "path": "18"
    },
    "6986": {
      "op": "MSTORE"
    },
    "6987": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12639
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6988": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12639
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6989": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12639
      ],
      "op": "AND",
      "path": "18"
    },
    "6990": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12639
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6991": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12649
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x70A08231"
    },
    "6996": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12649
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6997": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6999": {
      "op": "ADD"
    },
    "7000": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7002": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7004": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7005": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7006": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7007": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "SUB",
      "path": "18"
    },
    "7008": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7009": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "DUP7",
      "path": "18"
    },
    "7010": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "GAS",
      "path": "18"
    },
    "7011": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "7012": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7013": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7014": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7015": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B74"
    },
    "7018": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7019": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7020": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7022": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7023": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "7024": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7025": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7027": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "REVERT",
      "path": "18"
    },
    "7028": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7029": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "POP",
      "path": "18"
    },
    "7030": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "POP",
      "path": "18"
    },
    "7031": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "POP",
      "path": "18"
    },
    "7032": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "POP",
      "path": "18"
    },
    "7033": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7035": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7036": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7037": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "7039": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "NOT",
      "path": "18"
    },
    "7040": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "7042": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7043": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "ADD",
      "path": "18"
    },
    "7044": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "AND",
      "path": "18"
    },
    "7045": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7046": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "ADD",
      "path": "18"
    },
    "7047": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7048": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7050": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7051": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "POP",
      "path": "18"
    },
    "7052": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7053": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "ADD",
      "path": "18"
    },
    "7054": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7055": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B98"
    },
    "7058": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7059": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7060": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x50E5"
    },
    "7063": {
      "fn": "HouseOfPanda.authorizedMint",
      "jump": "i",
      "offset": [
        12629,
        12658
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7064": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12658
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7065": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12681
      ],
      "op": "LT",
      "path": "18"
    },
    "7066": {
      "branch": 196,
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12629,
        12681
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7067": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12614,
        12681
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7068": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12593,
        12716
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1BD3"
    },
    "7071": {
      "branch": 196,
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12593,
        12716
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7072": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12593,
        12716
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7074": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12593,
        12716
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7075": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7079": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7081": {
      "op": "SHL"
    },
    "7082": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12593,
        12716
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7083": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12593,
        12716
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7086": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12593,
        12716
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "7088": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12593,
        12716
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7089": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12593,
        12716
      ],
      "op": "ADD",
      "path": "18"
    },
    "7090": {
      "op": "MSTORE"
    },
    "7091": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "7093": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7095": {
      "op": "DUP3"
    },
    "7096": {
      "op": "ADD"
    },
    "7097": {
      "op": "MSTORE"
    },
    "7098": {
      "op": "PUSH9",
      "value": "0x18985B185B98D9480F"
    },
    "7108": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "7110": {
      "op": "SHL"
    },
    "7111": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7113": {
      "op": "DUP3"
    },
    "7114": {
      "op": "ADD"
    },
    "7115": {
      "op": "MSTORE"
    },
    "7116": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7118": {
      "op": "ADD"
    },
    "7119": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12593,
        12716
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "7122": {
      "op": "JUMP"
    },
    "7123": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12593,
        12716
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7124": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "PUSH4",
      "path": "18",
      "statement": 52,
      "value": "0xFFFFFFFF"
    },
    "7129": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12748
      ],
      "op": "DUP12",
      "path": "18"
    },
    "7130": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12748
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7131": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12748
      ],
      "op": "AND",
      "path": "18"
    },
    "7132": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12748
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7134": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12748
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7135": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12748
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7136": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12748
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7137": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "7139": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12748
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7141": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12748
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7142": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12748
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7144": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12748
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7145": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12748
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "7146": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7147": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7148": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7149": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "DUP14",
      "path": "18"
    },
    "7150": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "AND",
      "path": "18"
    },
    "7151": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7152": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12748
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7153": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12748
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7154": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12748
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7155": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1C06"
    },
    "7158": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7159": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "DUP5",
      "path": "18"
    },
    "7160": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7165": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7167": {
      "op": "SHL"
    },
    "7168": {
      "op": "SUB"
    },
    "7169": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "AND",
      "path": "18"
    },
    "7170": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x50FE"
    },
    "7173": {
      "fn": "HouseOfPanda.authorizedMint",
      "jump": "i",
      "offset": [
        12727,
        12755
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7174": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7175": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7176": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "POP",
      "path": "18"
    },
    "7177": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "7180": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "EXP",
      "path": "18"
    },
    "7181": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7182": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7183": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7188": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7190": {
      "op": "SHL"
    },
    "7191": {
      "op": "SUB"
    },
    "7192": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "MUL",
      "path": "18"
    },
    "7193": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "NOT",
      "path": "18"
    },
    "7194": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "AND",
      "path": "18"
    },
    "7195": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7196": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7201": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7203": {
      "op": "SHL"
    },
    "7204": {
      "op": "SUB"
    },
    "7205": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "AND",
      "path": "18"
    },
    "7206": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "MUL",
      "path": "18"
    },
    "7207": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "OR",
      "path": "18"
    },
    "7208": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7209": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "7210": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12727,
        12755
      ],
      "op": "POP",
      "path": "18"
    },
    "7211": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12808,
        12926
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 53,
      "value": "0x1C45"
    },
    "7214": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12849,
        12856
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7215": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12878,
        12882
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "7216": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12903,
        12910
      ],
      "op": "DUP8",
      "path": "18"
    },
    "7217": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12903,
        12916
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "7219": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12903,
        12916
      ],
      "op": "ADD",
      "path": "18"
    },
    "7220": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12903,
        12916
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7221": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12897,
        12900
      ],
      "op": "DUP14",
      "path": "18"
    },
    "7222": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12897,
        12916
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "7227": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12897,
        12916
      ],
      "op": "AND",
      "path": "18"
    },
    "7228": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12897,
        12916
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16C9"
    },
    "7231": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12897,
        12916
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7232": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12897,
        12916
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7233": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12897,
        12916
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x50CE"
    },
    "7236": {
      "fn": "HouseOfPanda.authorizedMint",
      "jump": "i",
      "offset": [
        12897,
        12916
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7237": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12808,
        12926
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7238": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12937,
        12966
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 54,
      "value": "0x1C6C"
    },
    "7241": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12943,
        12945
      ],
      "op": "DUP10",
      "path": "18"
    },
    "7242": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12947,
        12956
      ],
      "op": "DUP13",
      "path": "18"
    },
    "7243": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12937,
        12966
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "7248": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12937,
        12966
      ],
      "op": "AND",
      "path": "18"
    },
    "7249": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12958,
        12961
      ],
      "op": "DUP13",
      "path": "18"
    },
    "7250": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12937,
        12966
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "7255": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12937,
        12966
      ],
      "op": "AND",
      "path": "18"
    },
    "7256": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12937,
        12966
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7258": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12937,
        12966
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7259": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12937,
        12966
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7260": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12937,
        12966
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7262": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12937,
        12966
      ],
      "op": "ADD",
      "path": "18"
    },
    "7263": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12937,
        12966
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7265": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12937,
        12966
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7266": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12937,
        12966
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7267": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12937,
        12966
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7269": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12937,
        12966
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7270": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12937,
        12966
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7271": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12937,
        12966
      ],
      "op": "POP",
      "path": "18"
    },
    "7272": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12937,
        12942
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x313B"
    },
    "7275": {
      "fn": "HouseOfPanda.authorizedMint",
      "jump": "i",
      "offset": [
        12937,
        12966
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7276": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12937,
        12966
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7277": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 55,
      "value": "0x40"
    },
    "7279": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7284": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7286": {
      "op": "SHL"
    },
    "7287": {
      "op": "SUB"
    },
    "7288": {
      "op": "DUP5"
    },
    "7289": {
      "op": "DUP2"
    },
    "7290": {
      "op": "AND"
    },
    "7291": {
      "op": "DUP3"
    },
    "7292": {
      "op": "MSTORE"
    },
    "7293": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "DUP11",
      "path": "18"
    },
    "7294": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "AND",
      "path": "18"
    },
    "7295": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7296": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "7301": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7302": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "DUP14",
      "path": "18"
    },
    "7303": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "AND",
      "path": "18"
    },
    "7304": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7305": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7306": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "DUP15",
      "path": "18"
    },
    "7307": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "AND",
      "path": "18"
    },
    "7308": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7309": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xDA1373DCDE55ACEB480442EE22608E2601F3639E5D1E81E6F9DCD8D231607899"
    },
    "7342": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7345": {
      "op": "ADD"
    },
    "7346": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7348": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7349": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7350": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7351": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "SUB",
      "path": "18"
    },
    "7352": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7353": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        12982,
        13015
      ],
      "op": "LOG4",
      "path": "18"
    },
    "7354": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        13033,
        13037
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 56,
      "value": "0x1"
    },
    "7356": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        13026,
        13037
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "7357": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        13026,
        13037
      ],
      "op": "POP",
      "path": "18"
    },
    "7358": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        13026,
        13037
      ],
      "op": "POP",
      "path": "18"
    },
    "7359": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        13026,
        13037
      ],
      "op": "POP",
      "path": "18"
    },
    "7360": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        13026,
        13037
      ],
      "op": "POP",
      "path": "18"
    },
    "7361": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        13026,
        13037
      ],
      "op": "POP",
      "path": "18"
    },
    "7362": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        13026,
        13037
      ],
      "op": "POP",
      "path": "18"
    },
    "7363": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "7365": {
      "offset": [
        2562,
        2569
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xD"
    },
    "7367": {
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7368": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11692,
        13044
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "7369": {
      "fn": "HouseOfPanda.authorizedMint",
      "offset": [
        11692,
        13044
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "7370": {
      "op": "POP"
    },
    "7371": {
      "op": "POP"
    },
    "7372": {
      "op": "POP"
    },
    "7373": {
      "op": "POP"
    },
    "7374": {
      "op": "POP"
    },
    "7375": {
      "fn": "HouseOfPanda.authorizedMint",
      "jump": "o",
      "offset": [
        11692,
        13044
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7376": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7377": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18775,
        18793
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D04"
    },
    "7380": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7382": {
      "op": "MLOAD"
    },
    "7383": {
      "op": "DUP1"
    },
    "7384": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7386": {
      "op": "ADD"
    },
    "7387": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7389": {
      "op": "MSTORE"
    },
    "7390": {
      "op": "DUP1"
    },
    "7391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7393": {
      "op": "DUP2"
    },
    "7394": {
      "op": "MSTORE"
    },
    "7395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7397": {
      "op": "ADD"
    },
    "7398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7404": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7406": {
      "op": "SHL"
    },
    "7407": {
      "op": "SUB"
    },
    "7408": {
      "op": "AND"
    },
    "7409": {
      "op": "DUP2"
    },
    "7410": {
      "op": "MSTORE"
    },
    "7411": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7413": {
      "op": "ADD"
    },
    "7414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7416": {
      "op": "DUP2"
    },
    "7417": {
      "op": "MSTORE"
    },
    "7418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7420": {
      "op": "ADD"
    },
    "7421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7423": {
      "op": "DUP2"
    },
    "7424": {
      "op": "MSTORE"
    },
    "7425": {
      "op": "POP"
    },
    "7426": {
      "op": "SWAP1"
    },
    "7427": {
      "op": "JUMP"
    },
    "7428": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18775,
        18793
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7429": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7431": {
      "op": "DUP1"
    },
    "7432": {
      "op": "MLOAD"
    },
    "7433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7435": {
      "op": "DUP2"
    },
    "7436": {
      "op": "ADD"
    },
    "7437": {
      "op": "DUP3"
    },
    "7438": {
      "op": "MSTORE"
    },
    "7439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7441": {
      "op": "DUP1"
    },
    "7442": {
      "op": "DUP3"
    },
    "7443": {
      "op": "MSTORE"
    },
    "7444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7446": {
      "op": "DUP3"
    },
    "7447": {
      "op": "ADD"
    },
    "7448": {
      "op": "DUP2"
    },
    "7449": {
      "op": "SWAP1"
    },
    "7450": {
      "op": "MSTORE"
    },
    "7451": {
      "op": "SWAP2"
    },
    "7452": {
      "op": "DUP2"
    },
    "7453": {
      "op": "ADD"
    },
    "7454": {
      "op": "DUP3"
    },
    "7455": {
      "op": "SWAP1"
    },
    "7456": {
      "op": "MSTORE"
    },
    "7457": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7459": {
      "op": "DUP2"
    },
    "7460": {
      "op": "ADD"
    },
    "7461": {
      "op": "DUP3"
    },
    "7462": {
      "op": "SWAP1"
    },
    "7463": {
      "op": "MSTORE"
    },
    "7464": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7466": {
      "op": "DUP2"
    },
    "7467": {
      "op": "ADD"
    },
    "7468": {
      "op": "SWAP2"
    },
    "7469": {
      "op": "SWAP1"
    },
    "7470": {
      "op": "SWAP2"
    },
    "7471": {
      "op": "MSTORE"
    },
    "7472": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18827,
        18850
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 57,
      "value": "0x1D38"
    },
    "7475": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18841,
        18849
      ],
      "op": "DUP5",
      "path": "18"
    },
    "7476": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18827,
        18840
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x324B"
    },
    "7479": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "jump": "i",
      "offset": [
        18827,
        18850
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7480": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18827,
        18850
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7481": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18880,
        18881
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 58,
      "value": "0x0"
    },
    "7483": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18868,
        18877
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7484": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18868,
        18881
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "7489": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18868,
        18881
      ],
      "op": "AND",
      "path": "18"
    },
    "7490": {
      "branch": 197,
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18868,
        18881
      ],
      "op": "GT",
      "path": "18"
    },
    "7491": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18860,
        18896
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D5E"
    },
    "7494": {
      "branch": 197,
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18860,
        18896
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7495": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18860,
        18896
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7497": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18860,
        18896
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7498": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7502": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7504": {
      "op": "SHL"
    },
    "7505": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18860,
        18896
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7506": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18860,
        18896
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7507": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18860,
        18896
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "7509": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18860,
        18896
      ],
      "op": "ADD",
      "path": "18"
    },
    "7510": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18860,
        18896
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "7513": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18860,
        18896
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7514": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18860,
        18896
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5161"
    },
    "7517": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "jump": "i",
      "offset": [
        18860,
        18896
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7518": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18860,
        18896
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7519": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18937
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "7521": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18937
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7522": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7524": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7525": {
      "op": "PUSH4",
      "value": "0xAEAED1B7"
    },
    "7530": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7532": {
      "op": "SHL"
    },
    "7533": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7534": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7535": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18906,
        18928
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7537": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18906,
        18928
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7544": {
      "op": "SHL"
    },
    "7545": {
      "op": "SUB"
    },
    "7546": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18937
      ],
      "op": "AND",
      "path": "18"
    },
    "7547": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18937
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7548": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18952
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xAEAED1B7"
    },
    "7553": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18952
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7554": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D91"
    },
    "7557": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7558": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18953,
        18961
      ],
      "op": "DUP9",
      "path": "18"
    },
    "7559": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18953,
        18961
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7560": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18963,
        18972
      ],
      "op": "DUP9",
      "path": "18"
    },
    "7561": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18963,
        18972
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7562": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "7564": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "ADD",
      "path": "18"
    },
    "7565": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5185"
    },
    "7568": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "jump": "i",
      "offset": [
        18931,
        18973
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7569": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7570": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "7572": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7574": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7575": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7576": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7577": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "SUB",
      "path": "18"
    },
    "7578": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7579": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "DUP7",
      "path": "18"
    },
    "7580": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "GAS",
      "path": "18"
    },
    "7581": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "7582": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7583": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7584": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7585": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1DAE"
    },
    "7588": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7589": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7590": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7592": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7593": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "7594": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7595": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7597": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "REVERT",
      "path": "18"
    },
    "7598": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7599": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "POP",
      "path": "18"
    },
    "7600": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "POP",
      "path": "18"
    },
    "7601": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "POP",
      "path": "18"
    },
    "7602": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "POP",
      "path": "18"
    },
    "7603": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7605": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7606": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7607": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "7609": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "NOT",
      "path": "18"
    },
    "7610": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "7612": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7613": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "ADD",
      "path": "18"
    },
    "7614": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "AND",
      "path": "18"
    },
    "7615": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7616": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "ADD",
      "path": "18"
    },
    "7617": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7618": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7620": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7621": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "POP",
      "path": "18"
    },
    "7622": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7623": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "ADD",
      "path": "18"
    },
    "7624": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7625": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1DD2"
    },
    "7628": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7629": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7630": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x51A4"
    },
    "7633": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "jump": "i",
      "offset": [
        18931,
        18973
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7634": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18931,
        18973
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7635": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19012
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "7637": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19012
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7638": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7640": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7641": {
      "op": "PUSH4",
      "value": "0x45E4969"
    },
    "7646": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7648": {
      "op": "SHL"
    },
    "7649": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7650": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7651": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18906,
        18973
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7652": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18906,
        18973
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7653": {
      "op": "POP"
    },
    "7654": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18983,
        19003
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7656": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18983,
        19003
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7663": {
      "op": "SHL"
    },
    "7664": {
      "op": "SUB"
    },
    "7665": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19012
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7666": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19012
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7667": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19012
      ],
      "op": "AND",
      "path": "18"
    },
    "7668": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19012
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7669": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19027
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x8BC92D2"
    },
    "7674": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19027
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7675": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E0A"
    },
    "7678": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7679": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19028,
        19036
      ],
      "op": "DUP10",
      "path": "18"
    },
    "7680": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19028,
        19036
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7681": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19038,
        19047
      ],
      "op": "DUP10",
      "path": "18"
    },
    "7682": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19038,
        19047
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7683": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "7685": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "ADD",
      "path": "18"
    },
    "7686": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5185"
    },
    "7689": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "jump": "i",
      "offset": [
        19006,
        19048
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7690": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7691": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "7693": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7695": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7696": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7697": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7698": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "SUB",
      "path": "18"
    },
    "7699": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7700": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "DUP7",
      "path": "18"
    },
    "7701": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "GAS",
      "path": "18"
    },
    "7702": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "7703": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7704": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7705": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7706": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E27"
    },
    "7709": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7710": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7711": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7713": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7714": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "7715": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7716": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7718": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "REVERT",
      "path": "18"
    },
    "7719": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7720": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "POP",
      "path": "18"
    },
    "7721": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "POP",
      "path": "18"
    },
    "7722": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "POP",
      "path": "18"
    },
    "7723": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "POP",
      "path": "18"
    },
    "7724": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7726": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7727": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7728": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "7730": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "NOT",
      "path": "18"
    },
    "7731": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "7733": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7734": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "ADD",
      "path": "18"
    },
    "7735": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "AND",
      "path": "18"
    },
    "7736": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7737": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "ADD",
      "path": "18"
    },
    "7738": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7739": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7741": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7742": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "POP",
      "path": "18"
    },
    "7743": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7744": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "ADD",
      "path": "18"
    },
    "7745": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7746": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E4B"
    },
    "7749": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7750": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7751": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x520F"
    },
    "7754": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "jump": "i",
      "offset": [
        19006,
        19048
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7755": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19006,
        19048
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7756": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19066,
        19069
      ],
      "op": "SWAP2",
      "path": "18",
      "statement": 59
    },
    "7757": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19066,
        19069
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "7758": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19066,
        19069
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7759": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        19066,
        19069
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "7760": {
      "op": "POP"
    },
    "7761": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7762": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "offset": [
        18669,
        19082
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "7763": {
      "op": "POP"
    },
    "7764": {
      "op": "POP"
    },
    "7765": {
      "op": "POP"
    },
    "7766": {
      "op": "POP"
    },
    "7767": {
      "fn": "HouseOfPanda.getAssetAlloc",
      "jump": "o",
      "offset": [
        18669,
        19082
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7768": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8306,
        8439
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7769": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8293
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "7774": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8293
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7775": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8293
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7776": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8293
      ],
      "op": "AND",
      "path": "18"
    },
    "7777": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8391,
        8395
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7779": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7780": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7781": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7782": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8266
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "7784": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7786": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7787": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7789": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7790": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "7791": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8280
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7792": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8391,
        8395
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7793": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8391,
        8395
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7794": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8280
      ],
      "op": "AND",
      "path": "18"
    },
    "7795": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8293
      ],
      "op": "EQ",
      "path": "18"
    },
    "7796": {
      "fn": "HouseOfPanda.projectExists",
      "offset": [
        8414,
        8432
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 60,
      "value": "0x85B"
    },
    "7799": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8176,
        8300
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7800": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7801": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "7803": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7810": {
      "op": "SHL"
    },
    "7811": {
      "op": "SUB"
    },
    "7812": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "7813": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "11"
    },
    "7814": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "7815": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EA2"
    },
    "7818": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7819": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7821": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7822": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7826": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7828": {
      "op": "SHL"
    },
    "7829": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7830": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7831": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7833": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "7834": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82F"
    },
    "7837": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7838": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DDE"
    },
    "7841": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7842": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7843": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 61,
      "value": "0x1EAC"
    },
    "7846": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7848": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3371"
    },
    "7851": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7852": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7853": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7854": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16324,
        16632
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7855": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16421,
        16425
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7857": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "7859": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xD"
    },
    "7861": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7862": {
      "offset": [
        2259,
        2278
      ],
      "op": "SUB",
      "path": "1"
    },
    "7863": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1ED2"
    },
    "7866": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7867": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7869": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7870": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7874": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7876": {
      "op": "SHL"
    },
    "7877": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7878": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7879": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7881": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "1"
    },
    "7882": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x82F"
    },
    "7885": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        2251,
        2314
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7886": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5052"
    },
    "7889": {
      "fn": "HouseOfPanda.burn",
      "jump": "i",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7890": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7891": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "7893": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xD"
    },
    "7895": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7896": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "11"
    },
    "7897": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16437,
        16452
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7899": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16497,
        16526
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EEA"
    },
    "7902": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7903": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16497,
        16526
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "7908": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16497,
        16526
      ],
      "op": "DUP8",
      "path": "18"
    },
    "7909": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16497,
        16526
      ],
      "op": "AND",
      "path": "18"
    },
    "7910": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16497,
        16506
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7C7"
    },
    "7913": {
      "fn": "HouseOfPanda.burn",
      "jump": "i",
      "offset": [
        16497,
        16526
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7914": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16497,
        16526
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7915": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16477,
        16526
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7916": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16477,
        16526
      ],
      "op": "POP",
      "path": "18"
    },
    "7917": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16557,
        16560
      ],
      "op": "DUP4",
      "path": "18",
      "statement": 62
    },
    "7918": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16544,
        16560
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "7923": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16544,
        16560
      ],
      "op": "AND",
      "path": "18"
    },
    "7924": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16544,
        16553
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7925": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16544,
        16560
      ],
      "op": "LT",
      "path": "18"
    },
    "7926": {
      "branch": 198,
      "fn": "HouseOfPanda.burn",
      "offset": [
        16544,
        16560
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7927": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16536,
        16570
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F2A"
    },
    "7930": {
      "branch": 198,
      "fn": "HouseOfPanda.burn",
      "offset": [
        16536,
        16570
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7931": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16536,
        16570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7933": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16536,
        16570
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7934": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7938": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7940": {
      "op": "SHL"
    },
    "7941": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16536,
        16570
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7942": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16536,
        16570
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7945": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16536,
        16570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "7947": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16536,
        16570
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7948": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16536,
        16570
      ],
      "op": "ADD",
      "path": "18"
    },
    "7949": {
      "op": "MSTORE"
    },
    "7950": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7952": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7954": {
      "op": "DUP3"
    },
    "7955": {
      "op": "ADD"
    },
    "7956": {
      "op": "MSTORE"
    },
    "7957": {
      "op": "PUSH5",
      "value": "0x38BA3C901F"
    },
    "7963": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "7965": {
      "op": "SHL"
    },
    "7966": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7968": {
      "op": "DUP3"
    },
    "7969": {
      "op": "ADD"
    },
    "7970": {
      "op": "MSTORE"
    },
    "7971": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7973": {
      "op": "ADD"
    },
    "7974": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16536,
        16570
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "7977": {
      "op": "JUMP"
    },
    "7978": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16536,
        16570
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7979": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16587,
        16625
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 63,
      "value": "0x1F35"
    },
    "7982": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16601,
        16610
      ],
      "op": "DUP6",
      "path": "18"
    },
    "7983": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16612,
        16615
      ],
      "op": "DUP6",
      "path": "18"
    },
    "7984": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16617,
        16624
      ],
      "op": "DUP5",
      "path": "18"
    },
    "7985": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16587,
        16600
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C44"
    },
    "7988": {
      "fn": "HouseOfPanda.burn",
      "jump": "i",
      "offset": [
        16587,
        16625
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7989": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16587,
        16625
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7990": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "7992": {
      "offset": [
        2562,
        2569
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xD"
    },
    "7994": {
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7995": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16580,
        16625
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "7996": {
      "fn": "HouseOfPanda.burn",
      "offset": [
        16324,
        16632
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "7997": {
      "op": "POP"
    },
    "7998": {
      "op": "POP"
    },
    "7999": {
      "op": "POP"
    },
    "8000": {
      "op": "POP"
    },
    "8001": {
      "op": "POP"
    },
    "8002": {
      "fn": "HouseOfPanda.burn",
      "jump": "o",
      "offset": [
        16324,
        16632
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8003": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8704,
        8852
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8004": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8786,
        8804
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F4B"
    },
    "8007": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8786,
        8804
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4355"
    },
    "8010": {
      "fn": "HouseOfPanda.getProject",
      "jump": "i",
      "offset": [
        8786,
        8804
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8011": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8786,
        8804
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8012": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8823,
        8845
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 64,
      "value": "0x85B"
    },
    "8015": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8835,
        8844
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8016": {
      "fn": "HouseOfPanda.getProject",
      "offset": [
        8823,
        8834
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x33C3"
    },
    "8019": {
      "fn": "HouseOfPanda.getProject",
      "jump": "i",
      "offset": [
        8823,
        8845
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8020": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        2197,
        2293
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8021": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8023": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8028": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8030": {
      "op": "SHL"
    },
    "8031": {
      "op": "SUB"
    },
    "8032": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "8033": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "11"
    },
    "8034": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "8035": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F7E"
    },
    "8038": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8039": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8041": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8042": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8046": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8048": {
      "op": "SHL"
    },
    "8049": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8050": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8051": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8053": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "8054": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82F"
    },
    "8057": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8058": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DDE"
    },
    "8061": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8062": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8063": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        2266,
        2286
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 65,
      "value": "0x97F"
    },
    "8066": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        2276,
        2285
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8067": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        2266,
        2275
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x35A7"
    },
    "8070": {
      "fn": "HouseOfPanda.changeAdmin",
      "jump": "i",
      "offset": [
        2266,
        2286
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8071": {
      "offset": [
        1074,
        1094
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8072": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        1074,
        1094
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "8074": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        1074,
        1094
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8075": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        1074,
        1094
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8076": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        1074,
        1094
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x98F"
    },
    "8079": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        1074,
        1094
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8080": {
      "fn": "HouseOfPanda.changeAdmin",
      "offset": [
        1074,
        1094
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E13"
    },
    "8083": {
      "fn": "HouseOfPanda.changeAdmin",
      "jump": "i",
      "offset": [
        1074,
        1094
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8084": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8091": {
      "op": "SHL"
    },
    "8092": {
      "op": "SUB"
    },
    "8093": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 66
    },
    "8094": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "AND",
      "path": "2"
    },
    "8095": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "11"
    },
    "8096": {
      "branch": 231,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "SUB",
      "path": "2"
    },
    "8097": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FFE"
    },
    "8100": {
      "branch": 231,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8101": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8103": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8104": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8108": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8110": {
      "op": "SHL"
    },
    "8111": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8112": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8115": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8117": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8118": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "ADD",
      "path": "2"
    },
    "8119": {
      "op": "MSTORE"
    },
    "8120": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "8122": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8124": {
      "op": "DUP3"
    },
    "8125": {
      "op": "ADD"
    },
    "8126": {
      "op": "MSTORE"
    },
    "8127": {
      "op": "PUSH32",
      "value": "0x455243313135353A2073657474696E6720617070726F76616C20737461747573"
    },
    "8160": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8162": {
      "op": "DUP3"
    },
    "8163": {
      "op": "ADD"
    },
    "8164": {
      "op": "MSTORE"
    },
    "8165": {
      "op": "PUSH9",
      "value": "0x103337B91039B2B633"
    },
    "8175": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "8177": {
      "op": "SHL"
    },
    "8178": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8180": {
      "op": "DUP3"
    },
    "8181": {
      "op": "ADD"
    },
    "8182": {
      "op": "MSTORE"
    },
    "8183": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8185": {
      "op": "ADD"
    },
    "8186": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82F"
    },
    "8189": {
      "op": "JUMP"
    },
    "8190": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8191": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "11"
    },
    "8192": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 67,
      "value": "0x0"
    },
    "8194": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8195": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8196": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8197": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8199": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8201": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8202": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8203": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8204": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8206": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8207": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8208": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8215": {
      "op": "SHL"
    },
    "8216": {
      "op": "SUB"
    },
    "8217": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8218": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "AND",
      "path": "2"
    },
    "8219": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8220": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8221": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8222": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8223": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8224": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8225": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8226": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8227": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8228": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8229": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8230": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8231": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8233": {
      "op": "NOT"
    },
    "8234": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "AND",
      "path": "2"
    },
    "8235": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8236": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8237": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8238": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8239": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8240": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "OR",
      "path": "2"
    },
    "8241": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8242": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8243": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8244": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 68
    },
    "8245": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8246": {
      "op": "SWAP1"
    },
    "8247": {
      "op": "DUP2"
    },
    "8248": {
      "op": "MSTORE"
    },
    "8249": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8250": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8251": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8252": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "8285": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8286": {
      "op": "ADD"
    },
    "8287": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8289": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8290": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8291": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8292": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SUB",
      "path": "2"
    },
    "8293": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8294": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "LOG3",
      "path": "2"
    },
    "8295": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "POP",
      "path": "2"
    },
    "8296": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "POP",
      "path": "2"
    },
    "8297": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "o",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8298": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8299": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        888,
        893
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xC"
    },
    "8301": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        888,
        893
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "8302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8308": {
      "op": "SHL"
    },
    "8309": {
      "op": "SUB"
    },
    "8310": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        888,
        893
      ],
      "op": "AND",
      "path": "17"
    },
    "8311": {
      "offset": [
        2354,
        2364
      ],
      "op": "CALLER",
      "path": "18"
    },
    "8312": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        877,
        893
      ],
      "op": "EQ",
      "path": "17"
    },
    "8313": {
      "offset": [
        2345,
        2389
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8314": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        2345,
        2389
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2087"
    },
    "8317": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        2345,
        2389
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8318": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        2345,
        2389
      ],
      "op": "POP",
      "path": "18"
    },
    "8319": {
      "offset": [
        2369,
        2389
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2087"
    },
    "8322": {
      "offset": [
        2378,
        2388
      ],
      "op": "CALLER",
      "path": "18"
    },
    "8323": {
      "offset": [
        2369,
        2377
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x30AD"
    },
    "8326": {
      "jump": "i",
      "offset": [
        2369,
        2389
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8327": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        2369,
        2389
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8328": {
      "offset": [
        2337,
        2407
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20C3"
    },
    "8331": {
      "offset": [
        2337,
        2407
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8332": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        2337,
        2407
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8334": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        2337,
        2407
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8335": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8339": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8341": {
      "op": "SHL"
    },
    "8342": {
      "offset": [
        2337,
        2407
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8343": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        2337,
        2407
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8346": {
      "offset": [
        2337,
        2407
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "8348": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        2337,
        2407
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8349": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        2337,
        2407
      ],
      "op": "ADD",
      "path": "18"
    },
    "8350": {
      "op": "MSTORE"
    },
    "8351": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "8353": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8355": {
      "op": "DUP3"
    },
    "8356": {
      "op": "ADD"
    },
    "8357": {
      "op": "MSTORE"
    },
    "8358": {
      "op": "PUSH13",
      "value": "0x10B0B236B4B71010B7BBB732B9"
    },
    "8372": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "8374": {
      "op": "SHL"
    },
    "8375": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8377": {
      "op": "DUP3"
    },
    "8378": {
      "op": "ADD"
    },
    "8379": {
      "op": "MSTORE"
    },
    "8380": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8382": {
      "op": "ADD"
    },
    "8383": {
      "offset": [
        2337,
        2407
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "8386": {
      "op": "JUMP"
    },
    "8387": {
      "offset": [
        2337,
        2407
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8388": {
      "branch": 199,
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7449,
        7463
      ],
      "op": "DUP7",
      "path": "18"
    },
    "8389": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7445,
        7519
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8390": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7445,
        7519
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2103"
    },
    "8393": {
      "branch": 199,
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7445,
        7519
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8394": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7495,
        7496
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 69,
      "value": "0x0"
    },
    "8396": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7487,
        7492
      ],
      "op": "DUP9",
      "path": "18"
    },
    "8397": {
      "branch": 200,
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7487,
        7496
      ],
      "op": "GT",
      "path": "18"
    },
    "8398": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7479,
        7508
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2103"
    },
    "8401": {
      "branch": 200,
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7479,
        7508
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8402": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7479,
        7508
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8404": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7479,
        7508
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8405": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8409": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8411": {
      "op": "SHL"
    },
    "8412": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7479,
        7508
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8413": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7479,
        7508
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8416": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7479,
        7508
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "8418": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7479,
        7508
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8419": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7479,
        7508
      ],
      "op": "ADD",
      "path": "18"
    },
    "8420": {
      "op": "MSTORE"
    },
    "8421": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "8423": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8425": {
      "op": "DUP3"
    },
    "8426": {
      "op": "ADD"
    },
    "8427": {
      "op": "MSTORE"
    },
    "8428": {
      "op": "PUSH7",
      "value": "0x70726963653D3"
    },
    "8436": {
      "op": "PUSH1",
      "value": "0xCC"
    },
    "8438": {
      "op": "SHL"
    },
    "8439": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8441": {
      "op": "DUP3"
    },
    "8442": {
      "op": "ADD"
    },
    "8443": {
      "op": "MSTORE"
    },
    "8444": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8446": {
      "op": "ADD"
    },
    "8447": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7479,
        7508
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "8450": {
      "op": "JUMP"
    },
    "8451": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7479,
        7508
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8452": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7543,
        7544
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 70,
      "value": "0x0"
    },
    "8454": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7536,
        7540
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8455": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7536,
        7544
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "8458": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7536,
        7544
      ],
      "op": "AND",
      "path": "18"
    },
    "8459": {
      "branch": 201,
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7536,
        7544
      ],
      "op": "GT",
      "path": "18"
    },
    "8460": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7536,
        7558
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8461": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7536,
        7558
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8462": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7536,
        7558
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x211C"
    },
    "8465": {
      "branch": 201,
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7536,
        7558
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8466": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7536,
        7558
      ],
      "op": "POP",
      "path": "18"
    },
    "8467": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7556,
        7558
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3C"
    },
    "8469": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7548,
        7552
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8470": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7548,
        7558
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "8473": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7548,
        7558
      ],
      "op": "AND",
      "path": "18"
    },
    "8474": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7548,
        7558
      ],
      "op": "GT",
      "path": "18"
    },
    "8475": {
      "branch": 202,
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7548,
        7558
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8476": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7536,
        7558
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8477": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7528,
        7569
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2151"
    },
    "8480": {
      "branch": 202,
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7528,
        7569
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8481": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7528,
        7569
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8483": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7528,
        7569
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8484": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8488": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8490": {
      "op": "SHL"
    },
    "8491": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7528,
        7569
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8492": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7528,
        7569
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8493": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8495": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7528,
        7569
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "8497": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7528,
        7569
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8498": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7528,
        7569
      ],
      "op": "ADD",
      "path": "18"
    },
    "8499": {
      "op": "MSTORE"
    },
    "8500": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "8502": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8504": {
      "op": "DUP3"
    },
    "8505": {
      "op": "ADD"
    },
    "8506": {
      "op": "MSTORE"
    },
    "8507": {
      "op": "PUSH6",
      "value": "0x78207465726D"
    },
    "8514": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8516": {
      "op": "SHL"
    },
    "8517": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8519": {
      "op": "DUP3"
    },
    "8520": {
      "op": "ADD"
    },
    "8521": {
      "op": "MSTORE"
    },
    "8522": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8524": {
      "op": "ADD"
    },
    "8525": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7528,
        7569
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "8528": {
      "op": "JUMP"
    },
    "8529": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7528,
        7569
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8530": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7593,
        7605
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE"
    },
    "8532": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7593,
        7605
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8533": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7580,
        7590
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8535": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7580,
        7590
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8536": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7593,
        7609
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x216F"
    },
    "8539": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7593,
        7609
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8544": {
      "op": "SHL"
    },
    "8545": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7593,
        7605
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8546": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7593,
        7605
      ],
      "op": "DIV",
      "path": "18"
    },
    "8547": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7593,
        7605
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "8552": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7593,
        7605
      ],
      "op": "AND",
      "path": "18"
    },
    "8553": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7608,
        7609
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "8555": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7593,
        7609
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5296"
    },
    "8558": {
      "fn": "HouseOfPanda.createProject",
      "jump": "i",
      "offset": [
        7593,
        7609
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8559": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7593,
        7609
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8560": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7580,
        7609
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8561": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7580,
        7609
      ],
      "op": "POP",
      "path": "18"
    },
    "8562": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7619,
        7645
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8564": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8566": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8567": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8568": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A0"
    },
    "8571": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "ADD",
      "path": "18"
    },
    "8572": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8574": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8575": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8576": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7678,
        7681
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8577": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "8582": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "AND",
      "path": "18"
    },
    "8583": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8584": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8585": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8587": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "ADD",
      "path": "18"
    },
    "8588": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7702,
        7707
      ],
      "op": "DUP13",
      "path": "18"
    },
    "8589": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8590": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8591": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8593": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "ADD",
      "path": "18"
    },
    "8594": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7730,
        7740
      ],
      "op": "CALLER",
      "path": "18"
    },
    "8595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8599": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8601": {
      "op": "SHL"
    },
    "8602": {
      "op": "SUB"
    },
    "8603": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "AND",
      "path": "18"
    },
    "8604": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8605": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8606": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8608": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "ADD",
      "path": "18"
    },
    "8609": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7762,
        7768
      ],
      "op": "DUP14",
      "path": "18"
    },
    "8610": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "8613": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "AND",
      "path": "18"
    },
    "8614": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8615": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8616": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8618": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "ADD",
      "path": "18"
    },
    "8619": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7789,
        7794
      ],
      "op": "DUP12",
      "path": "18"
    },
    "8620": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8621": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8622": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8624": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "ADD",
      "path": "18"
    },
    "8625": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7824,
        7838
      ],
      "op": "DUP11",
      "path": "18"
    },
    "8626": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8627": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8628": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8629": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8630": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8632": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "ADD",
      "path": "18"
    },
    "8633": {
      "offset": [
        154,
        158
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "8635": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7860,
        7866
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF8"
    },
    "8637": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7860,
        7866
      ],
      "op": "SHL",
      "path": "18"
    },
    "8638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8642": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8644": {
      "op": "SHL"
    },
    "8645": {
      "op": "SUB"
    },
    "8646": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "NOT",
      "path": "18"
    },
    "8647": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "AND",
      "path": "18"
    },
    "8648": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8649": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8650": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8652": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "ADD",
      "path": "18"
    },
    "8653": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7924,
        7928
      ],
      "op": "DUP9",
      "path": "18"
    },
    "8654": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "8657": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "AND",
      "path": "18"
    },
    "8658": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8659": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8660": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8662": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "ADD",
      "path": "18"
    },
    "8663": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7893,
        7904
      ],
      "op": "DUP10",
      "path": "18"
    },
    "8664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8668": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8670": {
      "op": "SHL"
    },
    "8671": {
      "op": "SUB"
    },
    "8672": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "AND",
      "path": "18"
    },
    "8673": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8674": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8675": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8677": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "ADD",
      "path": "18"
    },
    "8678": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7947,
        7950
      ],
      "op": "DUP8",
      "path": "18"
    },
    "8679": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8680": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8681": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8683": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "ADD",
      "path": "18"
    },
    "8684": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7975,
        7984
      ],
      "op": "DUP7",
      "path": "18"
    },
    "8685": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8686": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8687": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8689": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "ADD",
      "path": "18"
    },
    "8690": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8009,
        8018
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8695": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8697": {
      "op": "SHL"
    },
    "8698": {
      "op": "SUB"
    },
    "8699": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "AND",
      "path": "18"
    },
    "8700": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8701": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8702": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8704": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "ADD",
      "path": "18"
    },
    "8705": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8041,
        8048
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8710": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8712": {
      "op": "SHL"
    },
    "8713": {
      "op": "SUB"
    },
    "8714": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "AND",
      "path": "18"
    },
    "8715": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8716": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8717": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7648,
        8059
      ],
      "op": "POP",
      "path": "18"
    },
    "8718": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7619,
        8059
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8719": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7619,
        8059
      ],
      "op": "POP",
      "path": "18"
    },
    "8720": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8086,
        8093
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 71
    },
    "8721": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8078
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "8723": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8083
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8725": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8079,
        8082
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8726": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8083
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "8731": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8083
      ],
      "op": "AND",
      "path": "18"
    },
    "8732": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8083
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "8737": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8083
      ],
      "op": "AND",
      "path": "18"
    },
    "8738": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8083
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8739": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8083
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8740": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8083
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8742": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8083
      ],
      "op": "ADD",
      "path": "18"
    },
    "8743": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8083
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8744": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8083
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8745": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8083
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8746": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8083
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8748": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8083
      ],
      "op": "ADD",
      "path": "18"
    },
    "8749": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8083
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8751": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8083
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8752": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8754": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8755": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "18"
    },
    "8756": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8757": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8758": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8760": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "18"
    },
    "8761": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8763": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "8766": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "EXP",
      "path": "18"
    },
    "8767": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8768": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8769": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8770": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "8775": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "MUL",
      "path": "18"
    },
    "8776": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "NOT",
      "path": "18"
    },
    "8777": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "AND",
      "path": "18"
    },
    "8778": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8779": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8780": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "8785": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "AND",
      "path": "18"
    },
    "8786": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "MUL",
      "path": "18"
    },
    "8787": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "OR",
      "path": "18"
    },
    "8788": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8789": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8790": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "POP",
      "path": "18"
    },
    "8791": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8793": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8794": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "18"
    },
    "8795": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8796": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8797": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "8799": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "18"
    },
    "8800": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8801": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8802": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x226B"
    },
    "8805": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8806": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8807": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4F93"
    },
    "8810": {
      "fn": "HouseOfPanda.createProject",
      "jump": "i",
      "offset": [
        8069,
        8093
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8811": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8812": {
      "op": "POP"
    },
    "8813": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8815": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8816": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8817": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "18"
    },
    "8818": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8819": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "8821": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8822": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "18"
    },
    "8823": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8824": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8825": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "8827": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP7",
      "path": "18"
    },
    "8828": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "18"
    },
    "8829": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8836": {
      "op": "SHL"
    },
    "8837": {
      "op": "SUB"
    },
    "8838": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8839": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "8840": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "AND",
      "path": "18"
    },
    "8841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8845": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "8847": {
      "op": "SHL"
    },
    "8848": {
      "op": "SUB"
    },
    "8849": {
      "op": "NOT"
    },
    "8850": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8851": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8852": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "AND",
      "path": "18"
    },
    "8853": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "OR",
      "path": "18"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8858": {
      "op": "SHL"
    },
    "8859": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "8862": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "8863": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8864": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "AND",
      "path": "18"
    },
    "8865": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8866": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "MUL",
      "path": "18"
    },
    "8867": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8868": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8869": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8870": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "OR",
      "path": "18"
    },
    "8871": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8872": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8873": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8874": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "8876": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8877": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "18"
    },
    "8878": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8879": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "8881": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8882": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "18"
    },
    "8883": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8884": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "8886": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8887": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "18"
    },
    "8888": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8889": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "8891": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8892": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "18"
    },
    "8893": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8894": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8895": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC0"
    },
    "8897": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP9",
      "path": "18"
    },
    "8898": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "18"
    },
    "8899": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8900": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "8902": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP10",
      "path": "18"
    },
    "8903": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "18"
    },
    "8904": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8905": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "8908": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8909": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP12",
      "path": "18"
    },
    "8910": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "18"
    },
    "8911": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8912": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "8915": {
      "op": "NOT"
    },
    "8916": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8917": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "8918": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "AND",
      "path": "18"
    },
    "8919": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "8920": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8921": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8922": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "8925": {
      "op": "NOT"
    },
    "8926": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "AND",
      "path": "18"
    },
    "8927": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "8928": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8929": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "8930": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "OR",
      "path": "18"
    },
    "8931": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF8"
    },
    "8933": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8934": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8935": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8936": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SHR",
      "path": "18"
    },
    "8937": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8938": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "8939": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "MUL",
      "path": "18"
    },
    "8940": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "OR",
      "path": "18"
    },
    "8941": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000"
    },
    "8962": {
      "op": "NOT"
    },
    "8963": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "AND",
      "path": "18"
    },
    "8964": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH3",
      "path": "18",
      "value": "0x10000"
    },
    "8968": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "8969": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8970": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "8971": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "AND",
      "path": "18"
    },
    "8972": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8973": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8974": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8975": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "MUL",
      "path": "18"
    },
    "8976": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000"
    },
    "8997": {
      "op": "NOT"
    },
    "8998": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "AND",
      "path": "18"
    },
    "8999": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "9000": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9001": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "9002": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "OR",
      "path": "18"
    },
    "9003": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH5",
      "path": "18",
      "value": "0x100000000"
    },
    "9009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9013": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9015": {
      "op": "SHL"
    },
    "9016": {
      "op": "SUB"
    },
    "9017": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9018": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "9019": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "AND",
      "path": "18"
    },
    "9020": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9021": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9022": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9023": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "MUL",
      "path": "18"
    },
    "9024": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "OR",
      "path": "18"
    },
    "9025": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9026": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9027": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "9028": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x120"
    },
    "9031": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP5",
      "path": "18"
    },
    "9032": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "18"
    },
    "9033": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9034": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "9036": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP5",
      "path": "18"
    },
    "9037": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "18"
    },
    "9038": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "9039": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x140"
    },
    "9042": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP5",
      "path": "18"
    },
    "9043": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "18"
    },
    "9044": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9045": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x6"
    },
    "9047": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP5",
      "path": "18"
    },
    "9048": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "18"
    },
    "9049": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "9050": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x160"
    },
    "9053": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP5",
      "path": "18"
    },
    "9054": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "18"
    },
    "9055": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9056": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x7"
    },
    "9058": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9059": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "9060": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "18"
    },
    "9061": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9062": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "9063": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x180"
    },
    "9066": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9067": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "9068": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "18"
    },
    "9069": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9074": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9076": {
      "op": "SHL"
    },
    "9077": {
      "op": "SUB"
    },
    "9078": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "9079": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP6",
      "path": "18"
    },
    "9080": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "AND",
      "path": "18"
    },
    "9081": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "9098": {
      "op": "NOT"
    },
    "9099": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9100": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "9101": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "AND",
      "path": "18"
    },
    "9102": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "9103": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9104": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "9105": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "OR",
      "path": "18"
    },
    "9106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9108": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9110": {
      "op": "SHL"
    },
    "9111": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "9112": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9113": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "9114": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "AND",
      "path": "18"
    },
    "9115": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "9116": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9117": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "9118": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "MUL",
      "path": "18"
    },
    "9119": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "9120": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9121": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "9122": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "OR",
      "path": "18"
    },
    "9123": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9124": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9125": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8069,
        8093
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "9126": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8103,
        8115
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 72,
      "value": "0xE"
    },
    "9128": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8103,
        8121
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9129": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8103,
        8121
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "9130": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "9135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9137": {
      "op": "SHL"
    },
    "9138": {
      "op": "NOT"
    },
    "9139": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8103,
        8121
      ],
      "op": "AND",
      "path": "18"
    },
    "9140": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8103,
        8121
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "9145": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8103,
        8121
      ],
      "op": "DUP7",
      "path": "18"
    },
    "9146": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8103,
        8121
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9147": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8103,
        8121
      ],
      "op": "AND",
      "path": "18"
    },
    "9148": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8103,
        8121
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9149": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8103,
        8121
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "9150": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8103,
        8121
      ],
      "op": "MUL",
      "path": "18"
    },
    "9151": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8103,
        8121
      ],
      "op": "OR",
      "path": "18"
    },
    "9152": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8103,
        8121
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9153": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8103,
        8121
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "9154": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8152,
        8162
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 73
    },
    "9155": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8152,
        8162
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9156": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8137,
        8163
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9157": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8137,
        8163
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9158": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8137,
        8163
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9159": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8137,
        8163
      ],
      "op": "AND",
      "path": "18"
    },
    "9160": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8137,
        8163
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9161": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8137,
        8163
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x6F053DFBE49C7E82E9B2091B20E94C3BB32DE62F97ED3DFFE0213A33C0AF15B3"
    },
    "9194": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8137,
        8163
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9197": {
      "op": "SWAP1"
    },
    "9198": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        8137,
        8163
      ],
      "op": "LOG2",
      "path": "18"
    },
    "9199": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7435,
        8170
      ],
      "op": "POP",
      "path": "18"
    },
    "9200": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7435,
        8170
      ],
      "op": "POP",
      "path": "18"
    },
    "9201": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "POP",
      "path": "18"
    },
    "9202": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "POP",
      "path": "18"
    },
    "9203": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "POP",
      "path": "18"
    },
    "9204": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "POP",
      "path": "18"
    },
    "9205": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "POP",
      "path": "18"
    },
    "9206": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "POP",
      "path": "18"
    },
    "9207": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "POP",
      "path": "18"
    },
    "9208": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "POP",
      "path": "18"
    },
    "9209": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "POP",
      "path": "18"
    },
    "9210": {
      "fn": "HouseOfPanda.createProject",
      "offset": [
        7128,
        8170
      ],
      "op": "POP",
      "path": "18"
    },
    "9211": {
      "fn": "HouseOfPanda.createProject",
      "jump": "o",
      "offset": [
        7128,
        8170
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9212": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9213": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17276,
        17294
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2430"
    },
    "9216": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9218": {
      "op": "MLOAD"
    },
    "9219": {
      "op": "DUP1"
    },
    "9220": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9222": {
      "op": "ADD"
    },
    "9223": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9225": {
      "op": "MSTORE"
    },
    "9226": {
      "op": "DUP1"
    },
    "9227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9229": {
      "op": "DUP2"
    },
    "9230": {
      "op": "MSTORE"
    },
    "9231": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9233": {
      "op": "ADD"
    },
    "9234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9240": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9242": {
      "op": "SHL"
    },
    "9243": {
      "op": "SUB"
    },
    "9244": {
      "op": "AND"
    },
    "9245": {
      "op": "DUP2"
    },
    "9246": {
      "op": "MSTORE"
    },
    "9247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9249": {
      "op": "ADD"
    },
    "9250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9252": {
      "op": "DUP2"
    },
    "9253": {
      "op": "MSTORE"
    },
    "9254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9256": {
      "op": "ADD"
    },
    "9257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9259": {
      "op": "DUP2"
    },
    "9260": {
      "op": "MSTORE"
    },
    "9261": {
      "op": "POP"
    },
    "9262": {
      "op": "SWAP1"
    },
    "9263": {
      "op": "JUMP"
    },
    "9264": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17276,
        17294
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9265": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17319
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 74,
      "value": "0xF"
    },
    "9267": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17319
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "9268": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9270": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9271": {
      "op": "PUSH4",
      "value": "0xAEAED1B7"
    },
    "9276": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9278": {
      "op": "SHL"
    },
    "9279": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9280": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9287": {
      "op": "SHL"
    },
    "9288": {
      "op": "SUB"
    },
    "9289": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17319
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9290": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17319
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9291": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17319
      ],
      "op": "AND",
      "path": "18"
    },
    "9292": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17319
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9293": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17334
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xAEAED1B7"
    },
    "9298": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17334
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9299": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2462"
    },
    "9302": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9303": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17335,
        17342
      ],
      "op": "DUP7",
      "path": "18"
    },
    "9304": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17335,
        17342
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9305": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17351,
        17360
      ],
      "op": "DUP7",
      "path": "18"
    },
    "9306": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17351,
        17360
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9307": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "9309": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "ADD",
      "path": "18"
    },
    "9310": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5185"
    },
    "9313": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "jump": "i",
      "offset": [
        17313,
        17362
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9314": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9315": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "9317": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9319": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9320": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9321": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "DUP4",
      "path": "18"
    },
    "9322": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "SUB",
      "path": "18"
    },
    "9323": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9324": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "DUP7",
      "path": "18"
    },
    "9325": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "GAS",
      "path": "18"
    },
    "9326": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "9327": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "9328": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9329": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "9330": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x247F"
    },
    "9333": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9334": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "9335": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "9337": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9338": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "9339": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "9340": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "9342": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "REVERT",
      "path": "18"
    },
    "9343": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9344": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "POP",
      "path": "18"
    },
    "9345": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "POP",
      "path": "18"
    },
    "9346": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "POP",
      "path": "18"
    },
    "9347": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "POP",
      "path": "18"
    },
    "9348": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9350": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9351": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "9352": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "9354": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "NOT",
      "path": "18"
    },
    "9355": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "9357": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9358": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "ADD",
      "path": "18"
    },
    "9359": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "AND",
      "path": "18"
    },
    "9360": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9361": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "ADD",
      "path": "18"
    },
    "9362": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9363": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9365": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9366": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "POP",
      "path": "18"
    },
    "9367": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9368": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "ADD",
      "path": "18"
    },
    "9369": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9370": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x24A3"
    },
    "9373": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9374": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9375": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x51A4"
    },
    "9378": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "jump": "i",
      "offset": [
        17313,
        17362
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9379": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17313,
        17362
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9380": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17306,
        17362
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "9381": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "offset": [
        17172,
        17369
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "9382": {
      "op": "POP"
    },
    "9383": {
      "op": "POP"
    },
    "9384": {
      "op": "POP"
    },
    "9385": {
      "fn": "HouseOfPanda.getHoldingInfo",
      "jump": "o",
      "offset": [
        17172,
        17369
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9386": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9541,
        9804
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9387": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        888,
        893
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xC"
    },
    "9389": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        888,
        893
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "9390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9396": {
      "op": "SHL"
    },
    "9397": {
      "op": "SUB"
    },
    "9398": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        888,
        893
      ],
      "op": "AND",
      "path": "17"
    },
    "9399": {
      "offset": [
        2354,
        2364
      ],
      "op": "CALLER",
      "path": "18"
    },
    "9400": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        877,
        893
      ],
      "op": "EQ",
      "path": "17"
    },
    "9401": {
      "offset": [
        2345,
        2389
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9402": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        2345,
        2389
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x24C7"
    },
    "9405": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        2345,
        2389
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9406": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        2345,
        2389
      ],
      "op": "POP",
      "path": "18"
    },
    "9407": {
      "offset": [
        2369,
        2389
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x24C7"
    },
    "9410": {
      "offset": [
        2378,
        2388
      ],
      "op": "CALLER",
      "path": "18"
    },
    "9411": {
      "offset": [
        2369,
        2377
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x30AD"
    },
    "9414": {
      "jump": "i",
      "offset": [
        2369,
        2389
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9415": {
      "branch": 203,
      "fn": "HasAdmin._isAdmin",
      "offset": [
        2369,
        2389
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9416": {
      "offset": [
        2337,
        2407
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2503"
    },
    "9419": {
      "branch": 203,
      "offset": [
        2337,
        2407
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9420": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        2337,
        2407
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9422": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        2337,
        2407
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9423": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9427": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9429": {
      "op": "SHL"
    },
    "9430": {
      "offset": [
        2337,
        2407
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9431": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        2337,
        2407
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9432": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9434": {
      "offset": [
        2337,
        2407
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "9436": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        2337,
        2407
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9437": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        2337,
        2407
      ],
      "op": "ADD",
      "path": "18"
    },
    "9438": {
      "op": "MSTORE"
    },
    "9439": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "9441": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9443": {
      "op": "DUP3"
    },
    "9444": {
      "op": "ADD"
    },
    "9445": {
      "op": "MSTORE"
    },
    "9446": {
      "op": "PUSH13",
      "value": "0x10B0B236B4B71010B7BBB732B9"
    },
    "9460": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "9462": {
      "op": "SHL"
    },
    "9463": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9465": {
      "op": "DUP3"
    },
    "9466": {
      "op": "ADD"
    },
    "9467": {
      "op": "MSTORE"
    },
    "9468": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9470": {
      "op": "ADD"
    },
    "9471": {
      "offset": [
        2337,
        2407
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "9474": {
      "op": "JUMP"
    },
    "9475": {
      "offset": [
        2337,
        2407
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9476": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8293
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "9481": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8293
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9482": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8293
      ],
      "op": "DUP4",
      "path": "18"
    },
    "9483": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8293
      ],
      "op": "AND",
      "path": "18"
    },
    "9484": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8234,
        8238
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "9486": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9487": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9488": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9489": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8266
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "9491": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9493": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9494": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9496": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9497": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8277
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "9498": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8280
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "9499": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8280
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9500": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8280
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9501": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8280
      ],
      "op": "AND",
      "path": "18"
    },
    "9502": {
      "fn": "HouseOfPanda._exists",
      "offset": [
        8257,
        8293
      ],
      "op": "EQ",
      "path": "18"
    },
    "9503": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9658,
        9697
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 75,
      "value": "0x253A"
    },
    "9506": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9658,
        9697
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9507": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9658,
        9697
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9509": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9658,
        9697
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9510": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9514": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9516": {
      "op": "SHL"
    },
    "9517": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9658,
        9697
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9518": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9658,
        9697
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9519": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9658,
        9697
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "9521": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9658,
        9697
      ],
      "op": "ADD",
      "path": "18"
    },
    "9522": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9658,
        9697
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "9525": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9658,
        9697
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9526": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9658,
        9697
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4ECF"
    },
    "9529": {
      "fn": "HouseOfPanda.setProjectStatus",
      "jump": "i",
      "offset": [
        9658,
        9697
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9530": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9658,
        9697
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9531": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9727
      ],
      "op": "PUSH4",
      "path": "18",
      "statement": 76,
      "value": "0xFFFFFFFF"
    },
    "9536": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9727
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9537": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9727
      ],
      "op": "AND",
      "path": "18"
    },
    "9538": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9727
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "9540": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9727
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9541": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9727
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9542": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9727
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9543": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9716
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "9545": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9727
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9547": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9727
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9548": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9727
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9550": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9727
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9551": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9727
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9552": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9727
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "9553": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9734
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "9555": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9734
      ],
      "op": "ADD",
      "path": "18"
    },
    "9556": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9743
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9557": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9743
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "9558": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "9561": {
      "op": "NOT"
    },
    "9562": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9743
      ],
      "op": "AND",
      "path": "18"
    },
    "9563": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9743
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "9566": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9743
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF8"
    },
    "9568": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9743
      ],
      "op": "DUP8",
      "path": "18"
    },
    "9569": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9743
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9570": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9743
      ],
      "op": "SHR",
      "path": "18"
    },
    "9571": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9743
      ],
      "op": "MUL",
      "path": "18"
    },
    "9572": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9743
      ],
      "op": "OR",
      "path": "18"
    },
    "9573": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9743
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9574": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9743
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "9575": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9758,
        9797
      ],
      "op": "MLOAD",
      "path": "18",
      "statement": 77
    },
    "9576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9580": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9582": {
      "op": "SHL"
    },
    "9583": {
      "op": "SUB"
    },
    "9584": {
      "op": "NOT"
    },
    "9585": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9758,
        9797
      ],
      "op": "DUP5",
      "path": "18"
    },
    "9586": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9758,
        9797
      ],
      "op": "AND",
      "path": "18"
    },
    "9587": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9758,
        9797
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "9588": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9707,
        9727
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9589": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9758,
        9797
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x1E59E47AF4D9B02977749192DE0A0E8C70AE8EF5CF99CEBB7E2F707571FD0AB7"
    },
    "9622": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9758,
        9797
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9623": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9758,
        9797
      ],
      "op": "LOG3",
      "path": "18"
    },
    "9624": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9541,
        9804
      ],
      "op": "POP",
      "path": "18"
    },
    "9625": {
      "fn": "HouseOfPanda.setProjectStatus",
      "offset": [
        9541,
        9804
      ],
      "op": "POP",
      "path": "18"
    },
    "9626": {
      "fn": "HouseOfPanda.setProjectStatus",
      "jump": "o",
      "offset": [
        9541,
        9804
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9627": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2254,
        2705
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9628": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2514,
        2534
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "9630": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2514,
        2534
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9631": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9633": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9634": {
      "op": "PUSH4",
      "value": "0xC4552791"
    },
    "9639": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9641": {
      "op": "SHL"
    },
    "9642": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9643": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "9644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9650": {
      "op": "SHL"
    },
    "9651": {
      "op": "SUB"
    },
    "9652": {
      "op": "DUP5"
    },
    "9653": {
      "op": "DUP2"
    },
    "9654": {
      "op": "AND"
    },
    "9655": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "9657": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "DUP4",
      "path": "16"
    },
    "9658": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "ADD",
      "path": "16"
    },
    "9659": {
      "op": "MSTORE"
    },
    "9660": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2377,
        2392
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "9662": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2377,
        2392
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "9663": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2514,
        2534
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9664": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2514,
        2534
      ],
      "op": "AND",
      "path": "16"
    },
    "9665": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2514,
        2534
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9666": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2549,
        2600
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9667": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2549,
        2600
      ],
      "op": "DUP5",
      "path": "16"
    },
    "9668": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2549,
        2600
      ],
      "op": "AND",
      "path": "16"
    },
    "9669": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2549,
        2600
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9670": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2514,
        2534
      ],
      "op": "DUP3",
      "path": "16"
    },
    "9671": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2514,
        2534
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9672": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2578
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC4552791"
    },
    "9677": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2578
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9678": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9680": {
      "op": "ADD"
    },
    "9681": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "9683": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9685": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9686": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9687": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "DUP4",
      "path": "16"
    },
    "9688": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "SUB",
      "path": "16"
    },
    "9689": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9690": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "DUP7",
      "path": "16"
    },
    "9691": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "GAS",
      "path": "16"
    },
    "9692": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "9693": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "9694": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9695": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "9696": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x25ED"
    },
    "9699": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "9700": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "9701": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "9703": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9704": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "9705": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "9706": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "9708": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "REVERT",
      "path": "16"
    },
    "9709": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9710": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "POP",
      "path": "16"
    },
    "9711": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "POP",
      "path": "16"
    },
    "9712": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "POP",
      "path": "16"
    },
    "9713": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "POP",
      "path": "16"
    },
    "9714": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9716": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9717": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "9718": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "9720": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "NOT",
      "path": "16"
    },
    "9721": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "9723": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "DUP3",
      "path": "16"
    },
    "9724": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "ADD",
      "path": "16"
    },
    "9725": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "AND",
      "path": "16"
    },
    "9726": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "DUP3",
      "path": "16"
    },
    "9727": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "ADD",
      "path": "16"
    },
    "9728": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9729": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9731": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "9732": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "POP",
      "path": "16"
    },
    "9733": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9734": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "ADD",
      "path": "16"
    },
    "9735": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9736": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2611"
    },
    "9739": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9740": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9741": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4F30"
    },
    "9744": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "jump": "i",
      "offset": [
        2557,
        2586
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9745": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2557,
        2586
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9750": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9752": {
      "op": "SHL"
    },
    "9753": {
      "op": "SUB"
    },
    "9754": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2549,
        2600
      ],
      "op": "AND",
      "path": "16"
    },
    "9755": {
      "branch": 244,
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2549,
        2600
      ],
      "op": "SUB",
      "path": "16"
    },
    "9756": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2545,
        2638
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2629"
    },
    "9759": {
      "branch": 244,
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2545,
        2638
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "9760": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2623,
        2627
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 78,
      "value": "0x1"
    },
    "9762": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2616,
        2627
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9763": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2616,
        2627
      ],
      "op": "POP",
      "path": "16"
    },
    "9764": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2616,
        2627
      ],
      "op": "POP",
      "path": "16"
    },
    "9765": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2616,
        2627
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x85B"
    },
    "9768": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2616,
        2627
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9769": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2545,
        2638
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9776": {
      "op": "SHL"
    },
    "9777": {
      "op": "SUB"
    },
    "9778": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 79
    },
    "9779": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9780": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "AND",
      "path": "2"
    },
    "9781": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3542,
        3546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9783": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9784": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9785": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9786": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9788": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9790": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9791": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9792": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9793": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9795": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9796": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9797": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9798": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9799": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9800": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "AND",
      "path": "2"
    },
    "9801": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9802": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9803": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9804": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9805": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9806": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9807": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9808": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "9810": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "AND",
      "path": "2"
    },
    "9811": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2655,
        2698
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 80,
      "value": "0xDCA"
    },
    "9814": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9815": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9822": {
      "op": "SHL"
    },
    "9823": {
      "op": "SUB"
    },
    "9824": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 81
    },
    "9825": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "AND",
      "path": "2"
    },
    "9826": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "11"
    },
    "9827": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "EQ",
      "path": "2"
    },
    "9828": {
      "branch": 232,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9829": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2673"
    },
    "9832": {
      "branch": 232,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3936
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9833": {
      "op": "POP"
    },
    "9834": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3900,
        3936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2673"
    },
    "9837": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3917,
        3921
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9838": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "11"
    },
    "9839": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "offset": [
        2254,
        2705
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x259B"
    },
    "9842": {
      "fn": "ERC1155Tradable.isApprovedForAll",
      "jump": "i",
      "offset": [
        2254,
        2705
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9843": {
      "branch": 233,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3900,
        3936
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9844": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26D1"
    },
    "9847": {
      "branch": 233,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9848": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9850": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9851": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9855": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9857": {
      "op": "SHL"
    },
    "9858": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9859": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9862": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9864": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9865": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "ADD",
      "path": "2"
    },
    "9866": {
      "op": "MSTORE"
    },
    "9867": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "9869": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9871": {
      "op": "DUP3"
    },
    "9872": {
      "op": "ADD"
    },
    "9873": {
      "op": "MSTORE"
    },
    "9874": {
      "op": "PUSH32",
      "value": "0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
    },
    "9907": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9909": {
      "op": "DUP3"
    },
    "9910": {
      "op": "ADD"
    },
    "9911": {
      "op": "MSTORE"
    },
    "9912": {
      "op": "PUSH9",
      "value": "0x8185C1C1C9BDD9959"
    },
    "9922": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "9924": {
      "op": "SHL"
    },
    "9925": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9927": {
      "op": "DUP3"
    },
    "9928": {
      "op": "ADD"
    },
    "9929": {
      "op": "MSTORE"
    },
    "9930": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9932": {
      "op": "ADD"
    },
    "9933": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82F"
    },
    "9936": {
      "op": "JUMP"
    },
    "9937": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9938": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4013,
        4058
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 82,
      "value": "0x945"
    },
    "9941": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4031,
        4035
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9942": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4037,
        4039
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9943": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4041,
        4043
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9944": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4045,
        4051
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9945": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4053,
        4057
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9946": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4013,
        4030
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35F1"
    },
    "9949": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4013,
        4058
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9950": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9951": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9953": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9960": {
      "op": "SHL"
    },
    "9961": {
      "op": "SUB"
    },
    "9962": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "9963": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "11"
    },
    "9964": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "9965": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2708"
    },
    "9968": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9969": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9971": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9972": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9976": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9978": {
      "op": "SHL"
    },
    "9979": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9980": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9981": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9983": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "9984": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82F"
    },
    "9987": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9988": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DDE"
    },
    "9991": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9992": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9999": {
      "op": "SHL"
    },
    "10000": {
      "op": "SUB"
    },
    "10001": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 83
    },
    "10002": {
      "branch": 248,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "10003": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x276D"
    },
    "10006": {
      "branch": 248,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10007": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10009": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10010": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10014": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10016": {
      "op": "SHL"
    },
    "10017": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10018": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10021": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10023": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10024": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "10025": {
      "op": "MSTORE"
    },
    "10026": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "10028": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10030": {
      "op": "DUP3"
    },
    "10031": {
      "op": "ADD"
    },
    "10032": {
      "op": "MSTORE"
    },
    "10033": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "10066": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10068": {
      "op": "DUP3"
    },
    "10069": {
      "op": "ADD"
    },
    "10070": {
      "op": "MSTORE"
    },
    "10071": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "10078": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "10080": {
      "op": "SHL"
    },
    "10081": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10083": {
      "op": "DUP3"
    },
    "10084": {
      "op": "ADD"
    },
    "10085": {
      "op": "MSTORE"
    },
    "10086": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10088": {
      "op": "ADD"
    },
    "10089": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82F"
    },
    "10092": {
      "op": "JUMP"
    },
    "10093": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10094": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 84,
      "value": "0x97F"
    },
    "10097": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10098": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3371"
    },
    "10101": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10102": {
      "fn": "ERC1155._setURI",
      "offset": [
        8028,
        8114
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10103": {
      "fn": "ERC1155._setURI",
      "offset": [
        8094,
        8098
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 85,
      "value": "0x2"
    },
    "10105": {
      "fn": "ERC1155._setURI",
      "offset": [
        8094,
        8107
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2782"
    },
    "10108": {
      "fn": "ERC1155._setURI",
      "offset": [
        8101,
        8107
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10109": {
      "fn": "ERC1155._setURI",
      "offset": [
        8094,
        8098
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10110": {
      "fn": "ERC1155._setURI",
      "offset": [
        8094,
        8107
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F93"
    },
    "10113": {
      "fn": "ERC1155._setURI",
      "jump": "i",
      "offset": [
        8094,
        8107
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10114": {
      "fn": "ERC1155._setURI",
      "offset": [
        8094,
        8107
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10115": {
      "fn": "ERC1155._setURI",
      "offset": [
        8094,
        8107
      ],
      "op": "POP",
      "path": "2"
    },
    "10116": {
      "fn": "ERC1155._setURI",
      "offset": [
        8028,
        8114
      ],
      "op": "POP",
      "path": "2"
    },
    "10117": {
      "fn": "ERC1155._setURI",
      "jump": "o",
      "offset": [
        8028,
        8114
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10118": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2612,
        3082
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "10119": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2784,
        2788
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "10121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10127": {
      "op": "SHL"
    },
    "10128": {
      "op": "SUB"
    },
    "10129": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2808,
        2828
      ],
      "op": "DUP7",
      "path": "24",
      "statement": 86
    },
    "10130": {
      "branch": 247,
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2808,
        2828
      ],
      "op": "AND",
      "path": "24"
    },
    "10131": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2800,
        2870
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x27EC"
    },
    "10134": {
      "branch": 247,
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2800,
        2870
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "10135": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2800,
        2870
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "10137": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2800,
        2870
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "10138": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10142": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10144": {
      "op": "SHL"
    },
    "10145": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2800,
        2870
      ],
      "op": "DUP2",
      "path": "24"
    },
    "10146": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2800,
        2870
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "10147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10149": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2800,
        2870
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "10151": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2800,
        2870
      ],
      "op": "DUP3",
      "path": "24"
    },
    "10152": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2800,
        2870
      ],
      "op": "ADD",
      "path": "24"
    },
    "10153": {
      "op": "MSTORE"
    },
    "10154": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "10156": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10158": {
      "op": "DUP3"
    },
    "10159": {
      "op": "ADD"
    },
    "10160": {
      "op": "MSTORE"
    },
    "10161": {
      "op": "PUSH32",
      "value": "0x4E61746976654D6574615472616E73616374696F6E3A20494E56414C49445F53"
    },
    "10194": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10196": {
      "op": "DUP3"
    },
    "10197": {
      "op": "ADD"
    },
    "10198": {
      "op": "MSTORE"
    },
    "10199": {
      "op": "PUSH5",
      "value": "0x24A3A722A9"
    },
    "10205": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "10207": {
      "op": "SHL"
    },
    "10208": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10210": {
      "op": "DUP3"
    },
    "10211": {
      "op": "ADD"
    },
    "10212": {
      "op": "MSTORE"
    },
    "10213": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10215": {
      "op": "ADD"
    },
    "10216": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2800,
        2870
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x82F"
    },
    "10219": {
      "op": "JUMP"
    },
    "10220": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2800,
        2870
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "10221": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 87,
      "value": "0x1"
    },
    "10223": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2948,
        2995
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x27FF"
    },
    "10226": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2967,
        2994
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x27FA"
    },
    "10229": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2987,
        2993
      ],
      "op": "DUP8",
      "path": "24"
    },
    "10230": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2967,
        2986
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x370E"
    },
    "10233": {
      "fn": "NativeMetaTransaction.verify",
      "jump": "i",
      "offset": [
        2967,
        2994
      ],
      "op": "JUMP",
      "path": "24"
    },
    "10234": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2967,
        2994
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "10235": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2948,
        2966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x376E"
    },
    "10238": {
      "fn": "NativeMetaTransaction.verify",
      "jump": "i",
      "offset": [
        2948,
        2995
      ],
      "op": "JUMP",
      "path": "24"
    },
    "10239": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2948,
        2995
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "10240": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "10242": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "DUP1",
      "path": "24"
    },
    "10243": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "10244": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "10246": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "DUP2",
      "path": "24"
    },
    "10247": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "10248": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "10250": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "DUP2",
      "path": "24"
    },
    "10251": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "ADD",
      "path": "24"
    },
    "10252": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "DUP1",
      "path": "24"
    },
    "10253": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "DUP4",
      "path": "24"
    },
    "10254": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "10255": {
      "op": "SWAP3"
    },
    "10256": {
      "op": "SWAP1"
    },
    "10257": {
      "op": "SWAP3"
    },
    "10258": {
      "op": "MSTORE"
    },
    "10259": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10261": {
      "op": "DUP6"
    },
    "10262": {
      "op": "AND"
    },
    "10263": {
      "op": "SWAP1"
    },
    "10264": {
      "op": "DUP3"
    },
    "10265": {
      "op": "ADD"
    },
    "10266": {
      "op": "MSTORE"
    },
    "10267": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10269": {
      "op": "DUP2"
    },
    "10270": {
      "op": "ADD"
    },
    "10271": {
      "op": "DUP7"
    },
    "10272": {
      "op": "SWAP1"
    },
    "10273": {
      "op": "MSTORE"
    },
    "10274": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10276": {
      "op": "DUP2"
    },
    "10277": {
      "op": "ADD"
    },
    "10278": {
      "op": "DUP6"
    },
    "10279": {
      "op": "SWAP1"
    },
    "10280": {
      "op": "MSTORE"
    },
    "10281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10283": {
      "op": "ADD"
    },
    "10284": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "10286": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "10288": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "10289": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "10291": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "DUP2",
      "path": "24"
    },
    "10292": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "SUB",
      "path": "24"
    },
    "10293": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "10294": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "DUP1",
      "path": "24"
    },
    "10295": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "DUP5",
      "path": "24"
    },
    "10296": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "SUB",
      "path": "24"
    },
    "10297": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "10298": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "DUP6",
      "path": "24"
    },
    "10299": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "GAS",
      "path": "24"
    },
    "10300": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "STATICCALL",
      "path": "24"
    },
    "10301": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "10302": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "DUP1",
      "path": "24"
    },
    "10303": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "10304": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x284D"
    },
    "10307": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "10308": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "10309": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "10311": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "DUP1",
      "path": "24"
    },
    "10312": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "10313": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "10314": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "10316": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "REVERT",
      "path": "24"
    },
    "10317": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "10318": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "POP",
      "path": "24"
    },
    "10319": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "POP",
      "path": "24"
    },
    "10320": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "POP",
      "path": "24"
    },
    "10321": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "10323": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "10325": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "10326": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "SUB",
      "path": "24"
    },
    "10327": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2921,
        3075
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "10328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10334": {
      "op": "SHL"
    },
    "10335": {
      "op": "SUB"
    },
    "10336": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2899,
        3075
      ],
      "op": "AND",
      "path": "24"
    },
    "10337": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2899,
        2905
      ],
      "op": "DUP7",
      "path": "24"
    },
    "10338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10344": {
      "op": "SHL"
    },
    "10345": {
      "op": "SUB"
    },
    "10346": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2899,
        3075
      ],
      "op": "AND",
      "path": "24"
    },
    "10347": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2899,
        3075
      ],
      "op": "EQ",
      "path": "24"
    },
    "10348": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2880,
        3075
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "10349": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2880,
        3075
      ],
      "op": "POP",
      "path": "24"
    },
    "10350": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2612,
        3082
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "10351": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2612,
        3082
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "10352": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2612,
        3082
      ],
      "op": "POP",
      "path": "24"
    },
    "10353": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2612,
        3082
      ],
      "op": "POP",
      "path": "24"
    },
    "10354": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2612,
        3082
      ],
      "op": "POP",
      "path": "24"
    },
    "10355": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2612,
        3082
      ],
      "op": "POP",
      "path": "24"
    },
    "10356": {
      "fn": "NativeMetaTransaction.verify",
      "offset": [
        2612,
        3082
      ],
      "op": "POP",
      "path": "24"
    },
    "10357": {
      "fn": "NativeMetaTransaction.verify",
      "jump": "o",
      "offset": [
        2612,
        3082
      ],
      "op": "JUMP",
      "path": "24"
    },
    "10358": {
      "op": "JUMPDEST"
    },
    "10359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10361": {
      "op": "PUSH2",
      "value": "0x24A3"
    },
    "10364": {
      "op": "DUP3"
    },
    "10365": {
      "op": "DUP5"
    },
    "10366": {
      "op": "PUSH2",
      "value": "0x52B3"
    },
    "10369": {
      "jump": "i",
      "op": "JUMP"
    },
    "10370": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10371": {
      "fn": "ERC1155.uri",
      "offset": [
        1924,
        1937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "10373": {
      "fn": "ERC1155.uri",
      "offset": [
        1956,
        1960
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 88,
      "value": "0x2"
    },
    "10375": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10376": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10377": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2891"
    },
    "10380": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10381": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E13"
    },
    "10384": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10385": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10386": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10387": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10389": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "2"
    },
    "10390": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10392": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10393": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10394": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DIV",
      "path": "2"
    },
    "10395": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MUL",
      "path": "2"
    },
    "10396": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10398": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "2"
    },
    "10399": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10401": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10402": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10403": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10404": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "2"
    },
    "10405": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10407": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10408": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10409": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10410": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10411": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10412": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10413": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10414": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10415": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10417": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "2"
    },
    "10418": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10419": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10420": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10421": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28BD"
    },
    "10424": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10425": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E13"
    },
    "10428": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10429": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10430": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10431": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10432": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x290A"
    },
    "10435": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10436": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10437": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10439": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "LT",
      "path": "2"
    },
    "10440": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28DF"
    },
    "10443": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10444": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10447": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10448": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10449": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10450": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DIV",
      "path": "2"
    },
    "10451": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MUL",
      "path": "2"
    },
    "10452": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10453": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10454": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10455": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10457": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "2"
    },
    "10458": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10459": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x290A"
    },
    "10462": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10463": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10464": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10465": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "2"
    },
    "10466": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10467": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10468": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10470": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10471": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10473": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10475": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10476": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10477": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10478": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10479": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10480": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10481": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10482": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10483": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10485": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "2"
    },
    "10486": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10487": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10489": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "2"
    },
    "10490": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10491": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10492": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "GT",
      "path": "2"
    },
    "10493": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28ED"
    },
    "10496": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10497": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10498": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10499": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SUB",
      "path": "2"
    },
    "10500": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10502": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "AND",
      "path": "2"
    },
    "10503": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10504": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "2"
    },
    "10505": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10506": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10507": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "2"
    },
    "10508": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "2"
    },
    "10509": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "2"
    },
    "10510": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "2"
    },
    "10511": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "2"
    },
    "10512": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10513": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "2"
    },
    "10514": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10515": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10516": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "POP",
      "path": "2"
    },
    "10517": {
      "fn": "ERC1155.uri",
      "jump": "o",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10518": {
      "fn": "Strings.toString",
      "offset": [
        275,
        978
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10519": {
      "fn": "Strings.toString",
      "offset": [
        331,
        344
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "10521": {
      "fn": "Strings.toString",
      "offset": [
        548,
        553
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10522": {
      "fn": "Strings.toString",
      "offset": [
        557,
        558
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10524": {
      "branch": 251,
      "fn": "Strings.toString",
      "offset": [
        548,
        558
      ],
      "op": "SUB",
      "path": "12"
    },
    "10525": {
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x293D"
    },
    "10528": {
      "branch": 251,
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10529": {
      "op": "POP"
    },
    "10530": {
      "op": "POP"
    },
    "10531": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 89,
      "value": "0x40"
    },
    "10533": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10534": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10535": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10536": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10537": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "ADD",
      "path": "12"
    },
    "10538": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10539": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10540": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10541": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10543": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10544": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10545": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10547": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "10549": {
      "op": "SHL"
    },
    "10550": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10552": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10553": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "ADD",
      "path": "12"
    },
    "10554": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10555": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10556": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        275,
        978
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10557": {
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10558": {
      "fn": "Strings.toString",
      "offset": [
        619,
        624
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10559": {
      "fn": "Strings.toString",
      "offset": [
        604,
        616
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10561": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10562": {
      "fn": "Strings.toString",
      "offset": [
        665,
        674
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10563": {
      "fn": "Strings.toString",
      "offset": [
        665,
        674
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10564": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2967"
    },
    "10567": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10568": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 90
    },
    "10569": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2951"
    },
    "10572": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10573": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x50B5"
    },
    "10576": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        690,
        698
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10577": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10578": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10579": {
      "op": "POP"
    },
    "10580": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 91,
      "value": "0x2960"
    },
    "10583": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10584": {
      "op": "POP"
    },
    "10585": {
      "fn": "Strings.toString",
      "offset": [
        720,
        722
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10587": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10588": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x52C6"
    },
    "10591": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        712,
        722
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10592": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10593": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10594": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "POP",
      "path": "12"
    },
    "10595": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2941"
    },
    "10598": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10599": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10600": {
      "fn": "Strings.toString",
      "offset": [
        742,
        761
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10602": {
      "fn": "Strings.toString",
      "offset": [
        774,
        780
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10607": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10609": {
      "op": "SHL"
    },
    "10610": {
      "op": "SUB"
    },
    "10611": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10612": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "GT",
      "path": "12"
    },
    "10613": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10614": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2981"
    },
    "10617": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10618": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2981"
    },
    "10621": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4461"
    },
    "10624": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        764,
        781
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10625": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10626": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10628": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10629": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10630": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10631": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10632": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10633": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10634": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10636": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "12"
    },
    "10637": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10639": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "NOT",
      "path": "12"
    },
    "10640": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "AND",
      "path": "12"
    },
    "10641": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10643": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "12"
    },
    "10644": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10645": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "12"
    },
    "10646": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10648": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10649": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10650": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10651": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x29AB"
    },
    "10654": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10655": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10657": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10658": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "12"
    },
    "10659": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10660": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10661": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "10662": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10663": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "10664": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "12"
    },
    "10665": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10666": {
      "op": "POP"
    },
    "10667": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10668": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "POP",
      "path": "12"
    },
    "10669": {
      "fn": "Strings.toString",
      "offset": [
        742,
        781
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10670": {
      "fn": "Strings.toString",
      "offset": [
        742,
        781
      ],
      "op": "POP",
      "path": "12"
    },
    "10671": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10672": {
      "fn": "Strings.toString",
      "offset": [
        798,
        808
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10673": {
      "fn": "Strings.toString",
      "offset": [
        798,
        808
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10674": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDCA"
    },
    "10677": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10678": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 92,
      "value": "0x29C0"
    },
    "10681": {
      "fn": "Strings.toString",
      "offset": [
        834,
        835
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10683": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10684": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x52DA"
    },
    "10687": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        824,
        835
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10688": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10689": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10690": {
      "op": "POP"
    },
    "10691": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 93,
      "value": "0x29CD"
    },
    "10694": {
      "fn": "Strings.toString",
      "offset": [
        900,
        902
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10696": {
      "fn": "Strings.toString",
      "offset": [
        892,
        897
      ],
      "op": "DUP7",
      "path": "12"
    },
    "10697": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x52ED"
    },
    "10700": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        892,
        902
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10701": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10702": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x29D8"
    },
    "10705": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10706": {
      "fn": "Strings.toString",
      "offset": [
        879,
        881
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x30"
    },
    "10708": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x52B3"
    },
    "10711": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        879,
        903
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10712": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10713": {
      "fn": "Strings.toString",
      "offset": [
        866,
        905
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF8"
    },
    "10715": {
      "fn": "Strings.toString",
      "offset": [
        866,
        905
      ],
      "op": "SHL",
      "path": "12"
    },
    "10716": {
      "fn": "Strings.toString",
      "offset": [
        849,
        855
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10717": {
      "fn": "Strings.toString",
      "offset": [
        856,
        862
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10718": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10719": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10720": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10721": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "LT",
      "path": "12"
    },
    "10722": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x29ED"
    },
    "10725": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10726": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x29ED"
    },
    "10729": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5089"
    },
    "10732": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        849,
        863
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10733": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10734": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10736": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "ADD",
      "path": "12"
    },
    "10737": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "ADD",
      "path": "12"
    },
    "10738": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10743": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10745": {
      "op": "SHL"
    },
    "10746": {
      "op": "SUB"
    },
    "10747": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "NOT",
      "path": "12"
    },
    "10748": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "AND",
      "path": "12"
    },
    "10749": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10750": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10751": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10753": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "BYTE",
      "path": "12"
    },
    "10754": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10755": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "MSTORE8",
      "path": "12"
    },
    "10756": {
      "op": "POP"
    },
    "10757": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 94,
      "value": "0x2A0F"
    },
    "10760": {
      "fn": "Strings.toString",
      "offset": [
        928,
        930
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10762": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "DUP7",
      "path": "12"
    },
    "10763": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x52C6"
    },
    "10766": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        919,
        930
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10767": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10768": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "10769": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "POP",
      "path": "12"
    },
    "10770": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x29AF"
    },
    "10773": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10774": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10775": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6380,
        6387
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 95
    },
    "10776": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6380,
        6394
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10777": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6366,
        6369
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10778": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6366,
        6376
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10779": {
      "branch": 234,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6366,
        6394
      ],
      "op": "EQ",
      "path": "2"
    },
    "10780": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A78"
    },
    "10783": {
      "branch": 234,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10784": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10786": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10787": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10791": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10793": {
      "op": "SHL"
    },
    "10794": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10795": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10798": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10800": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10801": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "ADD",
      "path": "2"
    },
    "10802": {
      "op": "MSTORE"
    },
    "10803": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "10805": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10807": {
      "op": "DUP3"
    },
    "10808": {
      "op": "ADD"
    },
    "10809": {
      "op": "MSTORE"
    },
    "10810": {
      "op": "PUSH32",
      "value": "0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
    },
    "10843": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10845": {
      "op": "DUP3"
    },
    "10846": {
      "op": "ADD"
    },
    "10847": {
      "op": "MSTORE"
    },
    "10848": {
      "op": "PUSH8",
      "value": "0xDAD2E6DAC2E8C6D"
    },
    "10857": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "10859": {
      "op": "SHL"
    },
    "10860": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10862": {
      "op": "DUP3"
    },
    "10863": {
      "op": "ADD"
    },
    "10864": {
      "op": "MSTORE"
    },
    "10865": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10867": {
      "op": "ADD"
    },
    "10868": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82F"
    },
    "10871": {
      "op": "JUMP"
    },
    "10872": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10879": {
      "op": "SHL"
    },
    "10880": {
      "op": "SUB"
    },
    "10881": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6457,
        6473
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 96
    },
    "10882": {
      "branch": 235,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6457,
        6473
      ],
      "op": "AND",
      "path": "2"
    },
    "10883": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A9E"
    },
    "10886": {
      "branch": 235,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10887": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10889": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10890": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10894": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10896": {
      "op": "SHL"
    },
    "10897": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10898": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10899": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10901": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "ADD",
      "path": "2"
    },
    "10902": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82F"
    },
    "10905": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10906": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5301"
    },
    "10909": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6449,
        6515
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10910": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10911": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "11"
    },
    "10912": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6568,
        6628
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 97,
      "value": "0x2AAD"
    },
    "10915": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "DUP2",
      "path": "11"
    },
    "10916": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6599,
        6603
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10917": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6605,
        6607
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10918": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6609,
        6612
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10919": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6614,
        6621
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10920": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6623,
        6627
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10921": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6568,
        6588
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379E"
    },
    "10924": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6568,
        6628
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10925": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6568,
        6628
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10926": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6644,
        6653
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10928": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10929": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6663,
        6666
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10930": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6663,
        6673
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10931": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6659,
        6660
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10932": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6659,
        6673
      ],
      "op": "LT",
      "path": "2"
    },
    "10933": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10934": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B93"
    },
    "10937": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10938": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6694,
        6704
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10940": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6710
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10941": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6711,
        6712
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10942": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10943": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10944": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10945": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "LT",
      "path": "2"
    },
    "10946": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ACD"
    },
    "10949": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10950": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ACD"
    },
    "10953": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5089"
    },
    "10956": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6707,
        6713
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10957": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10958": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10960": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "MUL",
      "path": "2"
    },
    "10961": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10963": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "ADD",
      "path": "2"
    },
    "10964": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "ADD",
      "path": "2"
    },
    "10965": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10966": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6694,
        6713
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10967": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6694,
        6713
      ],
      "op": "POP",
      "path": "2"
    },
    "10968": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6727,
        6741
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10970": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6751
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10971": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6752,
        6753
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10972": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10973": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10974": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10975": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "LT",
      "path": "2"
    },
    "10976": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AEB"
    },
    "10979": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10980": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AEB"
    },
    "10983": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5089"
    },
    "10986": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6744,
        6754
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10987": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10988": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10990": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10991": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10992": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "MUL",
      "path": "2"
    },
    "10993": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10994": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10995": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10996": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "ADD",
      "path": "2"
    },
    "10997": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10998": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "ADD",
      "path": "2"
    },
    "10999": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11000": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6769,
        6788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11002": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11003": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11004": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11005": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11006": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11007": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11008": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11010": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11011": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11012": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11019": {
      "op": "SHL"
    },
    "11020": {
      "op": "SUB"
    },
    "11021": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "DUP15",
      "path": "2"
    },
    "11022": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "AND",
      "path": "2"
    },
    "11023": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11024": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11025": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11026": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "11027": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11028": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11029": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11030": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11031": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11032": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11033": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11034": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11035": {
      "op": "POP"
    },
    "11036": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 98
    },
    "11037": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11038": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "LT",
      "path": "2"
    },
    "11039": {
      "branch": 236,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11040": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B3B"
    },
    "11043": {
      "branch": 236,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11044": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11046": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11047": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11051": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11053": {
      "op": "SHL"
    },
    "11054": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11055": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11056": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11058": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "ADD",
      "path": "2"
    },
    "11059": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82F"
    },
    "11062": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11063": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5346"
    },
    "11066": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6824,
        6900
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11067": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11068": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6951
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 99,
      "value": "0x0"
    },
    "11070": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11071": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11072": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11073": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11075": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11076": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11077": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11078": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11080": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11081": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11082": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11089": {
      "op": "SHL"
    },
    "11090": {
      "op": "SUB"
    },
    "11091": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP15",
      "path": "2"
    },
    "11092": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11093": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "AND",
      "path": "2"
    },
    "11094": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP6",
      "path": "2"
    },
    "11095": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11096": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11097": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11098": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11099": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11100": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11101": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP6",
      "path": "2"
    },
    "11102": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP6",
      "path": "2"
    },
    "11103": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "SUB",
      "path": "2"
    },
    "11104": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6984
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11105": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6984
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11106": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 100
    },
    "11107": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "DUP12",
      "path": "2"
    },
    "11108": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "AND",
      "path": "2"
    },
    "11109": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11110": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11111": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11112": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11113": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11114": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11115": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11116": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11117": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6951
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11118": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B78"
    },
    "11121": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11122": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11123": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11124": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x52B3"
    },
    "11127": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7012,
        7039
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11128": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11129": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11130": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "POP",
      "path": "2"
    },
    "11131": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "POP",
      "path": "2"
    },
    "11132": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11133": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11134": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11135": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "POP",
      "path": "2"
    },
    "11136": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6680,
        7050
      ],
      "op": "POP",
      "path": "2"
    },
    "11137": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6680,
        7050
      ],
      "op": "POP",
      "path": "2"
    },
    "11138": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6680,
        7050
      ],
      "op": "POP",
      "path": "2"
    },
    "11139": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 101
    },
    "11140": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B8C"
    },
    "11143": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11144": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x50B5"
    },
    "11147": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6675,
        6678
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11148": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11149": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11150": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "POP",
      "path": "2"
    },
    "11151": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AB0"
    },
    "11154": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11155": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11156": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "POP",
      "path": "2"
    },
    "11157": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7095,
        7097
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 102
    },
    "11158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11162": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11164": {
      "op": "SHL"
    },
    "11165": {
      "op": "SUB"
    },
    "11166": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "AND",
      "path": "2"
    },
    "11167": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7089,
        7093
      ],
      "op": "DUP7",
      "path": "2"
    },
    "11168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11174": {
      "op": "SHL"
    },
    "11175": {
      "op": "SUB"
    },
    "11176": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "AND",
      "path": "2"
    },
    "11177": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7079,
        7087
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11184": {
      "op": "SHL"
    },
    "11185": {
      "op": "SUB"
    },
    "11186": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "AND",
      "path": "2"
    },
    "11187": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "11220": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7099,
        7102
      ],
      "op": "DUP8",
      "path": "2"
    },
    "11221": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7104,
        7111
      ],
      "op": "DUP8",
      "path": "2"
    },
    "11222": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11224": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11225": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BE3"
    },
    "11228": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11229": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11230": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11231": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5390"
    },
    "11234": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7065,
        7112
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11235": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11236": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11238": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11239": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11240": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11241": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SUB",
      "path": "2"
    },
    "11242": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11243": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "LOG4",
      "path": "2"
    },
    "11244": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7123,
        7198
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 103,
      "value": "0x2BF9"
    },
    "11247": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7159,
        7167
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11248": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7169,
        7173
      ],
      "op": "DUP8",
      "path": "2"
    },
    "11249": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7175,
        7177
      ],
      "op": "DUP8",
      "path": "2"
    },
    "11250": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7179,
        7182
      ],
      "op": "DUP8",
      "path": "2"
    },
    "11251": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7184,
        7191
      ],
      "op": "DUP8",
      "path": "2"
    },
    "11252": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7193,
        7197
      ],
      "op": "DUP8",
      "path": "2"
    },
    "11253": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7123,
        7158
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D70"
    },
    "11256": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7123,
        7198
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11257": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7123,
        7198
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11258": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6348,
        7205
      ],
      "op": "POP",
      "path": "2"
    },
    "11259": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "2"
    },
    "11260": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "2"
    },
    "11261": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "2"
    },
    "11262": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "2"
    },
    "11263": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "2"
    },
    "11264": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        6160,
        7205
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11265": {
      "fn": "HasAdmin._onlyAdmin",
      "offset": [
        466,
        557
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "11266": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        888,
        893
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xC"
    },
    "11268": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        888,
        893
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "11269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11275": {
      "op": "SHL"
    },
    "11276": {
      "op": "SUB"
    },
    "11277": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        888,
        893
      ],
      "op": "AND",
      "path": "17"
    },
    "11278": {
      "fn": "HasAdmin._onlyAdmin",
      "offset": [
        528,
        538
      ],
      "op": "CALLER",
      "path": "17",
      "statement": 104
    },
    "11279": {
      "fn": "HasAdmin._isAdmin",
      "offset": [
        877,
        893
      ],
      "op": "EQ",
      "path": "17"
    },
    "11280": {
      "fn": "HasAdmin._onlyAdmin",
      "offset": [
        511,
        550
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1EAC"
    },
    "11283": {
      "fn": "HasAdmin._onlyAdmin",
      "offset": [
        511,
        550
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "11284": {
      "fn": "HasAdmin._onlyAdmin",
      "offset": [
        511,
        550
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "11286": {
      "fn": "HasAdmin._onlyAdmin",
      "offset": [
        511,
        550
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "11287": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11291": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11293": {
      "op": "SHL"
    },
    "11294": {
      "fn": "HasAdmin._onlyAdmin",
      "offset": [
        511,
        550
      ],
      "op": "DUP2",
      "path": "17"
    },
    "11295": {
      "fn": "HasAdmin._onlyAdmin",
      "offset": [
        511,
        550
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "11296": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11298": {
      "fn": "HasAdmin._onlyAdmin",
      "offset": [
        511,
        550
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "11300": {
      "fn": "HasAdmin._onlyAdmin",
      "offset": [
        511,
        550
      ],
      "op": "DUP3",
      "path": "17"
    },
    "11301": {
      "fn": "HasAdmin._onlyAdmin",
      "offset": [
        511,
        550
      ],
      "op": "ADD",
      "path": "17"
    },
    "11302": {
      "op": "MSTORE"
    },
    "11303": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "11305": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11307": {
      "op": "DUP3"
    },
    "11308": {
      "op": "ADD"
    },
    "11309": {
      "op": "MSTORE"
    },
    "11310": {
      "op": "PUSH6",
      "value": "0x10B0B236B4B7"
    },
    "11317": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "11319": {
      "op": "SHL"
    },
    "11320": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11322": {
      "op": "DUP3"
    },
    "11323": {
      "op": "ADD"
    },
    "11324": {
      "op": "MSTORE"
    },
    "11325": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11327": {
      "op": "ADD"
    },
    "11328": {
      "fn": "HasAdmin._onlyAdmin",
      "offset": [
        511,
        550
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x82F"
    },
    "11331": {
      "op": "JUMP"
    },
    "11332": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        14989,
        16101
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11333": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15101,
        15105
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11335": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15117,
        15134
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 105,
      "value": "0x2C4F"
    },
    "11338": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15131,
        15133
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11339": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15117,
        15130
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x324B"
    },
    "11342": {
      "fn": "HouseOfPanda._burnInternal",
      "jump": "i",
      "offset": [
        15117,
        15134
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11343": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15117,
        15134
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11344": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15164,
        15165
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 106,
      "value": "0x0"
    },
    "11346": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15152,
        15161
      ],
      "op": "DUP5",
      "path": "18"
    },
    "11347": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15152,
        15165
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "11352": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15152,
        15165
      ],
      "op": "AND",
      "path": "18"
    },
    "11353": {
      "branch": 204,
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15152,
        15165
      ],
      "op": "GT",
      "path": "18"
    },
    "11354": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15144,
        15180
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C75"
    },
    "11357": {
      "branch": 204,
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15144,
        15180
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11358": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15144,
        15180
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "11360": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15144,
        15180
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "11361": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11365": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11367": {
      "op": "SHL"
    },
    "11368": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15144,
        15180
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11369": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15144,
        15180
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11370": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15144,
        15180
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "11372": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15144,
        15180
      ],
      "op": "ADD",
      "path": "18"
    },
    "11373": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15144,
        15180
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "11376": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15144,
        15180
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11377": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15144,
        15180
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5161"
    },
    "11380": {
      "fn": "HouseOfPanda._burnInternal",
      "jump": "i",
      "offset": [
        15144,
        15180
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11381": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15144,
        15180
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11382": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15204,
        15205
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 107,
      "value": "0x0"
    },
    "11384": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15198,
        15201
      ],
      "op": "DUP4",
      "path": "18"
    },
    "11385": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15198,
        15205
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "11390": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15198,
        15205
      ],
      "op": "AND",
      "path": "18"
    },
    "11391": {
      "branch": 205,
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15198,
        15205
      ],
      "op": "GT",
      "path": "18"
    },
    "11392": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15190,
        15214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2CB4"
    },
    "11395": {
      "branch": 205,
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15190,
        15214
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11396": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15190,
        15214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "11398": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15190,
        15214
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "11399": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11403": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11405": {
      "op": "SHL"
    },
    "11406": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15190,
        15214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11407": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15190,
        15214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11408": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15190,
        15214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "11410": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15190,
        15214
      ],
      "op": "ADD",
      "path": "18"
    },
    "11411": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15190,
        15214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "11414": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15190,
        15214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11415": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11417": {
      "op": "DUP1"
    },
    "11418": {
      "op": "DUP3"
    },
    "11419": {
      "op": "MSTORE"
    },
    "11420": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11422": {
      "op": "SWAP1"
    },
    "11423": {
      "op": "DUP3"
    },
    "11424": {
      "op": "ADD"
    },
    "11425": {
      "op": "MSTORE"
    },
    "11426": {
      "op": "PUSH4",
      "value": "0x21717479"
    },
    "11431": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11433": {
      "op": "SHL"
    },
    "11434": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11436": {
      "op": "DUP3"
    },
    "11437": {
      "op": "ADD"
    },
    "11438": {
      "op": "MSTORE"
    },
    "11439": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11441": {
      "op": "ADD"
    },
    "11442": {
      "op": "SWAP1"
    },
    "11443": {
      "op": "JUMP"
    },
    "11444": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15190,
        15214
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11445": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15254,
        15274
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "11450": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15254,
        15274
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11451": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15254,
        15274
      ],
      "op": "DUP6",
      "path": "18"
    },
    "11452": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15254,
        15274
      ],
      "op": "AND",
      "path": "18"
    },
    "11453": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15251
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11455": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15254,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11456": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15254,
        15274
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11457": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15254,
        15274
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11458": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15254,
        15263
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "11460": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15254,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "11462": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15254,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11463": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15254,
        15274
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11464": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15254,
        15274
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11465": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15254,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "11467": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15254,
        15274
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11468": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15254,
        15274
      ],
      "op": "DUP4",
      "path": "18"
    },
    "11469": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15254,
        15274
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "11470": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11471": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "11472": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A0"
    },
    "11475": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11476": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11477": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11478": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "11479": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11480": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11481": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11482": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11483": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "11484": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "AND",
      "path": "18"
    },
    "11485": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11486": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11487": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "11489": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP5",
      "path": "18"
    },
    "11490": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11491": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11492": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11493": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15251
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "11494": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15251
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "11495": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11496": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "11497": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15254,
        15274
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11498": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15254,
        15274
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "11499": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP5",
      "path": "18"
    },
    "11500": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11501": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11502": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2CF6"
    },
    "11505": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11506": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4E13"
    },
    "11509": {
      "fn": "HouseOfPanda._burnInternal",
      "jump": "i",
      "offset": [
        15225,
        15274
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11510": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11511": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11512": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "11514": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11515": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "11517": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11518": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11519": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DIV",
      "path": "18"
    },
    "11520": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MUL",
      "path": "18"
    },
    "11521": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "11523": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11524": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "11526": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "11527": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11528": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11529": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11530": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "11532": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11533": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11534": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "11535": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11536": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11537": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11538": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11539": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11540": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "11542": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11543": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11544": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11545": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11546": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2D22"
    },
    "11549": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11550": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4E13"
    },
    "11553": {
      "fn": "HouseOfPanda._burnInternal",
      "jump": "i",
      "offset": [
        15225,
        15274
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11554": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11555": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11556": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "11557": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2D6F"
    },
    "11560": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11561": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11562": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "11564": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "LT",
      "path": "18"
    },
    "11565": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2D44"
    },
    "11568": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11569": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "11572": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11573": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP4",
      "path": "18"
    },
    "11574": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11575": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DIV",
      "path": "18"
    },
    "11576": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MUL",
      "path": "18"
    },
    "11577": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP4",
      "path": "18"
    },
    "11578": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11579": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11580": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "11582": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11583": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11584": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2D6F"
    },
    "11587": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11588": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11589": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11590": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11591": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11592": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11593": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11595": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11596": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "11598": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11600": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "11601": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11602": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11603": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11604": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11605": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11606": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11607": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11608": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "11610": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11611": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11612": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "11614": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11615": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11616": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP4",
      "path": "18"
    },
    "11617": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "GT",
      "path": "18"
    },
    "11618": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2D52"
    },
    "11621": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11622": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11623": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11624": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SUB",
      "path": "18"
    },
    "11625": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "11627": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "AND",
      "path": "18"
    },
    "11628": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11629": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11630": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11631": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11632": {
      "op": "POP"
    },
    "11633": {
      "op": "POP"
    },
    "11634": {
      "op": "POP"
    },
    "11635": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11636": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP4",
      "path": "18"
    },
    "11637": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11638": {
      "op": "POP"
    },
    "11639": {
      "op": "POP"
    },
    "11640": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "11642": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11643": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11644": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11651": {
      "op": "SHL"
    },
    "11652": {
      "op": "SUB"
    },
    "11653": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11654": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "AND",
      "path": "18"
    },
    "11655": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "11657": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP4",
      "path": "18"
    },
    "11658": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11659": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11664": {
      "op": "SHL"
    },
    "11665": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11666": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DIV",
      "path": "18"
    },
    "11667": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "11670": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11671": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11672": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "AND",
      "path": "18"
    },
    "11673": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "11675": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP4",
      "path": "18"
    },
    "11676": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11677": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11678": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "11680": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP4",
      "path": "18"
    },
    "11681": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11682": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11683": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "11685": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP4",
      "path": "18"
    },
    "11686": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11687": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11688": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "11690": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP4",
      "path": "18"
    },
    "11691": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11692": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11693": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "11695": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11696": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "AND",
      "path": "18"
    },
    "11697": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "11698": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "11699": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "11701": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP5",
      "path": "18"
    },
    "11702": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11703": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11704": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "11707": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11708": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11709": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DIV",
      "path": "18"
    },
    "11710": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF8"
    },
    "11712": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SHL",
      "path": "18"
    },
    "11713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11717": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11719": {
      "op": "SHL"
    },
    "11720": {
      "op": "SUB"
    },
    "11721": {
      "op": "NOT"
    },
    "11722": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "AND",
      "path": "18"
    },
    "11723": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "11725": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP6",
      "path": "18"
    },
    "11726": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11727": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11728": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH3",
      "path": "18",
      "value": "0x10000"
    },
    "11732": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11733": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DIV",
      "path": "18"
    },
    "11734": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11735": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "11736": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "AND",
      "path": "18"
    },
    "11737": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC0"
    },
    "11739": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP5",
      "path": "18"
    },
    "11740": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11741": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11742": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH5",
      "path": "18",
      "value": "0x100000000"
    },
    "11748": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11749": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DIV",
      "path": "18"
    },
    "11750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11754": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11756": {
      "op": "SHL"
    },
    "11757": {
      "op": "SUB"
    },
    "11758": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "AND",
      "path": "18"
    },
    "11759": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "11761": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP4",
      "path": "18"
    },
    "11762": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11763": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11764": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "11766": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP4",
      "path": "18"
    },
    "11767": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11768": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11769": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11770": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11771": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11772": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11773": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x6"
    },
    "11775": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11776": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11777": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11778": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x120"
    },
    "11781": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11782": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11783": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11784": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x7"
    },
    "11786": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11787": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11788": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11789": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11794": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11796": {
      "op": "SHL"
    },
    "11797": {
      "op": "SUB"
    },
    "11798": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11799": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11800": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "AND",
      "path": "18"
    },
    "11801": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x140"
    },
    "11804": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP5",
      "path": "18"
    },
    "11805": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11806": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11809": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11811": {
      "op": "SHL"
    },
    "11812": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11813": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11814": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DIV",
      "path": "18"
    },
    "11815": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "AND",
      "path": "18"
    },
    "11816": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x160"
    },
    "11819": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11820": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11821": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "ADD",
      "path": "18"
    },
    "11822": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11823": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11824": {
      "op": "POP"
    },
    "11825": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15284,
        15306
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 108,
      "value": "0x2E39"
    },
    "11828": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15225,
        15274
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11829": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15284,
        15297
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3089"
    },
    "11832": {
      "fn": "HouseOfPanda._burnInternal",
      "jump": "i",
      "offset": [
        15284,
        15306
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11833": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15284,
        15306
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11834": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15400,
        15421
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "11839": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15400,
        15421
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11840": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15400,
        15421
      ],
      "op": "DUP7",
      "path": "18"
    },
    "11841": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15400,
        15421
      ],
      "op": "AND",
      "path": "18"
    },
    "11842": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15383,
        15397
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11844": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15400,
        15421
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11845": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15400,
        15421
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11846": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15400,
        15421
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11847": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15400,
        15410
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "11849": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15400,
        15421
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "11851": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15400,
        15421
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11852": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15400,
        15421
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "11854": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15400,
        15421
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11855": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15400,
        15421
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "11856": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15400,
        15421
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11861": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11863": {
      "op": "SHL"
    },
    "11864": {
      "op": "SUB"
    },
    "11865": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15400,
        15421
      ],
      "op": "AND",
      "path": "18"
    },
    "11866": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15400,
        15421
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11867": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15439,
        15452
      ],
      "op": "DUP6",
      "path": "18",
      "statement": 109
    },
    "11868": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15439,
        15452
      ],
      "op": "AND",
      "path": "18"
    },
    "11869": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15439,
        15452
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11870": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15439,
        15452
      ],
      "op": "LT",
      "path": "18"
    },
    "11871": {
      "branch": 206,
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15439,
        15452
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "11872": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15431,
        15470
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2E9B"
    },
    "11875": {
      "branch": 206,
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15431,
        15470
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "11876": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15431,
        15470
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "11878": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15431,
        15470
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "11879": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11883": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11885": {
      "op": "SHL"
    },
    "11886": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15431,
        15470
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11887": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15431,
        15470
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11890": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15431,
        15470
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "11892": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15431,
        15470
      ],
      "op": "DUP3",
      "path": "18"
    },
    "11893": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15431,
        15470
      ],
      "op": "ADD",
      "path": "18"
    },
    "11894": {
      "op": "MSTORE"
    },
    "11895": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "11897": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11899": {
      "op": "DUP3"
    },
    "11900": {
      "op": "ADD"
    },
    "11901": {
      "op": "MSTORE"
    },
    "11902": {
      "op": "PUSH13",
      "value": "0x65786365656420737570706C79"
    },
    "11916": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "11918": {
      "op": "SHL"
    },
    "11919": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11921": {
      "op": "DUP3"
    },
    "11922": {
      "op": "ADD"
    },
    "11923": {
      "op": "MSTORE"
    },
    "11924": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11926": {
      "op": "ADD"
    },
    "11927": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15431,
        15470
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "11930": {
      "op": "JUMP"
    },
    "11931": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15431,
        15470
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11932": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15552
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "11934": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15552
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "11935": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "11937": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "11938": {
      "op": "PUSH4",
      "value": "0x6EDC9D8D"
    },
    "11943": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "11945": {
      "op": "SHL"
    },
    "11946": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11947": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "11948": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15523,
        15543
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "11950": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15523,
        15543
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "11951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11957": {
      "op": "SHL"
    },
    "11958": {
      "op": "SUB"
    },
    "11959": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15552
      ],
      "op": "AND",
      "path": "18"
    },
    "11960": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15552
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11961": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15570
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xDDB93B1A"
    },
    "11966": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15570
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11967": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2ECE"
    },
    "11970": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11971": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15571,
        15573
      ],
      "op": "DUP9",
      "path": "18"
    },
    "11972": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15571,
        15573
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11973": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15575,
        15584
      ],
      "op": "DUP12",
      "path": "18"
    },
    "11974": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15575,
        15584
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "11975": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "11977": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "ADD",
      "path": "18"
    },
    "11978": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5185"
    },
    "11981": {
      "fn": "HouseOfPanda._burnInternal",
      "jump": "i",
      "offset": [
        15546,
        15585
      ],
      "op": "JUMP",
      "path": "18"
    },
    "11982": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "11983": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "11985": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "11987": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "11988": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11989": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "DUP4",
      "path": "18"
    },
    "11990": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "SUB",
      "path": "18"
    },
    "11991": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "DUP2",
      "path": "18"
    },
    "11992": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "DUP7",
      "path": "18"
    },
    "11993": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "GAS",
      "path": "18"
    },
    "11994": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "11995": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "11996": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "DUP1",
      "path": "18"
    },
    "11997": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "11998": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2EEB"
    },
    "12001": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12002": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "12003": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "12005": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12006": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "12007": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "12008": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "12010": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "REVERT",
      "path": "18"
    },
    "12011": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12012": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "POP",
      "path": "18"
    },
    "12013": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "POP",
      "path": "18"
    },
    "12014": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "POP",
      "path": "18"
    },
    "12015": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "POP",
      "path": "18"
    },
    "12016": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12018": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12019": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "12020": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "12022": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "NOT",
      "path": "18"
    },
    "12023": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "12025": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "DUP3",
      "path": "18"
    },
    "12026": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "ADD",
      "path": "18"
    },
    "12027": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "AND",
      "path": "18"
    },
    "12028": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "DUP3",
      "path": "18"
    },
    "12029": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "ADD",
      "path": "18"
    },
    "12030": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12031": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12033": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12034": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "POP",
      "path": "18"
    },
    "12035": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12036": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "ADD",
      "path": "18"
    },
    "12037": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12038": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2F0F"
    },
    "12041": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12042": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12043": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x520F"
    },
    "12046": {
      "fn": "HouseOfPanda._burnInternal",
      "jump": "i",
      "offset": [
        15546,
        15585
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12047": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15546,
        15585
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12048": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15599,
        15606
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12049": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15599,
        15606
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12050": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15523,
        15585
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12051": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15523,
        15585
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12052": {
      "op": "POP"
    },
    "12053": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15599,
        15610
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "12058": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15599,
        15610
      ],
      "op": "AND",
      "path": "18"
    },
    "12059": {
      "branch": 207,
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15599,
        15610
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "12060": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15595,
        15701
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2F86"
    },
    "12063": {
      "branch": 207,
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15595,
        15701
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12064": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15668,
        15671
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 110
    },
    "12065": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15668,
        15675
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "12067": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15668,
        15675
      ],
      "op": "ADD",
      "path": "18"
    },
    "12068": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15668,
        15675
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12069": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15634,
        15675
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "12074": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15634,
        15675
      ],
      "op": "AND",
      "path": "18"
    },
    "12075": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15661,
        15664
      ],
      "op": "DUP7",
      "path": "18"
    },
    "12076": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15634,
        15664
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "12081": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15634,
        15664
      ],
      "op": "AND",
      "path": "18"
    },
    "12082": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15634,
        15658
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2F41"
    },
    "12085": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15644,
        15646
      ],
      "op": "DUP8",
      "path": "18"
    },
    "12086": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15648,
        15657
      ],
      "op": "DUP11",
      "path": "18"
    },
    "12087": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15634,
        15658
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "12092": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15634,
        15658
      ],
      "op": "AND",
      "path": "18"
    },
    "12093": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15634,
        15643
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7C7"
    },
    "12096": {
      "fn": "HouseOfPanda._burnInternal",
      "jump": "i",
      "offset": [
        15634,
        15658
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12097": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15634,
        15658
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12098": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15634,
        15664
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2F4B"
    },
    "12101": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15634,
        15664
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12102": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15634,
        15664
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12103": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15634,
        15664
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x52DA"
    },
    "12106": {
      "fn": "HouseOfPanda._burnInternal",
      "jump": "i",
      "offset": [
        15634,
        15664
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12107": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15634,
        15664
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12108": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15634,
        15675
      ],
      "op": "LT",
      "path": "18"
    },
    "12109": {
      "branch": 208,
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15634,
        15675
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "12110": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15626,
        15690
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2F86"
    },
    "12113": {
      "branch": 208,
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15626,
        15690
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12114": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15626,
        15690
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12116": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15626,
        15690
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12117": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12121": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12123": {
      "op": "SHL"
    },
    "12124": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15626,
        15690
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12125": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15626,
        15690
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12126": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12128": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15626,
        15690
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "12130": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15626,
        15690
      ],
      "op": "DUP3",
      "path": "18"
    },
    "12131": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15626,
        15690
      ],
      "op": "ADD",
      "path": "18"
    },
    "12132": {
      "op": "MSTORE"
    },
    "12133": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "12135": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12137": {
      "op": "DUP3"
    },
    "12138": {
      "op": "ADD"
    },
    "12139": {
      "op": "MSTORE"
    },
    "12140": {
      "op": "PUSH10",
      "value": "0x696E207374616B696E67"
    },
    "12151": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "12153": {
      "op": "SHL"
    },
    "12154": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12156": {
      "op": "DUP3"
    },
    "12157": {
      "op": "ADD"
    },
    "12158": {
      "op": "MSTORE"
    },
    "12159": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12161": {
      "op": "ADD"
    },
    "12162": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15626,
        15690
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "12165": {
      "op": "JUMP"
    },
    "12166": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15626,
        15690
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12167": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "PUSH4",
      "path": "18",
      "statement": 111,
      "value": "0xFFFFFFFF"
    },
    "12172": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15732
      ],
      "op": "DUP8",
      "path": "18"
    },
    "12173": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15732
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12174": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15732
      ],
      "op": "AND",
      "path": "18"
    },
    "12175": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15732
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "12177": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15732
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12178": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15732
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12179": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15732
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12180": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15721
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "12182": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15732
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "12184": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15732
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12185": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15732
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12187": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15732
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12188": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15732
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "12189": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12190": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12191": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "12192": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "DUP10",
      "path": "18"
    },
    "12193": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "AND",
      "path": "18"
    },
    "12194": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "12195": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15732
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12196": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15732
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12197": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15732
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12198": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2FB9"
    },
    "12201": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12202": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "DUP5",
      "path": "18"
    },
    "12203": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12208": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12210": {
      "op": "SHL"
    },
    "12211": {
      "op": "SUB"
    },
    "12212": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "AND",
      "path": "18"
    },
    "12213": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53B5"
    },
    "12216": {
      "fn": "HouseOfPanda._burnInternal",
      "jump": "i",
      "offset": [
        15711,
        15739
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12217": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12218": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "12219": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "POP",
      "path": "18"
    },
    "12220": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "12223": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "EXP",
      "path": "18"
    },
    "12224": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12225": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12226": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12231": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12233": {
      "op": "SHL"
    },
    "12234": {
      "op": "SUB"
    },
    "12235": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "MUL",
      "path": "18"
    },
    "12236": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "NOT",
      "path": "18"
    },
    "12237": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "AND",
      "path": "18"
    },
    "12238": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12239": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "DUP4",
      "path": "18"
    },
    "12240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12244": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12246": {
      "op": "SHL"
    },
    "12247": {
      "op": "SUB"
    },
    "12248": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "AND",
      "path": "18"
    },
    "12249": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "MUL",
      "path": "18"
    },
    "12250": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "OR",
      "path": "18"
    },
    "12251": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12252": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "12253": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15711,
        15739
      ],
      "op": "POP",
      "path": "18"
    },
    "12254": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15750,
        15775
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 112,
      "value": "0x2FF4"
    },
    "12257": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15756,
        15758
      ],
      "op": "DUP6",
      "path": "18"
    },
    "12258": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15760,
        15769
      ],
      "op": "DUP9",
      "path": "18"
    },
    "12259": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15750,
        15775
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "12264": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15750,
        15775
      ],
      "op": "AND",
      "path": "18"
    },
    "12265": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15771,
        15774
      ],
      "op": "DUP9",
      "path": "18"
    },
    "12266": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15750,
        15775
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "12271": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15750,
        15775
      ],
      "op": "AND",
      "path": "18"
    },
    "12272": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15750,
        15755
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3ECB"
    },
    "12275": {
      "fn": "HouseOfPanda._burnInternal",
      "jump": "i",
      "offset": [
        15750,
        15775
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12276": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15750,
        15775
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12277": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15790,
        15797
      ],
      "op": "DUP3",
      "path": "18"
    },
    "12278": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15790,
        15812
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "12280": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15790,
        15812
      ],
      "op": "ADD",
      "path": "18"
    },
    "12281": {
      "branch": 209,
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15790,
        15812
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12282": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15786,
        16033
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3038"
    },
    "12285": {
      "branch": 209,
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15786,
        16033
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12286": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15871,
        15885
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "12288": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15894,
        15901
      ],
      "op": "DUP4",
      "path": "18"
    },
    "12289": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15894,
        15907
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "12291": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15894,
        15907
      ],
      "op": "ADD",
      "path": "18"
    },
    "12292": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15894,
        15907
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12293": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15888,
        15891
      ],
      "op": "DUP8",
      "path": "18"
    },
    "12294": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15888,
        15907
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "12299": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15888,
        15907
      ],
      "op": "AND",
      "path": "18"
    },
    "12300": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15888,
        15907
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3015"
    },
    "12303": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15888,
        15907
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12304": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15888,
        15907
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12305": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15888,
        15907
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x50CE"
    },
    "12308": {
      "fn": "HouseOfPanda._burnInternal",
      "jump": "i",
      "offset": [
        15888,
        15907
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12309": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15888,
        15907
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12310": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16002,
        16008
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 113,
      "value": "0xF"
    },
    "12312": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16002,
        16008
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12313": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15966,
        15976
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE"
    },
    "12315": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15966,
        15976
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "12316": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15871,
        15907
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12317": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15871,
        15907
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "12318": {
      "op": "POP"
    },
    "12319": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15966,
        16022
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3036"
    },
    "12322": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15966,
        16022
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12329": {
      "op": "SHL"
    },
    "12330": {
      "op": "SUB"
    },
    "12331": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15966,
        15976
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12332": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15966,
        15976
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12333": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15966,
        15976
      ],
      "op": "AND",
      "path": "18"
    },
    "12334": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15966,
        15976
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12335": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16002,
        16008
      ],
      "op": "AND",
      "path": "18"
    },
    "12336": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16011,
        16013
      ],
      "op": "DUP9",
      "path": "18"
    },
    "12337": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15871,
        15907
      ],
      "op": "DUP5",
      "path": "18"
    },
    "12338": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15966,
        15993
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x30DB"
    },
    "12341": {
      "fn": "HouseOfPanda._burnInternal",
      "jump": "i",
      "offset": [
        15966,
        16022
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12342": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15966,
        16022
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12343": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15857,
        16033
      ],
      "op": "POP",
      "path": "18"
    },
    "12344": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        15786,
        16033
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12345": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16069,
        16071
      ],
      "op": "DUP5",
      "path": "18",
      "statement": 114
    },
    "12346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12352": {
      "op": "SHL"
    },
    "12353": {
      "op": "SUB"
    },
    "12354": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16048,
        16072
      ],
      "op": "AND",
      "path": "18"
    },
    "12355": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16064,
        16067
      ],
      "op": "DUP7",
      "path": "18"
    },
    "12356": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16048,
        16072
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "12361": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16048,
        16072
      ],
      "op": "AND",
      "path": "18"
    },
    "12362": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16053,
        16062
      ],
      "op": "DUP9",
      "path": "18"
    },
    "12363": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16048,
        16072
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "12368": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16048,
        16072
      ],
      "op": "AND",
      "path": "18"
    },
    "12369": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16048,
        16072
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x51DC334A9A8F008638BDEB6C9A6F4AABF63FF2510E4BE9998B7ECF63010AB8AA"
    },
    "12402": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16048,
        16072
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12404": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16048,
        16072
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12405": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16048,
        16072
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12407": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16048,
        16072
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12408": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16048,
        16072
      ],
      "op": "DUP1",
      "path": "18"
    },
    "12409": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16048,
        16072
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12410": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16048,
        16072
      ],
      "op": "SUB",
      "path": "18"
    },
    "12411": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16048,
        16072
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12412": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16048,
        16072
      ],
      "op": "LOG4",
      "path": "18"
    },
    "12413": {
      "op": "POP"
    },
    "12414": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16090,
        16094
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 115,
      "value": "0x1"
    },
    "12416": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        16090,
        16094
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "12417": {
      "fn": "HouseOfPanda._burnInternal",
      "offset": [
        14989,
        16101
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "12418": {
      "op": "POP"
    },
    "12419": {
      "op": "POP"
    },
    "12420": {
      "op": "POP"
    },
    "12421": {
      "op": "POP"
    },
    "12422": {
      "op": "POP"
    },
    "12423": {
      "op": "POP"
    },
    "12424": {
      "fn": "HouseOfPanda._burnInternal",
      "jump": "o",
      "offset": [
        14989,
        16101
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12425": {
      "fn": "HouseOfPanda._checkProject",
      "offset": [
        8910,
        9027
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12426": {
      "fn": "HouseOfPanda._checkProject",
      "offset": [
        8993,
        9003
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 116
    },
    "12427": {
      "fn": "HouseOfPanda._checkProject",
      "offset": [
        8993,
        9003
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12428": {
      "fn": "HouseOfPanda._checkProject",
      "offset": [
        8993,
        9007
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "12433": {
      "branch": 210,
      "fn": "HouseOfPanda._checkProject",
      "offset": [
        8993,
        9007
      ],
      "op": "AND",
      "path": "18"
    },
    "12434": {
      "fn": "HouseOfPanda._checkProject",
      "offset": [
        8985,
        9020
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x97F"
    },
    "12437": {
      "branch": 210,
      "fn": "HouseOfPanda._checkProject",
      "offset": [
        8985,
        9020
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12438": {
      "fn": "HouseOfPanda._checkProject",
      "offset": [
        8985,
        9020
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12440": {
      "fn": "HouseOfPanda._checkProject",
      "offset": [
        8985,
        9020
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12441": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12445": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12447": {
      "op": "SHL"
    },
    "12448": {
      "fn": "HouseOfPanda._checkProject",
      "offset": [
        8985,
        9020
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12449": {
      "fn": "HouseOfPanda._checkProject",
      "offset": [
        8985,
        9020
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12450": {
      "fn": "HouseOfPanda._checkProject",
      "offset": [
        8985,
        9020
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "12452": {
      "fn": "HouseOfPanda._checkProject",
      "offset": [
        8985,
        9020
      ],
      "op": "ADD",
      "path": "18"
    },
    "12453": {
      "fn": "HouseOfPanda._checkProject",
      "offset": [
        8985,
        9020
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "12456": {
      "fn": "HouseOfPanda._checkProject",
      "offset": [
        8985,
        9020
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "12457": {
      "fn": "HouseOfPanda._checkProject",
      "offset": [
        8985,
        9020
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4ECF"
    },
    "12460": {
      "fn": "HouseOfPanda._checkProject",
      "jump": "i",
      "offset": [
        8985,
        9020
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12461": {
      "fn": "HouseOfPanda._isOwner",
      "offset": [
        2680,
        2786
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12462": {
      "fn": "HouseOfPanda._isOwner",
      "offset": [
        2738,
        2742
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "12464": {
      "fn": "HouseOfPanda._isOwner",
      "offset": [
        2772,
        2779
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 117
    },
    "12465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12471": {
      "op": "SHL"
    },
    "12472": {
      "op": "SUB"
    },
    "12473": {
      "fn": "HouseOfPanda._isOwner",
      "offset": [
        2761,
        2779
      ],
      "op": "AND",
      "path": "18"
    },
    "12474": {
      "fn": "HouseOfPanda._isOwner",
      "offset": [
        2761,
        2768
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x30CB"
    },
    "12477": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "12479": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12486": {
      "op": "SHL"
    },
    "12487": {
      "op": "SUB"
    },
    "12488": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "12489": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12490": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12491": {
      "fn": "HouseOfPanda._isOwner",
      "offset": [
        2761,
        2768
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12498": {
      "op": "SHL"
    },
    "12499": {
      "op": "SUB"
    },
    "12500": {
      "fn": "HouseOfPanda._isOwner",
      "offset": [
        2761,
        2779
      ],
      "op": "AND",
      "path": "18"
    },
    "12501": {
      "fn": "HouseOfPanda._isOwner",
      "offset": [
        2761,
        2779
      ],
      "op": "EQ",
      "path": "18"
    },
    "12502": {
      "fn": "HouseOfPanda._isOwner",
      "offset": [
        2761,
        2779
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "12503": {
      "fn": "HouseOfPanda._isOwner",
      "offset": [
        2680,
        2786
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "12504": {
      "op": "POP"
    },
    "12505": {
      "op": "POP"
    },
    "12506": {
      "fn": "HouseOfPanda._isOwner",
      "jump": "o",
      "offset": [
        2680,
        2786
      ],
      "op": "JUMP",
      "path": "18"
    },
    "12507": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1086
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "12508": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 118,
      "value": "0x40"
    },
    "12510": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP1",
      "path": "9"
    },
    "12511": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "12512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12518": {
      "op": "SHL"
    },
    "12519": {
      "op": "SUB"
    },
    "12520": {
      "op": "DUP6"
    },
    "12521": {
      "op": "DUP2"
    },
    "12522": {
      "op": "AND"
    },
    "12523": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "12525": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP4",
      "path": "9"
    },
    "12526": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "ADD",
      "path": "9"
    },
    "12527": {
      "op": "MSTORE"
    },
    "12528": {
      "op": "DUP5"
    },
    "12529": {
      "op": "AND"
    },
    "12530": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12532": {
      "op": "DUP3"
    },
    "12533": {
      "op": "ADD"
    },
    "12534": {
      "op": "MSTORE"
    },
    "12535": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12537": {
      "op": "DUP1"
    },
    "12538": {
      "op": "DUP3"
    },
    "12539": {
      "op": "ADD"
    },
    "12540": {
      "op": "DUP5"
    },
    "12541": {
      "op": "SWAP1"
    },
    "12542": {
      "op": "MSTORE"
    },
    "12543": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP3",
      "path": "9"
    },
    "12544": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "12545": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP1",
      "path": "9"
    },
    "12546": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP4",
      "path": "9"
    },
    "12547": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SUB",
      "path": "9"
    },
    "12548": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12549": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "12550": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "ADD",
      "path": "9"
    },
    "12551": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12552": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12553": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12555": {
      "op": "SWAP1"
    },
    "12556": {
      "op": "SWAP2"
    },
    "12557": {
      "op": "ADD"
    },
    "12558": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12559": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "12560": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12561": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "12563": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP2",
      "path": "9"
    },
    "12564": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "ADD",
      "path": "9"
    },
    "12565": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP1",
      "path": "9"
    },
    "12566": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "12567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12573": {
      "op": "SHL"
    },
    "12574": {
      "op": "SUB"
    },
    "12575": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "AND",
      "path": "9"
    },
    "12576": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "12581": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12583": {
      "op": "SHL"
    },
    "12584": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "OR",
      "path": "9"
    },
    "12585": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12586": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "12587": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1079
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3135"
    },
    "12590": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1079
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12591": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1003,
        1008
      ],
      "op": "DUP6",
      "path": "9"
    },
    "12592": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1003,
        1008
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12593": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1002
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4044"
    },
    "12596": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        983,
        1079
      ],
      "op": "JUMP",
      "path": "9"
    },
    "12597": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1079
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "12598": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1086
      ],
      "op": "POP",
      "path": "9"
    },
    "12599": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1086
      ],
      "op": "POP",
      "path": "9"
    },
    "12600": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1086
      ],
      "op": "POP",
      "path": "9"
    },
    "12601": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1086
      ],
      "op": "POP",
      "path": "9"
    },
    "12602": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        845,
        1086
      ],
      "op": "JUMP",
      "path": "9"
    },
    "12603": {
      "fn": "ERC1155._mint",
      "offset": [
        8502,
        9085
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12610": {
      "op": "SHL"
    },
    "12611": {
      "op": "SUB"
    },
    "12612": {
      "fn": "ERC1155._mint",
      "offset": [
        8654,
        8675
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 119
    },
    "12613": {
      "branch": 237,
      "fn": "ERC1155._mint",
      "offset": [
        8654,
        8675
      ],
      "op": "AND",
      "path": "2"
    },
    "12614": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x319B"
    },
    "12617": {
      "branch": 237,
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12618": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12620": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12621": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12625": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12627": {
      "op": "SHL"
    },
    "12628": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12629": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12632": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12634": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12635": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "ADD",
      "path": "2"
    },
    "12636": {
      "op": "MSTORE"
    },
    "12637": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "12639": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12641": {
      "op": "DUP3"
    },
    "12642": {
      "op": "ADD"
    },
    "12643": {
      "op": "MSTORE"
    },
    "12644": {
      "op": "PUSH32",
      "value": "0x455243313135353A206D696E7420746F20746865207A65726F20616464726573"
    },
    "12677": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12679": {
      "op": "DUP3"
    },
    "12680": {
      "op": "ADD"
    },
    "12681": {
      "op": "MSTORE"
    },
    "12682": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "12684": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "12686": {
      "op": "SHL"
    },
    "12687": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12689": {
      "op": "DUP3"
    },
    "12690": {
      "op": "ADD"
    },
    "12691": {
      "op": "MSTORE"
    },
    "12692": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12694": {
      "op": "ADD"
    },
    "12695": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82F"
    },
    "12698": {
      "op": "JUMP"
    },
    "12699": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12700": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "11"
    },
    "12701": {
      "fn": "ERC1155._mint",
      "offset": [
        8766,
        8873
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 120,
      "value": "0x31BB"
    },
    "12704": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "DUP2",
      "path": "11"
    },
    "12705": {
      "fn": "ERC1155._mint",
      "offset": [
        8724,
        8740
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12707": {
      "fn": "ERC1155._mint",
      "offset": [
        8809,
        8816
      ],
      "op": "DUP8",
      "path": "2"
    },
    "12708": {
      "fn": "ERC1155._mint",
      "offset": [
        8818,
        8839
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31AC"
    },
    "12711": {
      "fn": "ERC1155._mint",
      "offset": [
        8836,
        8838
      ],
      "op": "DUP9",
      "path": "2"
    },
    "12712": {
      "fn": "ERC1155._mint",
      "offset": [
        8818,
        8835
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x411B"
    },
    "12715": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8818,
        8839
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12716": {
      "fn": "ERC1155._mint",
      "offset": [
        8818,
        8839
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12717": {
      "fn": "ERC1155._mint",
      "offset": [
        8841,
        8866
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31B5"
    },
    "12720": {
      "fn": "ERC1155._mint",
      "offset": [
        8859,
        8865
      ],
      "op": "DUP9",
      "path": "2"
    },
    "12721": {
      "fn": "ERC1155._mint",
      "offset": [
        8841,
        8858
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x411B"
    },
    "12724": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8841,
        8866
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12725": {
      "fn": "ERC1155._mint",
      "offset": [
        8841,
        8866
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12726": {
      "fn": "ERC1155._mint",
      "offset": [
        8868,
        8872
      ],
      "op": "DUP8",
      "path": "2"
    },
    "12727": {
      "fn": "ERC1155._mint",
      "offset": [
        8766,
        8786
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379E"
    },
    "12730": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8766,
        8873
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12731": {
      "fn": "ERC1155._mint",
      "offset": [
        8766,
        8873
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12732": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8893
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 121,
      "value": "0x0"
    },
    "12734": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12735": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12736": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12737": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12739": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12740": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12741": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12742": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12744": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12745": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12746": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12753": {
      "op": "SHL"
    },
    "12754": {
      "op": "SUB"
    },
    "12755": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "DUP10",
      "path": "2"
    },
    "12756": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "AND",
      "path": "2"
    },
    "12757": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12758": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12759": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12760": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12761": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12762": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12763": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12764": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12765": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12766": {
      "fn": "ERC1155._mint",
      "offset": [
        8910,
        8916
      ],
      "op": "DUP6",
      "path": "2"
    },
    "12767": {
      "fn": "ERC1155._mint",
      "offset": [
        8910,
        8916
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12768": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8893
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12769": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31EB"
    },
    "12772": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12773": {
      "fn": "ERC1155._mint",
      "offset": [
        8910,
        8916
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12774": {
      "fn": "ERC1155._mint",
      "offset": [
        8910,
        8916
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12775": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x52B3"
    },
    "12778": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8884,
        8916
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12779": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12780": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12781": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12782": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12783": {
      "op": "POP"
    },
    "12784": {
      "op": "POP"
    },
    "12785": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 122,
      "value": "0x40"
    },
    "12787": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12788": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12789": {
      "op": "DUP6"
    },
    "12790": {
      "op": "DUP2"
    },
    "12791": {
      "op": "MSTORE"
    },
    "12792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12794": {
      "op": "DUP2"
    },
    "12795": {
      "op": "ADD"
    },
    "12796": {
      "op": "DUP6"
    },
    "12797": {
      "op": "SWAP1"
    },
    "12798": {
      "op": "MSTORE"
    },
    "12799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12803": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12805": {
      "op": "SHL"
    },
    "12806": {
      "op": "SUB"
    },
    "12807": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12808": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "DUP9",
      "path": "2"
    },
    "12809": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "AND",
      "path": "2"
    },
    "12810": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12811": {
      "fn": "ERC1155._mint",
      "offset": [
        8964,
        8965
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12813": {
      "fn": "ERC1155._mint",
      "offset": [
        8964,
        8965
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12814": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12815": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "DUP6",
      "path": "2"
    },
    "12816": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "AND",
      "path": "2"
    },
    "12817": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12818": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "12851": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12852": {
      "op": "ADD"
    },
    "12853": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12855": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12856": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12857": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12858": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "SUB",
      "path": "2"
    },
    "12859": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12860": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "LOG4",
      "path": "2"
    },
    "12861": {
      "fn": "ERC1155._mint",
      "offset": [
        8999,
        9078
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 123,
      "value": "0x945"
    },
    "12864": {
      "fn": "ERC1155._mint",
      "offset": [
        9030,
        9038
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12865": {
      "fn": "ERC1155._mint",
      "offset": [
        9048,
        9049
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12867": {
      "fn": "ERC1155._mint",
      "offset": [
        9052,
        9059
      ],
      "op": "DUP8",
      "path": "2"
    },
    "12868": {
      "fn": "ERC1155._mint",
      "offset": [
        9061,
        9063
      ],
      "op": "DUP8",
      "path": "2"
    },
    "12869": {
      "fn": "ERC1155._mint",
      "offset": [
        9065,
        9071
      ],
      "op": "DUP8",
      "path": "2"
    },
    "12870": {
      "fn": "ERC1155._mint",
      "offset": [
        9073,
        9077
      ],
      "op": "DUP8",
      "path": "2"
    },
    "12871": {
      "fn": "ERC1155._mint",
      "offset": [
        8999,
        9029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4166"
    },
    "12874": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8999,
        9078
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12875": {
      "fn": "HouseOfPanda._checkAddress",
      "offset": [
        14422,
        14526
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "12876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12882": {
      "op": "SHL"
    },
    "12883": {
      "op": "SUB"
    },
    "12884": {
      "fn": "HouseOfPanda._checkAddress",
      "offset": [
        14490,
        14508
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 124
    },
    "12885": {
      "branch": 211,
      "fn": "HouseOfPanda._checkAddress",
      "offset": [
        14490,
        14508
      ],
      "op": "AND",
      "path": "18"
    },
    "12886": {
      "fn": "HouseOfPanda._checkAddress",
      "offset": [
        14482,
        14519
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x97F"
    },
    "12889": {
      "branch": 211,
      "fn": "HouseOfPanda._checkAddress",
      "offset": [
        14482,
        14519
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12890": {
      "fn": "HouseOfPanda._checkAddress",
      "offset": [
        14482,
        14519
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "12892": {
      "fn": "HouseOfPanda._checkAddress",
      "offset": [
        14482,
        14519
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "12893": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12897": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12899": {
      "op": "SHL"
    },
    "12900": {
      "fn": "HouseOfPanda._checkAddress",
      "offset": [
        14482,
        14519
      ],
      "op": "DUP2",
      "path": "18"
    },
    "12901": {
      "fn": "HouseOfPanda._checkAddress",
      "offset": [
        14482,
        14519
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "12902": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12904": {
      "fn": "HouseOfPanda._checkAddress",
      "offset": [
        14482,
        14519
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "12906": {
      "fn": "HouseOfPanda._checkAddress",
      "offset": [
        14482,
        14519
      ],
      "op": "DUP3",
      "path": "18"
    },
    "12907": {
      "fn": "HouseOfPanda._checkAddress",
      "offset": [
        14482,
        14519
      ],
      "op": "ADD",
      "path": "18"
    },
    "12908": {
      "op": "MSTORE"
    },
    "12909": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "12911": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12913": {
      "op": "DUP3"
    },
    "12914": {
      "op": "ADD"
    },
    "12915": {
      "op": "MSTORE"
    },
    "12916": {
      "op": "PUSH6",
      "value": "0x3C1030B23239"
    },
    "12923": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "12925": {
      "op": "SHL"
    },
    "12926": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12928": {
      "op": "DUP3"
    },
    "12929": {
      "op": "ADD"
    },
    "12930": {
      "op": "MSTORE"
    },
    "12931": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12933": {
      "op": "ADD"
    },
    "12934": {
      "fn": "HouseOfPanda._checkAddress",
      "offset": [
        14482,
        14519
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "12937": {
      "op": "JUMP"
    },
    "12938": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        478,
        689
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "12939": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        610,
        668
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 125,
      "value": "0x40"
    },
    "12941": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        610,
        668
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "12942": {
      "op": "PUSH32",
      "value": "0x19457468657265756D205369676E6564204D6573736167653A0A333200000000"
    },
    "12975": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        610,
        668
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "12977": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        610,
        668
      ],
      "op": "DUP3",
      "path": "19"
    },
    "12978": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        610,
        668
      ],
      "op": "ADD",
      "path": "19"
    },
    "12979": {
      "op": "MSTORE"
    },
    "12980": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "12982": {
      "op": "DUP2"
    },
    "12983": {
      "op": "ADD"
    },
    "12984": {
      "op": "DUP3"
    },
    "12985": {
      "op": "SWAP1"
    },
    "12986": {
      "op": "MSTORE"
    },
    "12987": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        545,
        552
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "12989": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        545,
        552
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12990": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "12992": {
      "op": "ADD"
    },
    "12993": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        610,
        668
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "12994": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        610,
        668
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "12996": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        610,
        668
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "12997": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        610,
        668
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "12999": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        610,
        668
      ],
      "op": "DUP2",
      "path": "19"
    },
    "13000": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        610,
        668
      ],
      "op": "DUP4",
      "path": "19"
    },
    "13001": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        610,
        668
      ],
      "op": "SUB",
      "path": "19"
    },
    "13002": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        610,
        668
      ],
      "op": "SUB",
      "path": "19"
    },
    "13003": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        610,
        668
      ],
      "op": "DUP2",
      "path": "19"
    },
    "13004": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        610,
        668
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "13005": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        610,
        668
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13006": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        610,
        668
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "13008": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        610,
        668
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "13009": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        583,
        682
      ],
      "op": "DUP1",
      "path": "19"
    },
    "13010": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        583,
        682
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "13011": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        583,
        682
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13012": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        583,
        682
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "13014": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        583,
        682
      ],
      "op": "ADD",
      "path": "19"
    },
    "13015": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        583,
        682
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "13016": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        564,
        682
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13017": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        564,
        682
      ],
      "op": "POP",
      "path": "19"
    },
    "13018": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        478,
        689
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "13019": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        478,
        689
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13020": {
      "fn": "SigVerifier.sigPrefixed",
      "offset": [
        478,
        689
      ],
      "op": "POP",
      "path": "19"
    },
    "13021": {
      "fn": "SigVerifier.sigPrefixed",
      "jump": "o",
      "offset": [
        478,
        689
      ],
      "op": "JUMP",
      "path": "19"
    },
    "13022": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        695,
        906
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13023": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        826,
        830
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "13025": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        892,
        899
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 126
    },
    "13026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13032": {
      "op": "SHL"
    },
    "13033": {
      "op": "SUB"
    },
    "13034": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        899
      ],
      "op": "AND",
      "path": "19"
    },
    "13035": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "13037": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        859,
        866
      ],
      "op": "DUP5",
      "path": "19"
    },
    "13038": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        868,
        871
      ],
      "op": "DUP5",
      "path": "19"
    },
    "13039": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        868,
        873
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "13041": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        868,
        873
      ],
      "op": "ADD",
      "path": "19"
    },
    "13042": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        868,
        873
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "13043": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        875,
        878
      ],
      "op": "DUP6",
      "path": "19"
    },
    "13044": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        875,
        880
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "13046": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        875,
        880
      ],
      "op": "ADD",
      "path": "19"
    },
    "13047": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        875,
        880
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "13048": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        882,
        885
      ],
      "op": "DUP7",
      "path": "19"
    },
    "13049": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        882,
        887
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "13051": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        882,
        887
      ],
      "op": "ADD",
      "path": "19"
    },
    "13052": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        882,
        887
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "13053": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "13055": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "13056": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "13058": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "DUP2",
      "path": "19"
    },
    "13059": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "13060": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "13062": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "ADD",
      "path": "19"
    },
    "13063": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "13065": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "13066": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "13068": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "13069": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3332"
    },
    "13072": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "13073": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "13074": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "13075": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "13076": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13077": {
      "op": "SWAP4"
    },
    "13078": {
      "op": "DUP5"
    },
    "13079": {
      "op": "MSTORE"
    },
    "13080": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13082": {
      "op": "SWAP3"
    },
    "13083": {
      "op": "SWAP1"
    },
    "13084": {
      "op": "SWAP3"
    },
    "13085": {
      "op": "AND"
    },
    "13086": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13088": {
      "op": "DUP5"
    },
    "13089": {
      "op": "ADD"
    },
    "13090": {
      "op": "MSTORE"
    },
    "13091": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13093": {
      "op": "DUP4"
    },
    "13094": {
      "op": "ADD"
    },
    "13095": {
      "op": "MSTORE"
    },
    "13096": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13098": {
      "op": "DUP3"
    },
    "13099": {
      "op": "ADD"
    },
    "13100": {
      "op": "MSTORE"
    },
    "13101": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13103": {
      "op": "ADD"
    },
    "13104": {
      "op": "SWAP1"
    },
    "13105": {
      "op": "JUMP"
    },
    "13106": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13107": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "13109": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "13111": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "13112": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "13114": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "DUP2",
      "path": "19"
    },
    "13115": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "SUB",
      "path": "19"
    },
    "13116": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13117": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "DUP1",
      "path": "19"
    },
    "13118": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "DUP5",
      "path": "19"
    },
    "13119": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "SUB",
      "path": "19"
    },
    "13120": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13121": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "DUP6",
      "path": "19"
    },
    "13122": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "GAS",
      "path": "19"
    },
    "13123": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "13124": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13125": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "DUP1",
      "path": "19"
    },
    "13126": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13127": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3354"
    },
    "13130": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13131": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "13132": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "13134": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "DUP1",
      "path": "19"
    },
    "13135": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "13136": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "13137": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "13139": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "REVERT",
      "path": "19"
    },
    "13140": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13141": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "POP",
      "path": "19"
    },
    "13142": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "POP",
      "path": "19"
    },
    "13143": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "POP",
      "path": "19"
    },
    "13144": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "13146": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "13148": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "13149": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "SUB",
      "path": "19"
    },
    "13150": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        888
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "13151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13157": {
      "op": "SHL"
    },
    "13158": {
      "op": "SUB"
    },
    "13159": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        899
      ],
      "op": "AND",
      "path": "19"
    },
    "13160": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        849,
        899
      ],
      "op": "EQ",
      "path": "19"
    },
    "13161": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        842,
        899
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13162": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        842,
        899
      ],
      "op": "POP",
      "path": "19"
    },
    "13163": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        695,
        906
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "13164": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        695,
        906
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "13165": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        695,
        906
      ],
      "op": "POP",
      "path": "19"
    },
    "13166": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        695,
        906
      ],
      "op": "POP",
      "path": "19"
    },
    "13167": {
      "fn": "SigVerifier._isSigner",
      "offset": [
        695,
        906
      ],
      "op": "POP",
      "path": "19"
    },
    "13168": {
      "fn": "SigVerifier._isSigner",
      "jump": "o",
      "offset": [
        695,
        906
      ],
      "op": "JUMP",
      "path": "19"
    },
    "13169": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13170": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "13172": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13173": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "13174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13180": {
      "op": "SHL"
    },
    "13181": {
      "op": "SUB"
    },
    "13182": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 127
    },
    "13183": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13184": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "13185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13191": {
      "op": "SHL"
    },
    "13192": {
      "op": "SUB"
    },
    "13193": {
      "op": "NOT"
    },
    "13194": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "13195": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "13196": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13197": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "13198": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13199": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "13200": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "13201": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 128,
      "value": "0x40"
    },
    "13203": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13204": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13205": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "13206": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13207": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13208": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13209": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13210": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "13243": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13244": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13246": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13247": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "13248": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "13249": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "13250": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13251": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8445,
        8698
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13252": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8521,
        8539
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x33CB"
    },
    "13255": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8521,
        8539
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4355"
    },
    "13258": {
      "fn": "HouseOfPanda._getProject",
      "jump": "i",
      "offset": [
        8521,
        8539
      ],
      "op": "JUMP",
      "path": "18"
    },
    "13259": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8521,
        8539
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13260": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8571,
        8572
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 129,
      "value": "0x0"
    },
    "13262": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8559,
        8568
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13263": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8559,
        8572
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "13268": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8559,
        8572
      ],
      "op": "AND",
      "path": "18"
    },
    "13269": {
      "branch": 212,
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8559,
        8572
      ],
      "op": "GT",
      "path": "18"
    },
    "13270": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8551,
        8587
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x33F1"
    },
    "13273": {
      "branch": 212,
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8551,
        8587
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "13274": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8551,
        8587
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13276": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8551,
        8587
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "13277": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13281": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13283": {
      "op": "SHL"
    },
    "13284": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8551,
        8587
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13285": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8551,
        8587
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13286": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8551,
        8587
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "13288": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8551,
        8587
      ],
      "op": "ADD",
      "path": "18"
    },
    "13289": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8551,
        8587
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "13292": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8551,
        8587
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13293": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8551,
        8587
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5161"
    },
    "13296": {
      "fn": "HouseOfPanda._getProject",
      "jump": "i",
      "offset": [
        8551,
        8587
      ],
      "op": "JUMP",
      "path": "18"
    },
    "13297": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8551,
        8587
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13298": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8605,
        8641
      ],
      "op": "PUSH4",
      "path": "18",
      "statement": 130,
      "value": "0xFFFFFFFF"
    },
    "13303": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8605,
        8641
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13304": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8605,
        8641
      ],
      "op": "DUP4",
      "path": "18"
    },
    "13305": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8605,
        8641
      ],
      "op": "AND",
      "path": "18"
    },
    "13306": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8605,
        8625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "13308": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8605,
        8625
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13309": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8605,
        8625
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13310": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8605,
        8625
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13311": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8605,
        8614
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "13313": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8605,
        8625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "13315": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8605,
        8625
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13316": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8605,
        8625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13318": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8605,
        8625
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13319": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8605,
        8625
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "13320": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8605,
        8628
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "13321": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8605,
        8628
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13322": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8605,
        8628
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13323": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8605,
        8628
      ],
      "op": "AND",
      "path": "18"
    },
    "13324": {
      "branch": 213,
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8605,
        8641
      ],
      "op": "EQ",
      "path": "18"
    },
    "13325": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8597,
        8654
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3428"
    },
    "13328": {
      "branch": 213,
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8597,
        8654
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "13329": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8597,
        8654
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13331": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8597,
        8654
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "13332": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13336": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13338": {
      "op": "SHL"
    },
    "13339": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8597,
        8654
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13340": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8597,
        8654
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13341": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8597,
        8654
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "13343": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8597,
        8654
      ],
      "op": "ADD",
      "path": "18"
    },
    "13344": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8597,
        8654
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "13347": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8597,
        8654
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13348": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8597,
        8654
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4ECF"
    },
    "13351": {
      "fn": "HouseOfPanda._getProject",
      "jump": "i",
      "offset": [
        8597,
        8654
      ],
      "op": "JUMP",
      "path": "18"
    },
    "13352": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8597,
        8654
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13353": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8671,
        8691
      ],
      "op": "PUSH4",
      "path": "18",
      "statement": 131,
      "value": "0xFFFFFFFF"
    },
    "13358": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8671,
        8691
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13359": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8671,
        8691
      ],
      "op": "DUP4",
      "path": "18"
    },
    "13360": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8671,
        8691
      ],
      "op": "AND",
      "path": "18"
    },
    "13361": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8671,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "13363": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8671,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13364": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8671,
        8691
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13365": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8671,
        8691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13366": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8671,
        8680
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "13368": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8671,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "13370": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8671,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13371": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8671,
        8691
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13372": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8671,
        8691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13373": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8671,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13375": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8671,
        8691
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13376": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8671,
        8691
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13377": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8671,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13378": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8671,
        8691
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "13379": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13380": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "13381": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A0"
    },
    "13384": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13385": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13386": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13387": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "13388": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13389": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13390": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "13391": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13392": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "13393": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "AND",
      "path": "18"
    },
    "13394": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13395": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13396": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "13398": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP4",
      "path": "18"
    },
    "13399": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13400": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13401": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "13402": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "13403": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "13404": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8671,
        8691
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "13405": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13406": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP5",
      "path": "18"
    },
    "13407": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13408": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13409": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3469"
    },
    "13412": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13413": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4E13"
    },
    "13416": {
      "fn": "HouseOfPanda._getProject",
      "jump": "i",
      "offset": [
        8664,
        8691
      ],
      "op": "JUMP",
      "path": "18"
    },
    "13417": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13418": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13419": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "13421": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13422": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "13424": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13425": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13426": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DIV",
      "path": "18"
    },
    "13427": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MUL",
      "path": "18"
    },
    "13428": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "13430": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13431": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13433": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "13434": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13435": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13436": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13437": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13439": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13440": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13441": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "13442": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13443": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13444": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13445": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13446": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13447": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "13449": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13450": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13451": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13452": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "13453": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3495"
    },
    "13456": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13457": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4E13"
    },
    "13460": {
      "fn": "HouseOfPanda._getProject",
      "jump": "i",
      "offset": [
        8664,
        8691
      ],
      "op": "JUMP",
      "path": "18"
    },
    "13461": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13462": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13463": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "13464": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x34E2"
    },
    "13467": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "13468": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13469": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "13471": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "LT",
      "path": "18"
    },
    "13472": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x34B7"
    },
    "13475": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "13476": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "13479": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13480": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP4",
      "path": "18"
    },
    "13481": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "13482": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DIV",
      "path": "18"
    },
    "13483": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MUL",
      "path": "18"
    },
    "13484": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP4",
      "path": "18"
    },
    "13485": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13486": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13487": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "13489": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13490": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13491": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x34E2"
    },
    "13494": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "JUMP",
      "path": "18"
    },
    "13495": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13496": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13497": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13498": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13499": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13500": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "13502": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13503": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "13505": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "13507": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "13508": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13509": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13510": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13511": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "13512": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13513": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13514": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13515": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "13517": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13518": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13519": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "13521": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13522": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13523": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP4",
      "path": "18"
    },
    "13524": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "GT",
      "path": "18"
    },
    "13525": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x34C5"
    },
    "13528": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "13529": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13530": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13531": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SUB",
      "path": "18"
    },
    "13532": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "13534": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "AND",
      "path": "18"
    },
    "13535": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13536": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13537": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13538": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "13539": {
      "op": "POP"
    },
    "13540": {
      "op": "POP"
    },
    "13541": {
      "op": "POP"
    },
    "13542": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13543": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP4",
      "path": "18"
    },
    "13544": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13545": {
      "op": "POP"
    },
    "13546": {
      "op": "POP"
    },
    "13547": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "13549": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13550": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13551": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "13552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13558": {
      "op": "SHL"
    },
    "13559": {
      "op": "SUB"
    },
    "13560": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13561": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "AND",
      "path": "18"
    },
    "13562": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "13564": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP4",
      "path": "18"
    },
    "13565": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13566": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13571": {
      "op": "SHL"
    },
    "13572": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13573": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DIV",
      "path": "18"
    },
    "13574": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFFFF"
    },
    "13577": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13578": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13579": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "AND",
      "path": "18"
    },
    "13580": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "13582": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP4",
      "path": "18"
    },
    "13583": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13584": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13585": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "13587": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP4",
      "path": "18"
    },
    "13588": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13589": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "13590": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "13592": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP4",
      "path": "18"
    },
    "13593": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13594": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13595": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "13597": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP4",
      "path": "18"
    },
    "13598": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13599": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "13600": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "13602": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP2",
      "path": "18"
    },
    "13603": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "AND",
      "path": "18"
    },
    "13604": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "13605": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "13606": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "13608": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP5",
      "path": "18"
    },
    "13609": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13610": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13611": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "13614": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13615": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13616": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DIV",
      "path": "18"
    },
    "13617": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF8"
    },
    "13619": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SHL",
      "path": "18"
    },
    "13620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13624": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "13626": {
      "op": "SHL"
    },
    "13627": {
      "op": "SUB"
    },
    "13628": {
      "op": "NOT"
    },
    "13629": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "AND",
      "path": "18"
    },
    "13630": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "13632": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP6",
      "path": "18"
    },
    "13633": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13634": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13635": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH3",
      "path": "18",
      "value": "0x10000"
    },
    "13639": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13640": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DIV",
      "path": "18"
    },
    "13641": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13642": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "13643": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "AND",
      "path": "18"
    },
    "13644": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC0"
    },
    "13646": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP5",
      "path": "18"
    },
    "13647": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13648": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13649": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH5",
      "path": "18",
      "value": "0x100000000"
    },
    "13655": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13656": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DIV",
      "path": "18"
    },
    "13657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13661": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13663": {
      "op": "SHL"
    },
    "13664": {
      "op": "SUB"
    },
    "13665": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "AND",
      "path": "18"
    },
    "13666": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "13668": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP4",
      "path": "18"
    },
    "13669": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13670": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13671": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "13673": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP4",
      "path": "18"
    },
    "13674": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13675": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "13676": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13677": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13678": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13679": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13680": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x6"
    },
    "13682": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13683": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13684": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "13685": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x120"
    },
    "13688": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13689": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13690": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13691": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x7"
    },
    "13693": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13694": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13695": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13696": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "13697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13701": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13703": {
      "op": "SHL"
    },
    "13704": {
      "op": "SUB"
    },
    "13705": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP1",
      "path": "18"
    },
    "13706": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP3",
      "path": "18"
    },
    "13707": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "AND",
      "path": "18"
    },
    "13708": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x140"
    },
    "13711": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DUP5",
      "path": "18"
    },
    "13712": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13713": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13716": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13718": {
      "op": "SHL"
    },
    "13719": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13720": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13721": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "DIV",
      "path": "18"
    },
    "13722": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "AND",
      "path": "18"
    },
    "13723": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x160"
    },
    "13726": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "13727": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13728": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "ADD",
      "path": "18"
    },
    "13729": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "13730": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "13731": {
      "fn": "HouseOfPanda._getProject",
      "offset": [
        8664,
        8691
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "13732": {
      "op": "POP"
    },
    "13733": {
      "op": "POP"
    },
    "13734": {
      "fn": "HouseOfPanda._getProject",
      "jump": "o",
      "offset": [
        8445,
        8698
      ],
      "op": "JUMP",
      "path": "18"
    },
    "13735": {
      "fn": "HasAdmin._setAdmin",
      "offset": [
        662,
        782
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "13736": {
      "fn": "HasAdmin._setAdmin",
      "offset": [
        726,
        731
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 132,
      "value": "0xC"
    },
    "13738": {
      "fn": "HasAdmin._setAdmin",
      "offset": [
        726,
        741
      ],
      "op": "DUP1",
      "path": "17"
    },
    "13739": {
      "fn": "HasAdmin._setAdmin",
      "offset": [
        726,
        741
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "13740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13746": {
      "op": "SHL"
    },
    "13747": {
      "op": "SUB"
    },
    "13748": {
      "op": "NOT"
    },
    "13749": {
      "fn": "HasAdmin._setAdmin",
      "offset": [
        726,
        741
      ],
      "op": "AND",
      "path": "17"
    },
    "13750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13756": {
      "op": "SHL"
    },
    "13757": {
      "op": "SUB"
    },
    "13758": {
      "fn": "HasAdmin._setAdmin",
      "offset": [
        726,
        741
      ],
      "op": "DUP4",
      "path": "17"
    },
    "13759": {
      "fn": "HasAdmin._setAdmin",
      "offset": [
        726,
        741
      ],
      "op": "AND",
      "path": "17"
    },
    "13760": {
      "fn": "HasAdmin._setAdmin",
      "offset": [
        726,
        741
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "13761": {
      "fn": "HasAdmin._setAdmin",
      "offset": [
        726,
        741
      ],
      "op": "DUP2",
      "path": "17"
    },
    "13762": {
      "fn": "HasAdmin._setAdmin",
      "offset": [
        726,
        741
      ],
      "op": "OR",
      "path": "17"
    },
    "13763": {
      "fn": "HasAdmin._setAdmin",
      "offset": [
        726,
        741
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "13764": {
      "fn": "HasAdmin._setAdmin",
      "offset": [
        726,
        741
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "13765": {
      "fn": "HasAdmin._setAdmin",
      "offset": [
        726,
        741
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "13766": {
      "fn": "HasAdmin._setAdmin",
      "offset": [
        756,
        775
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 133,
      "value": "0x40"
    },
    "13768": {
      "fn": "HasAdmin._setAdmin",
      "offset": [
        756,
        775
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "13769": {
      "fn": "HasAdmin._setAdmin",
      "offset": [
        756,
        775
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x7CE7EC0B50378FB6C0186FFB5F48325F6593FCB4CA4386F21861AF3129188F5C"
    },
    "13802": {
      "fn": "HasAdmin._setAdmin",
      "offset": [
        756,
        775
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "13803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13805": {
      "op": "SWAP1"
    },
    "13806": {
      "fn": "HasAdmin._setAdmin",
      "offset": [
        756,
        775
      ],
      "op": "LOG2",
      "path": "17"
    },
    "13807": {
      "fn": "HasAdmin._setAdmin",
      "offset": [
        662,
        782
      ],
      "op": "POP",
      "path": "17"
    },
    "13808": {
      "fn": "HasAdmin._setAdmin",
      "jump": "o",
      "offset": [
        662,
        782
      ],
      "op": "JUMP",
      "path": "17"
    },
    "13809": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13816": {
      "op": "SHL"
    },
    "13817": {
      "op": "SUB"
    },
    "13818": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5198,
        5214
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 134
    },
    "13819": {
      "branch": 238,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5198,
        5214
      ],
      "op": "AND",
      "path": "2"
    },
    "13820": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3617"
    },
    "13823": {
      "branch": 238,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13824": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13826": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13827": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13831": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13833": {
      "op": "SHL"
    },
    "13834": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13835": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13836": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13838": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "ADD",
      "path": "2"
    },
    "13839": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82F"
    },
    "13842": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13843": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5301"
    },
    "13846": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5190,
        5256
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13847": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13848": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "11"
    },
    "13849": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5309,
        5405
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 135,
      "value": "0x3627"
    },
    "13852": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "DUP2",
      "path": "11"
    },
    "13853": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5340,
        5344
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13854": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5348
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13855": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5350,
        5371
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31AC"
    },
    "13858": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5368,
        5370
      ],
      "op": "DUP9",
      "path": "2"
    },
    "13859": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5350,
        5367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x411B"
    },
    "13862": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5350,
        5371
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13863": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5309,
        5405
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13864": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5416,
        5435
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13866": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP5",
      "path": "2"
    },
    "13867": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13868": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13869": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13871": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13872": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13873": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13874": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13876": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13877": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13878": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13885": {
      "op": "SHL"
    },
    "13886": {
      "op": "SUB"
    },
    "13887": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "DUP11",
      "path": "2"
    },
    "13888": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "AND",
      "path": "2"
    },
    "13889": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "DUP5",
      "path": "2"
    },
    "13890": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13891": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13892": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13893": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13894": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13895": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13896": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13897": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 136
    },
    "13898": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13899": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "LT",
      "path": "2"
    },
    "13900": {
      "branch": 239,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13901": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3668"
    },
    "13904": {
      "branch": 239,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13905": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13907": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13908": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13912": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13914": {
      "op": "SHL"
    },
    "13915": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13916": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13917": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13919": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "ADD",
      "path": "2"
    },
    "13920": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82F"
    },
    "13923": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13924": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5346"
    },
    "13927": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5467,
        5543
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13928": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13929": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5586
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 137,
      "value": "0x0"
    },
    "13931": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP6",
      "path": "2"
    },
    "13932": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13933": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13934": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13936": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13937": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13938": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13939": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13941": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13942": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13943": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13950": {
      "op": "SHL"
    },
    "13951": {
      "op": "SUB"
    },
    "13952": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP12",
      "path": "2"
    },
    "13953": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13954": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "AND",
      "path": "2"
    },
    "13955": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP6",
      "path": "2"
    },
    "13956": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13957": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "13958": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13959": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13960": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13961": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13962": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13963": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP6",
      "path": "2"
    },
    "13964": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "SUB",
      "path": "2"
    },
    "13965": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5619
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13966": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5619
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "13967": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 138
    },
    "13968": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "DUP9",
      "path": "2"
    },
    "13969": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "AND",
      "path": "2"
    },
    "13970": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13971": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13972": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13973": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13974": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13975": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13976": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13977": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "13978": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5586
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13979": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36A5"
    },
    "13982": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13983": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP5",
      "path": "2"
    },
    "13984": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13985": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x52B3"
    },
    "13988": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5639,
        5666
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13989": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13990": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13991": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13992": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "13993": {
      "op": "POP"
    },
    "13994": {
      "op": "POP"
    },
    "13995": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 139,
      "value": "0x40"
    },
    "13997": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13998": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13999": {
      "op": "DUP7"
    },
    "14000": {
      "op": "DUP2"
    },
    "14001": {
      "op": "MSTORE"
    },
    "14002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14004": {
      "op": "DUP2"
    },
    "14005": {
      "op": "ADD"
    },
    "14006": {
      "op": "DUP7"
    },
    "14007": {
      "op": "SWAP1"
    },
    "14008": {
      "op": "MSTORE"
    },
    "14009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14015": {
      "op": "SHL"
    },
    "14016": {
      "op": "SUB"
    },
    "14017": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14018": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP10",
      "path": "2"
    },
    "14019": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "AND",
      "path": "2"
    },
    "14020": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14021": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP11",
      "path": "2"
    },
    "14022": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14023": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "AND",
      "path": "2"
    },
    "14024": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14025": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14026": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP7",
      "path": "2"
    },
    "14027": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "AND",
      "path": "2"
    },
    "14028": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14029": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "14062": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14063": {
      "op": "ADD"
    },
    "14064": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14066": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14067": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14068": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14069": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SUB",
      "path": "2"
    },
    "14070": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14071": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "LOG4",
      "path": "2"
    },
    "14072": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5739,
        5807
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 140,
      "value": "0x3705"
    },
    "14075": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5770,
        5778
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14076": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5780,
        5784
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14077": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5786,
        5788
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14078": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5790,
        5792
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14079": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5794,
        5800
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14080": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5802,
        5806
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14081": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5739,
        5769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4166"
    },
    "14084": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5739,
        5807
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14085": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5739,
        5807
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14086": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5180,
        5814
      ],
      "op": "POP",
      "path": "2"
    },
    "14087": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5180,
        5814
      ],
      "op": "POP",
      "path": "2"
    },
    "14088": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "2"
    },
    "14089": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "2"
    },
    "14090": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "2"
    },
    "14091": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "2"
    },
    "14092": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "2"
    },
    "14093": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "o",
      "offset": [
        5017,
        5814
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14094": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2099,
        2495
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "14095": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2206,
        2213
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "14097": {
      "offset": [
        334,
        432
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "14099": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        334,
        432
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "14100": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        334,
        432
      ],
      "op": "DUP1",
      "path": "24"
    },
    "14101": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        334,
        432
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x80"
    },
    "14103": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        334,
        432
      ],
      "op": "ADD",
      "path": "24"
    },
    "14104": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        334,
        432
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "14106": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        334,
        432
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "14107": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        334,
        432
      ],
      "op": "DUP1",
      "path": "24"
    },
    "14108": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        334,
        432
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x43"
    },
    "14110": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        334,
        432
      ],
      "op": "DUP2",
      "path": "24"
    },
    "14111": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        334,
        432
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "14112": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        334,
        432
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "14114": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        334,
        432
      ],
      "op": "ADD",
      "path": "24"
    },
    "14115": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        334,
        432
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x55DC"
    },
    "14118": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        334,
        432
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x43"
    },
    "14120": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        334,
        432
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "14121": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        334,
        432
      ],
      "op": "CODECOPY",
      "path": "24"
    },
    "14122": {
      "offset": [
        315,
        438
      ],
      "op": "DUP1",
      "path": "24"
    },
    "14123": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        315,
        438
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "14124": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        315,
        438
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "14126": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        315,
        438
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "14127": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        315,
        438
      ],
      "op": "DUP3",
      "path": "24"
    },
    "14128": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        315,
        438
      ],
      "op": "ADD",
      "path": "24"
    },
    "14129": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        315,
        438
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "14130": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2354,
        2366
      ],
      "op": "DUP4",
      "path": "24",
      "statement": 141
    },
    "14131": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2354,
        2366
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "14132": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2388,
        2399
      ],
      "op": "DUP5",
      "path": "24"
    },
    "14133": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2388,
        2399
      ],
      "op": "DUP4",
      "path": "24"
    },
    "14134": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2388,
        2399
      ],
      "op": "ADD",
      "path": "24"
    },
    "14135": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2388,
        2399
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "14136": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2431,
        2455
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "14138": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2431,
        2455
      ],
      "op": "DUP1",
      "path": "24"
    },
    "14139": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2431,
        2455
      ],
      "op": "DUP8",
      "path": "24"
    },
    "14140": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2431,
        2455
      ],
      "op": "ADD",
      "path": "24"
    },
    "14141": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2431,
        2455
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "14142": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2421,
        2456
      ],
      "op": "DUP1",
      "path": "24"
    },
    "14143": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2421,
        2456
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "14144": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2421,
        2456
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "14145": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2421,
        2456
      ],
      "op": "DUP7",
      "path": "24"
    },
    "14146": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2421,
        2456
      ],
      "op": "ADD",
      "path": "24"
    },
    "14147": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2421,
        2456
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "14148": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2275,
        2474
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "14149": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2275,
        2474
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "14150": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2275,
        2474
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x32C1"
    },
    "14153": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2275,
        2474
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "14154": {
      "fn": "NativeMetaTransaction.hashMetaTransaction",
      "offset": [
        2275,
        2474
      ],
      "op": "ADD",
      "path": "24"
    },
    "14155": {
      "op": "SWAP4"
    },
    "14156": {
      "op": "DUP5"
    },
    "14157": {
      "op": "MSTORE"
    },
    "14158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14160": {
      "op": "DUP5"
    },
    "14161": {
      "op": "ADD"
    },
    "14162": {
      "op": "SWAP3"
    },
    "14163": {
      "op": "SWAP1"
    },
    "14164": {
      "op": "SWAP3"
    },
    "14165": {
      "op": "MSTORE"
    },
    "14166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14172": {
      "op": "SHL"
    },
    "14173": {
      "op": "SUB"
    },
    "14174": {
      "op": "AND"
    },
    "14175": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14177": {
      "op": "DUP4"
    },
    "14178": {
      "op": "ADD"
    },
    "14179": {
      "op": "MSTORE"
    },
    "14180": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14182": {
      "op": "DUP3"
    },
    "14183": {
      "op": "ADD"
    },
    "14184": {
      "op": "MSTORE"
    },
    "14185": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14187": {
      "op": "ADD"
    },
    "14188": {
      "op": "SWAP1"
    },
    "14189": {
      "op": "JUMP"
    },
    "14190": {
      "fn": "EIP712Base.toTypedMessageHash",
      "offset": [
        1884,
        2133
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "14191": {
      "fn": "EIP712Base.toTypedMessageHash",
      "offset": [
        1980,
        1987
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "14193": {
      "fn": "EIP712Base.toTypedMessageHash",
      "offset": [
        2078,
        2098
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 142,
      "value": "0x3779"
    },
    "14196": {
      "fn": "EIP712Base.getDomainSeperator",
      "offset": [
        1341,
        1356
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "14198": {
      "fn": "EIP712Base.getDomainSeperator",
      "offset": [
        1341,
        1356
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "14199": {
      "fn": "EIP712Base.getDomainSeperator",
      "offset": [
        1341,
        1356
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "14200": {
      "fn": "EIP712Base.getDomainSeperator",
      "offset": [
        1264,
        1363
      ],
      "op": "JUMP",
      "path": "22"
    },
    "14201": {
      "fn": "EIP712Base.toTypedMessageHash",
      "offset": [
        2078,
        2098
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "14202": {
      "fn": "EIP712Base.toTypedMessageHash",
      "offset": [
        2049,
        2112
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "14204": {
      "fn": "EIP712Base.toTypedMessageHash",
      "offset": [
        2049,
        2112
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "14205": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "14208": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "14210": {
      "op": "SHL"
    },
    "14211": {
      "fn": "EIP712Base.toTypedMessageHash",
      "offset": [
        2049,
        2112
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "14213": {
      "fn": "EIP712Base.toTypedMessageHash",
      "offset": [
        2049,
        2112
      ],
      "op": "DUP3",
      "path": "22"
    },
    "14214": {
      "fn": "EIP712Base.toTypedMessageHash",
      "offset": [
        2049,
        2112
      ],
      "op": "ADD",
      "path": "22"
    },
    "14215": {
      "op": "MSTORE"
    },
    "14216": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "14218": {
      "op": "DUP2"
    },
    "14219": {
      "op": "ADD"
    },
    "14220": {
      "op": "SWAP2"
    },
    "14221": {
      "op": "SWAP1"
    },
    "14222": {
      "op": "SWAP2"
    },
    "14223": {
      "op": "MSTORE"
    },
    "14224": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "14226": {
      "op": "DUP2"
    },
    "14227": {
      "op": "ADD"
    },
    "14228": {
      "op": "DUP4"
    },
    "14229": {
      "op": "SWAP1"
    },
    "14230": {
      "op": "MSTORE"
    },
    "14231": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "14233": {
      "op": "ADD"
    },
    "14234": {
      "fn": "EIP712Base.toTypedMessageHash",
      "offset": [
        2049,
        2112
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x32C1"
    },
    "14237": {
      "op": "JUMP"
    },
    "14238": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        3828,
        6439
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14245": {
      "op": "SHL"
    },
    "14246": {
      "op": "SUB"
    },
    "14247": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4055,
        4073
      ],
      "op": "DUP6",
      "path": "18"
    },
    "14248": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4055,
        4073
      ],
      "op": "AND",
      "path": "18"
    },
    "14249": {
      "branch": 214,
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4055,
        4073
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14250": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4055,
        4093
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14251": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4055,
        4093
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14252": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4055,
        4093
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x37BC"
    },
    "14255": {
      "branch": 214,
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4055,
        4093
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14256": {
      "op": "POP"
    },
    "14257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14263": {
      "op": "SHL"
    },
    "14264": {
      "op": "SUB"
    },
    "14265": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4077,
        4093
      ],
      "op": "DUP5",
      "path": "18"
    },
    "14266": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4077,
        4093
      ],
      "op": "AND",
      "path": "18"
    },
    "14267": {
      "branch": 215,
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4077,
        4093
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14268": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4055,
        4093
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14269": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4109,
        4116
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 143,
      "value": "0x2BF9"
    },
    "14272": {
      "branch": 215,
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4051,
        4126
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14273": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4136,
        4162
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x37F4"
    },
    "14276": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14278": {
      "op": "MLOAD"
    },
    "14279": {
      "op": "DUP1"
    },
    "14280": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14282": {
      "op": "ADD"
    },
    "14283": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14285": {
      "op": "MSTORE"
    },
    "14286": {
      "op": "DUP1"
    },
    "14287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14289": {
      "op": "DUP2"
    },
    "14290": {
      "op": "MSTORE"
    },
    "14291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14293": {
      "op": "ADD"
    },
    "14294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14300": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14302": {
      "op": "SHL"
    },
    "14303": {
      "op": "SUB"
    },
    "14304": {
      "op": "AND"
    },
    "14305": {
      "op": "DUP2"
    },
    "14306": {
      "op": "MSTORE"
    },
    "14307": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14309": {
      "op": "ADD"
    },
    "14310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14312": {
      "op": "DUP2"
    },
    "14313": {
      "op": "MSTORE"
    },
    "14314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14316": {
      "op": "ADD"
    },
    "14317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14319": {
      "op": "DUP2"
    },
    "14320": {
      "op": "MSTORE"
    },
    "14321": {
      "op": "POP"
    },
    "14322": {
      "op": "SWAP1"
    },
    "14323": {
      "op": "JUMP"
    },
    "14324": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4136,
        4162
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14325": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4178,
        4187
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14327": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4173,
        6433
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14328": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4197,
        4200
      ],
      "op": "DUP5",
      "path": "18"
    },
    "14329": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4197,
        4207
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14330": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4193,
        4194
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14331": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4193,
        4207
      ],
      "op": "LT",
      "path": "18"
    },
    "14332": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4173,
        6433
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14333": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4173,
        6433
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D66"
    },
    "14336": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4173,
        6433
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14337": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4228,
        4238
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14339": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4241,
        4244
      ],
      "op": "DUP6",
      "path": "18"
    },
    "14340": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4245,
        4246
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14341": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4241,
        4247
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14342": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4241,
        4247
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14343": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4241,
        4247
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14344": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4241,
        4247
      ],
      "op": "LT",
      "path": "18"
    },
    "14345": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4241,
        4247
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3814"
    },
    "14348": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4241,
        4247
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14349": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4241,
        4247
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3814"
    },
    "14352": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4241,
        4247
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5089"
    },
    "14355": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        4241,
        4247
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14356": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4241,
        4247
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14357": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4241,
        4247
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "14359": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4241,
        4247
      ],
      "op": "MUL",
      "path": "18"
    },
    "14360": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4241,
        4247
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "14362": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4241,
        4247
      ],
      "op": "ADD",
      "path": "18"
    },
    "14363": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4241,
        4247
      ],
      "op": "ADD",
      "path": "18"
    },
    "14364": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4241,
        4247
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14365": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4228,
        4247
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14366": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4228,
        4247
      ],
      "op": "POP",
      "path": "18"
    },
    "14367": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4261,
        4275
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14369": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4278,
        4285
      ],
      "op": "DUP6",
      "path": "18"
    },
    "14370": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4286,
        4287
      ],
      "op": "DUP4",
      "path": "18"
    },
    "14371": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4278,
        4288
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14372": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4278,
        4288
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14373": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4278,
        4288
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14374": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4278,
        4288
      ],
      "op": "LT",
      "path": "18"
    },
    "14375": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4278,
        4288
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3832"
    },
    "14378": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4278,
        4288
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14379": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4278,
        4288
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3832"
    },
    "14382": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4278,
        4288
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5089"
    },
    "14385": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        4278,
        4288
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14386": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4278,
        4288
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14387": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4278,
        4288
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "14389": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4278,
        4288
      ],
      "op": "MUL",
      "path": "18"
    },
    "14390": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4278,
        4288
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "14392": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4278,
        4288
      ],
      "op": "ADD",
      "path": "18"
    },
    "14393": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4278,
        4288
      ],
      "op": "ADD",
      "path": "18"
    },
    "14394": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4278,
        4288
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14395": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4261,
        4288
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14396": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4261,
        4288
      ],
      "op": "POP",
      "path": "18"
    },
    "14397": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4303,
        4329
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14399": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4332,
        4355
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3847"
    },
    "14402": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4351,
        4353
      ],
      "op": "DUP4",
      "path": "18"
    },
    "14403": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4332,
        4343
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x33C3"
    },
    "14406": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        4332,
        4355
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14407": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4332,
        4355
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14408": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4450
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "14410": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4450
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "14411": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14413": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14414": {
      "op": "PUSH4",
      "value": "0x6EDC9D8D"
    },
    "14419": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "14421": {
      "op": "SHL"
    },
    "14422": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14423": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14424": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4303,
        4355
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14425": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4303,
        4355
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "14426": {
      "op": "POP"
    },
    "14427": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4421,
        4441
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14429": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4421,
        4441
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14436": {
      "op": "SHL"
    },
    "14437": {
      "op": "SUB"
    },
    "14438": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4450
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14439": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4450
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14440": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4450
      ],
      "op": "AND",
      "path": "18"
    },
    "14441": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4450
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14442": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4468
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xDDB93B1A"
    },
    "14447": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4468
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14448": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x387F"
    },
    "14451": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14452": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4469,
        4473
      ],
      "op": "DUP15",
      "path": "18"
    },
    "14453": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4469,
        4473
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14454": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4482,
        4484
      ],
      "op": "DUP9",
      "path": "18"
    },
    "14455": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4482,
        4484
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14456": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "14458": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "ADD",
      "path": "18"
    },
    "14459": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5185"
    },
    "14462": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        4444,
        4486
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14463": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14464": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "14466": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14468": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14469": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14470": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "DUP4",
      "path": "18"
    },
    "14471": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "SUB",
      "path": "18"
    },
    "14472": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14473": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "DUP7",
      "path": "18"
    },
    "14474": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "GAS",
      "path": "18"
    },
    "14475": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "14476": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14477": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14478": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14479": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x389C"
    },
    "14482": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14483": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14484": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14486": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14487": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "14488": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14489": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14491": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "REVERT",
      "path": "18"
    },
    "14492": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14493": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "POP",
      "path": "18"
    },
    "14494": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "POP",
      "path": "18"
    },
    "14495": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "POP",
      "path": "18"
    },
    "14496": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "POP",
      "path": "18"
    },
    "14497": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14499": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14500": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14501": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "14503": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "NOT",
      "path": "18"
    },
    "14504": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "14506": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14507": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "ADD",
      "path": "18"
    },
    "14508": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "AND",
      "path": "18"
    },
    "14509": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14510": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "ADD",
      "path": "18"
    },
    "14511": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14512": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14514": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14515": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "POP",
      "path": "18"
    },
    "14516": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14517": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "ADD",
      "path": "18"
    },
    "14518": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14519": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38C0"
    },
    "14522": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14523": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14524": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x520F"
    },
    "14527": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        4444,
        4486
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14528": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4444,
        4486
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14529": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4504,
        4511
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14530": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4504,
        4511
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14531": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4421,
        4486
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14532": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4421,
        4486
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14533": {
      "op": "POP"
    },
    "14534": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4504,
        4515
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "14539": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4504,
        4515
      ],
      "op": "AND",
      "path": "18"
    },
    "14540": {
      "branch": 216,
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4504,
        4515
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14541": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4500,
        4620
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3931"
    },
    "14544": {
      "branch": 216,
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4500,
        4620
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14545": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4583,
        4586
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 144
    },
    "14546": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4583,
        4590
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14548": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4583,
        4590
      ],
      "op": "ADD",
      "path": "18"
    },
    "14549": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4583,
        4590
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14550": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4543,
        4590
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "14555": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4543,
        4590
      ],
      "op": "AND",
      "path": "18"
    },
    "14556": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4573,
        4579
      ],
      "op": "DUP4",
      "path": "18"
    },
    "14557": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4543,
        4570
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38EC"
    },
    "14560": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4553,
        4557
      ],
      "op": "DUP14",
      "path": "18"
    },
    "14561": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4566,
        4568
      ],
      "op": "DUP8",
      "path": "18"
    },
    "14562": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4543,
        4570
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "14567": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4543,
        4570
      ],
      "op": "AND",
      "path": "18"
    },
    "14568": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4543,
        4552
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7C7"
    },
    "14571": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        4543,
        4570
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14572": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4543,
        4570
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14573": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4543,
        4579
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38F6"
    },
    "14576": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4543,
        4579
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14577": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4543,
        4579
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14578": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4543,
        4579
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x52DA"
    },
    "14581": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        4543,
        4579
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14582": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4543,
        4579
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14583": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4543,
        4590
      ],
      "op": "LT",
      "path": "18"
    },
    "14584": {
      "branch": 217,
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4543,
        4590
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14585": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4535,
        4605
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3931"
    },
    "14588": {
      "branch": 217,
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4535,
        4605
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14589": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4535,
        4605
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14591": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4535,
        4605
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14592": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14596": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14598": {
      "op": "SHL"
    },
    "14599": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4535,
        4605
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14600": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4535,
        4605
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14603": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4535,
        4605
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "14605": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4535,
        4605
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14606": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4535,
        4605
      ],
      "op": "ADD",
      "path": "18"
    },
    "14607": {
      "op": "MSTORE"
    },
    "14608": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "14610": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14612": {
      "op": "DUP3"
    },
    "14613": {
      "op": "ADD"
    },
    "14614": {
      "op": "MSTORE"
    },
    "14615": {
      "op": "PUSH10",
      "value": "0x696E207374616B696E67"
    },
    "14626": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "14628": {
      "op": "SHL"
    },
    "14629": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14631": {
      "op": "DUP3"
    },
    "14632": {
      "op": "ADD"
    },
    "14633": {
      "op": "MSTORE"
    },
    "14634": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14636": {
      "op": "ADD"
    },
    "14637": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4535,
        4605
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82F"
    },
    "14640": {
      "op": "JUMP"
    },
    "14641": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4535,
        4605
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14642": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4664,
        4679
      ],
      "op": "TIMESTAMP",
      "path": "18"
    },
    "14643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14649": {
      "op": "SHL"
    },
    "14650": {
      "op": "SUB"
    },
    "14651": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4699,
        4717
      ],
      "op": "DUP13",
      "path": "18"
    },
    "14652": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4699,
        4717
      ],
      "op": "AND",
      "path": "18"
    },
    "14653": {
      "branch": 218,
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4699,
        4717
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14654": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4695,
        5658
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3B3E"
    },
    "14657": {
      "branch": 218,
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4695,
        5658
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14658": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4753
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 145,
      "value": "0xF"
    },
    "14660": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4753
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "14661": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14663": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14664": {
      "op": "PUSH4",
      "value": "0x128FD139"
    },
    "14669": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "14671": {
      "op": "SHL"
    },
    "14672": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14673": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14680": {
      "op": "SHL"
    },
    "14681": {
      "op": "SUB"
    },
    "14682": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4753
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14683": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4753
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14684": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4753
      ],
      "op": "AND",
      "path": "18"
    },
    "14685": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4753
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14686": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4771
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x947E89C8"
    },
    "14691": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4771
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14692": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3973"
    },
    "14695": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14696": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4772,
        4776
      ],
      "op": "DUP16",
      "path": "18"
    },
    "14697": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4772,
        4776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14698": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4785,
        4787
      ],
      "op": "DUP10",
      "path": "18"
    },
    "14699": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4785,
        4787
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14700": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "14702": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "ADD",
      "path": "18"
    },
    "14703": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5185"
    },
    "14706": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        4747,
        4789
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14707": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14708": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "14710": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14712": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14713": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14714": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "DUP4",
      "path": "18"
    },
    "14715": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "SUB",
      "path": "18"
    },
    "14716": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14717": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "DUP7",
      "path": "18"
    },
    "14718": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "GAS",
      "path": "18"
    },
    "14719": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "14720": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14721": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14722": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14723": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3990"
    },
    "14726": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14727": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14728": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14730": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14731": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "14732": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14733": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14735": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "REVERT",
      "path": "18"
    },
    "14736": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14737": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "POP",
      "path": "18"
    },
    "14738": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "POP",
      "path": "18"
    },
    "14739": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "POP",
      "path": "18"
    },
    "14740": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "POP",
      "path": "18"
    },
    "14741": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14743": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14744": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14745": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "14747": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "NOT",
      "path": "18"
    },
    "14748": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "14750": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14751": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "ADD",
      "path": "18"
    },
    "14752": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "AND",
      "path": "18"
    },
    "14753": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14754": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "ADD",
      "path": "18"
    },
    "14755": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14756": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14758": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14759": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "POP",
      "path": "18"
    },
    "14760": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14761": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "ADD",
      "path": "18"
    },
    "14762": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14763": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x39B4"
    },
    "14766": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14767": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14768": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x51A4"
    },
    "14771": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        4747,
        4789
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14772": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4747,
        4789
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14773": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4875,
        4886
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14774": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4875,
        4886
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14775": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4737,
        4789
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14776": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4737,
        4789
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "14777": {
      "op": "POP"
    },
    "14778": {
      "branch": 219,
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4875,
        4890
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14779": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4871,
        5409
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3AC3"
    },
    "14782": {
      "branch": 219,
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4871,
        5409
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14783": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4915,
        4929
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14785": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4932,
        4977
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x39CF"
    },
    "14788": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4943,
        4958
      ],
      "op": "TIMESTAMP",
      "path": "18"
    },
    "14789": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4961,
        4968
      ],
      "op": "DUP6",
      "path": "18"
    },
    "14790": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4961,
        4976
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x180"
    },
    "14793": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4961,
        4976
      ],
      "op": "ADD",
      "path": "18"
    },
    "14794": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4961,
        4976
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14795": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4932,
        4935
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4221"
    },
    "14798": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        4932,
        4977
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14799": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4932,
        4977
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14800": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4915,
        4977
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14801": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4915,
        4977
      ],
      "op": "POP",
      "path": "18"
    },
    "14802": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5015,
        5021
      ],
      "op": "DUP5",
      "path": "18",
      "statement": 146
    },
    "14803": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5000,
        5007
      ],
      "op": "DUP9",
      "path": "18"
    },
    "14804": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5000,
        5011
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14806": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5000,
        5011
      ],
      "op": "ADD",
      "path": "18"
    },
    "14807": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5000,
        5021
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14808": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5000,
        5021
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14809": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5000,
        5021
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14810": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5000,
        5021
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x39E3"
    },
    "14813": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5000,
        5021
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14814": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5000,
        5021
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14815": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5000,
        5021
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x52DA"
    },
    "14818": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        5000,
        5021
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14819": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5000,
        5021
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14820": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5000,
        5021
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14821": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5000,
        5021
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14822": {
      "op": "POP"
    },
    "14823": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5057,
        5074
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "14825": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5057,
        5074
      ],
      "op": "DUP9",
      "path": "18"
    },
    "14826": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5057,
        5074
      ],
      "op": "ADD",
      "path": "18"
    },
    "14827": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5057,
        5074
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14832": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14834": {
      "op": "SHL"
    },
    "14835": {
      "op": "SUB"
    },
    "14836": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5047,
        5074
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14837": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5047,
        5074
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14838": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5047,
        5074
      ],
      "op": "AND",
      "path": "18"
    },
    "14839": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5047,
        5074
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14840": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5047,
        5074
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14841": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5047,
        5074
      ],
      "op": "AND",
      "path": "18"
    },
    "14842": {
      "branch": 220,
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5047,
        5074
      ],
      "op": "GT",
      "path": "18"
    },
    "14843": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5043,
        5391
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14844": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5043,
        5391
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3AC1"
    },
    "14847": {
      "branch": 220,
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5043,
        5391
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14848": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5132
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 147,
      "value": "0xF"
    },
    "14850": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5132
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "14851": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5193,
        5206
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "14853": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5193,
        5206
      ],
      "op": "DUP6",
      "path": "18"
    },
    "14854": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5193,
        5206
      ],
      "op": "ADD",
      "path": "18"
    },
    "14855": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5193,
        5206
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14856": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5179,
        5190
      ],
      "op": "DUP10",
      "path": "18"
    },
    "14857": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5179,
        5190
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14864": {
      "op": "SHL"
    },
    "14865": {
      "op": "SUB"
    },
    "14866": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5132
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14867": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5132
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "14868": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5132
      ],
      "op": "AND",
      "path": "18"
    },
    "14869": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5132
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14870": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5149
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x45305AB8"
    },
    "14875": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5149
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14876": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5179,
        5206
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3A24"
    },
    "14879": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5179,
        5206
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14880": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5179,
        5206
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x50CE"
    },
    "14883": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        5179,
        5206
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14884": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5179,
        5206
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14885": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5236,
        5253
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "14887": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5236,
        5253
      ],
      "op": "DUP12",
      "path": "18"
    },
    "14888": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5236,
        5253
      ],
      "op": "ADD",
      "path": "18"
    },
    "14889": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5236,
        5253
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14890": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5320,
        5331
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x120"
    },
    "14893": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5320,
        5331
      ],
      "op": "DUP9",
      "path": "18"
    },
    "14894": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5320,
        5331
      ],
      "op": "ADD",
      "path": "18"
    },
    "14895": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5320,
        5331
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14896": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14898": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14903": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14905": {
      "op": "SHL"
    },
    "14906": {
      "op": "SUB"
    },
    "14907": {
      "op": "NOT"
    },
    "14908": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "14910": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "DUP7",
      "path": "18"
    },
    "14911": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14912": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "SHL",
      "path": "18"
    },
    "14913": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "AND",
      "path": "18"
    },
    "14914": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14915": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14916": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "14918": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14919": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "ADD",
      "path": "18"
    },
    "14920": {
      "op": "SWAP4"
    },
    "14921": {
      "op": "SWAP1"
    },
    "14922": {
      "op": "SWAP4"
    },
    "14923": {
      "op": "MSTORE"
    },
    "14924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14928": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14930": {
      "op": "SHL"
    },
    "14931": {
      "op": "SUB"
    },
    "14932": {
      "op": "SWAP2"
    },
    "14933": {
      "op": "DUP3"
    },
    "14934": {
      "op": "AND"
    },
    "14935": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14937": {
      "op": "DUP5"
    },
    "14938": {
      "op": "ADD"
    },
    "14939": {
      "op": "MSTORE"
    },
    "14940": {
      "op": "SWAP1"
    },
    "14941": {
      "op": "DUP6"
    },
    "14942": {
      "op": "AND"
    },
    "14943": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14945": {
      "op": "DUP4"
    },
    "14946": {
      "op": "ADD"
    },
    "14947": {
      "op": "MSTORE"
    },
    "14948": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14950": {
      "op": "DUP3"
    },
    "14951": {
      "op": "ADD"
    },
    "14952": {
      "op": "MSTORE"
    },
    "14953": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "14955": {
      "op": "ADD"
    },
    "14956": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "14958": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14960": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14961": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14962": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "DUP4",
      "path": "18"
    },
    "14963": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "SUB",
      "path": "18"
    },
    "14964": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14965": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "DUP7",
      "path": "18"
    },
    "14966": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "GAS",
      "path": "18"
    },
    "14967": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "14968": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14969": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14970": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14971": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3A88"
    },
    "14974": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14975": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14976": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14978": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14979": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "14980": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14981": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14983": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "REVERT",
      "path": "18"
    },
    "14984": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14985": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "POP",
      "path": "18"
    },
    "14986": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "POP",
      "path": "18"
    },
    "14987": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "POP",
      "path": "18"
    },
    "14988": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "POP",
      "path": "18"
    },
    "14989": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14991": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14992": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14993": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "14995": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "NOT",
      "path": "18"
    },
    "14996": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "14998": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14999": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "ADD",
      "path": "18"
    },
    "15000": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "AND",
      "path": "18"
    },
    "15001": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "DUP3",
      "path": "18"
    },
    "15002": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "ADD",
      "path": "18"
    },
    "15003": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15004": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15006": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "15007": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "POP",
      "path": "18"
    },
    "15008": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15009": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "ADD",
      "path": "18"
    },
    "15010": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15011": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3AAC"
    },
    "15014": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15015": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15016": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x50E5"
    },
    "15019": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        5126,
        5368
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15020": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5126,
        5368
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15021": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5102,
        5109
      ],
      "op": "DUP9",
      "path": "18"
    },
    "15022": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5102,
        5122
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15024": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5102,
        5122
      ],
      "op": "ADD",
      "path": "18"
    },
    "15025": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5102,
        5368
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15026": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5102,
        5368
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15027": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5102,
        5368
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15028": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5102,
        5368
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3ABD"
    },
    "15031": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5102,
        5368
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15032": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5102,
        5368
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15033": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5102,
        5368
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x52B3"
    },
    "15036": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        5102,
        5368
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15037": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5102,
        5368
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15038": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5102,
        5368
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15039": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5102,
        5368
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "15040": {
      "op": "POP"
    },
    "15041": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5043,
        5391
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15042": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4892,
        5409
      ],
      "op": "POP",
      "path": "18"
    },
    "15043": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4871,
        5409
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15044": {
      "op": "POP"
    },
    "15045": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5443,
        5460
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 148,
      "value": "0x20"
    },
    "15047": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5443,
        5460
      ],
      "op": "DUP7",
      "path": "18"
    },
    "15048": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5443,
        5460
      ],
      "op": "ADD",
      "path": "18"
    },
    "15049": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5443,
        5460
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15050": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5443,
        5460
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15055": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15057": {
      "op": "SHL"
    },
    "15058": {
      "op": "SUB"
    },
    "15059": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5506,
        5521
      ],
      "op": "TIMESTAMP",
      "path": "18",
      "statement": 149
    },
    "15060": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5479,
        5522
      ],
      "op": "AND",
      "path": "18"
    },
    "15061": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5479,
        5522
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15062": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5479,
        5522
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15063": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5479,
        5522
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "15064": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5597
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 150,
      "value": "0xF"
    },
    "15066": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5597
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "15067": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15069": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15070": {
      "op": "PUSH4",
      "value": "0x667E6B11"
    },
    "15075": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "15077": {
      "op": "SHL"
    },
    "15078": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15079": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "15080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15084": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15086": {
      "op": "SHL"
    },
    "15087": {
      "op": "SUB"
    },
    "15088": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5597
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15089": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5597
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15090": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5597
      ],
      "op": "AND",
      "path": "18"
    },
    "15091": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5597
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15092": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5616
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xCCFCD622"
    },
    "15097": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5616
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15098": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3B0B"
    },
    "15101": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15102": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5617,
        5621
      ],
      "op": "DUP16",
      "path": "18"
    },
    "15103": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5617,
        5621
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15104": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5630,
        5632
      ],
      "op": "DUP10",
      "path": "18"
    },
    "15105": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5630,
        5632
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15106": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5443,
        5450
      ],
      "op": "DUP13",
      "path": "18"
    },
    "15107": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5443,
        5450
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15108": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "15110": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "ADD",
      "path": "18"
    },
    "15111": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53D5"
    },
    "15114": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        5591,
        5643
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15115": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15116": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15118": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15120": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15121": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15122": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "DUP4",
      "path": "18"
    },
    "15123": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "SUB",
      "path": "18"
    },
    "15124": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15125": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15127": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "DUP8",
      "path": "18"
    },
    "15128": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15129": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "15130": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15131": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15132": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15133": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3B25"
    },
    "15136": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "15137": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15139": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15140": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "REVERT",
      "path": "18"
    },
    "15141": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15142": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "POP",
      "path": "18"
    },
    "15143": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "GAS",
      "path": "18"
    },
    "15144": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "CALL",
      "path": "18"
    },
    "15145": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15146": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15147": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15148": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3B39"
    },
    "15151": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "15152": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "15153": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15155": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15156": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "15157": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "15158": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15160": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "REVERT",
      "path": "18"
    },
    "15161": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15162": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "POP",
      "path": "18"
    },
    "15163": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "POP",
      "path": "18"
    },
    "15164": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "POP",
      "path": "18"
    },
    "15165": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5591,
        5643
      ],
      "op": "POP",
      "path": "18"
    },
    "15166": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4695,
        5658
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15173": {
      "op": "SHL"
    },
    "15174": {
      "op": "SUB"
    },
    "15175": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5676,
        5692
      ],
      "op": "DUP12",
      "path": "18"
    },
    "15176": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5676,
        5692
      ],
      "op": "AND",
      "path": "18"
    },
    "15177": {
      "branch": 221,
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5676,
        5692
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15178": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5672,
        6423
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D4E"
    },
    "15181": {
      "branch": 221,
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5672,
        6423
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "15182": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5776
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 151,
      "value": "0xF"
    },
    "15184": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5776
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "15185": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15187": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15188": {
      "op": "PUSH4",
      "value": "0x128FD139"
    },
    "15193": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "15195": {
      "op": "SHL"
    },
    "15196": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15197": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "15198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15204": {
      "op": "SHL"
    },
    "15205": {
      "op": "SUB"
    },
    "15206": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15207": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5776
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15208": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5776
      ],
      "op": "AND",
      "path": "18"
    },
    "15209": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15210": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5794
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x947E89C8"
    },
    "15215": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5794
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15216": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3B7F"
    },
    "15219": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15220": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5795,
        5797
      ],
      "op": "DUP15",
      "path": "18"
    },
    "15221": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5795,
        5797
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15222": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5806,
        5808
      ],
      "op": "DUP10",
      "path": "18"
    },
    "15223": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5806,
        5808
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15224": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "15226": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "ADD",
      "path": "18"
    },
    "15227": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5185"
    },
    "15230": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        5770,
        5810
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15231": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15232": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "15234": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15236": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15237": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15238": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "DUP4",
      "path": "18"
    },
    "15239": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "SUB",
      "path": "18"
    },
    "15240": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15241": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "DUP7",
      "path": "18"
    },
    "15242": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "GAS",
      "path": "18"
    },
    "15243": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "15244": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15245": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15246": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15247": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3B9C"
    },
    "15250": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "15251": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "15252": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15254": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15255": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "15256": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "15257": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15259": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "REVERT",
      "path": "18"
    },
    "15260": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15261": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "POP",
      "path": "18"
    },
    "15262": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "POP",
      "path": "18"
    },
    "15263": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "POP",
      "path": "18"
    },
    "15264": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "POP",
      "path": "18"
    },
    "15265": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15267": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15268": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "15269": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "15271": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "NOT",
      "path": "18"
    },
    "15272": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "15274": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "DUP3",
      "path": "18"
    },
    "15275": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "ADD",
      "path": "18"
    },
    "15276": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "AND",
      "path": "18"
    },
    "15277": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "DUP3",
      "path": "18"
    },
    "15278": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "ADD",
      "path": "18"
    },
    "15279": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15280": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15282": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "15283": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "POP",
      "path": "18"
    },
    "15284": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15285": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "ADD",
      "path": "18"
    },
    "15286": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15287": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3BC0"
    },
    "15290": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15291": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15292": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x51A4"
    },
    "15295": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        5770,
        5810
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15296": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5770,
        5810
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15297": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5760,
        5810
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "15298": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5760,
        5810
      ],
      "op": "POP",
      "path": "18"
    },
    "15299": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5829,
        5843
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15301": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5846,
        5891
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3BD3"
    },
    "15304": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5857,
        5872
      ],
      "op": "TIMESTAMP",
      "path": "18"
    },
    "15305": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5875,
        5882
      ],
      "op": "DUP6",
      "path": "18"
    },
    "15306": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5875,
        5890
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x180"
    },
    "15309": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5875,
        5890
      ],
      "op": "ADD",
      "path": "18"
    },
    "15310": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5875,
        5890
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15311": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5846,
        5849
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4221"
    },
    "15314": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        5846,
        5891
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15315": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5846,
        5891
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15316": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5914,
        5925
      ],
      "op": "DUP9",
      "path": "18"
    },
    "15317": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5914,
        5925
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15318": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5829,
        5891
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15319": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5829,
        5891
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15320": {
      "op": "POP"
    },
    "15321": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5914,
        5929
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15322": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5914,
        5929
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15323": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5914,
        5929
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15324": {
      "branch": 222,
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5914,
        5929
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15325": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5914,
        5960
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3BFB"
    },
    "15328": {
      "branch": 222,
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5914,
        5960
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "15329": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5914,
        5960
      ],
      "op": "POP",
      "path": "18"
    },
    "15330": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5943,
        5950
      ],
      "op": "DUP8",
      "path": "18"
    },
    "15331": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5943,
        5960
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "15333": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5943,
        5960
      ],
      "op": "ADD",
      "path": "18"
    },
    "15334": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5943,
        5960
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15339": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15341": {
      "op": "SHL"
    },
    "15342": {
      "op": "SUB"
    },
    "15343": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5933,
        5960
      ],
      "op": "AND",
      "path": "18"
    },
    "15344": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5933,
        5940
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15349": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15351": {
      "op": "SHL"
    },
    "15352": {
      "op": "SUB"
    },
    "15353": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5933,
        5960
      ],
      "op": "AND",
      "path": "18"
    },
    "15354": {
      "branch": 223,
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5933,
        5960
      ],
      "op": "GT",
      "path": "18"
    },
    "15355": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5914,
        5960
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15356": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5910,
        6249
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15357": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5910,
        6249
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3CC2"
    },
    "15360": {
      "branch": 223,
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5910,
        6249
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "15361": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6014
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 152,
      "value": "0xF"
    },
    "15363": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6014
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "15364": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6071,
        6084
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "15366": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6071,
        6084
      ],
      "op": "DUP6",
      "path": "18"
    },
    "15367": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6071,
        6084
      ],
      "op": "ADD",
      "path": "18"
    },
    "15368": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6071,
        6084
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15369": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6057,
        6068
      ],
      "op": "DUP10",
      "path": "18"
    },
    "15370": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6057,
        6068
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15377": {
      "op": "SHL"
    },
    "15378": {
      "op": "SUB"
    },
    "15379": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6014
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15380": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6014
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "15381": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6014
      ],
      "op": "AND",
      "path": "18"
    },
    "15382": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6014
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15383": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6031
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x45305AB8"
    },
    "15388": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6031
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15389": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6057,
        6084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3C25"
    },
    "15392": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6057,
        6084
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15393": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6057,
        6084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x50CE"
    },
    "15396": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        6057,
        6084
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15397": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6057,
        6084
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15398": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6110,
        6127
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "15400": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6110,
        6127
      ],
      "op": "DUP12",
      "path": "18"
    },
    "15401": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6110,
        6127
      ],
      "op": "ADD",
      "path": "18"
    },
    "15402": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6110,
        6127
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15403": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6186,
        6197
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x120"
    },
    "15406": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6186,
        6197
      ],
      "op": "DUP9",
      "path": "18"
    },
    "15407": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6186,
        6197
      ],
      "op": "ADD",
      "path": "18"
    },
    "15408": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6186,
        6197
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15409": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15411": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15416": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15418": {
      "op": "SHL"
    },
    "15419": {
      "op": "SUB"
    },
    "15420": {
      "op": "NOT"
    },
    "15421": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "15423": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "DUP7",
      "path": "18"
    },
    "15424": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15425": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "SHL",
      "path": "18"
    },
    "15426": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "AND",
      "path": "18"
    },
    "15427": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15428": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "15429": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "15431": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15432": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "ADD",
      "path": "18"
    },
    "15433": {
      "op": "SWAP4"
    },
    "15434": {
      "op": "SWAP1"
    },
    "15435": {
      "op": "SWAP4"
    },
    "15436": {
      "op": "MSTORE"
    },
    "15437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15441": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15443": {
      "op": "SHL"
    },
    "15444": {
      "op": "SUB"
    },
    "15445": {
      "op": "SWAP2"
    },
    "15446": {
      "op": "DUP3"
    },
    "15447": {
      "op": "AND"
    },
    "15448": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15450": {
      "op": "DUP5"
    },
    "15451": {
      "op": "ADD"
    },
    "15452": {
      "op": "MSTORE"
    },
    "15453": {
      "op": "SWAP1"
    },
    "15454": {
      "op": "DUP6"
    },
    "15455": {
      "op": "AND"
    },
    "15456": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15458": {
      "op": "DUP4"
    },
    "15459": {
      "op": "ADD"
    },
    "15460": {
      "op": "MSTORE"
    },
    "15461": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15463": {
      "op": "DUP3"
    },
    "15464": {
      "op": "ADD"
    },
    "15465": {
      "op": "MSTORE"
    },
    "15466": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "15468": {
      "op": "ADD"
    },
    "15469": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "15471": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15473": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15474": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15475": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "DUP4",
      "path": "18"
    },
    "15476": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "SUB",
      "path": "18"
    },
    "15477": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15478": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "DUP7",
      "path": "18"
    },
    "15479": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "GAS",
      "path": "18"
    },
    "15480": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "15481": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15482": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15483": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15484": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3C89"
    },
    "15487": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "15488": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "15489": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15491": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15492": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "15493": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "15494": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15496": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "REVERT",
      "path": "18"
    },
    "15497": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15498": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "POP",
      "path": "18"
    },
    "15499": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "POP",
      "path": "18"
    },
    "15500": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "POP",
      "path": "18"
    },
    "15501": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "POP",
      "path": "18"
    },
    "15502": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15504": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15505": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "15506": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "15508": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "NOT",
      "path": "18"
    },
    "15509": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "15511": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "DUP3",
      "path": "18"
    },
    "15512": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "ADD",
      "path": "18"
    },
    "15513": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "AND",
      "path": "18"
    },
    "15514": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "DUP3",
      "path": "18"
    },
    "15515": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "ADD",
      "path": "18"
    },
    "15516": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15517": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15519": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "15520": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "POP",
      "path": "18"
    },
    "15521": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15522": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "ADD",
      "path": "18"
    },
    "15523": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15524": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3CAD"
    },
    "15527": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15528": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15529": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x50E5"
    },
    "15532": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        6008,
        6230
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15533": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6008,
        6230
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15534": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5984,
        5991
      ],
      "op": "DUP9",
      "path": "18"
    },
    "15535": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5984,
        6004
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15537": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5984,
        6004
      ],
      "op": "ADD",
      "path": "18"
    },
    "15538": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5984,
        6230
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15539": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5984,
        6230
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15540": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5984,
        6230
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15541": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5984,
        6230
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3CBE"
    },
    "15544": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5984,
        6230
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15545": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5984,
        6230
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15546": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5984,
        6230
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x52B3"
    },
    "15549": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        5984,
        6230
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15550": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5984,
        6230
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15551": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5984,
        6230
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15552": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5984,
        6230
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "15553": {
      "op": "POP"
    },
    "15554": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5910,
        6249
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15555": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6282,
        6288
      ],
      "op": "DUP5",
      "path": "18",
      "statement": 153
    },
    "15556": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6267,
        6274
      ],
      "op": "DUP9",
      "path": "18"
    },
    "15557": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6267,
        6278
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15559": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6267,
        6278
      ],
      "op": "ADD",
      "path": "18"
    },
    "15560": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6267,
        6288
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15561": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6267,
        6288
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15562": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6267,
        6288
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15563": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6267,
        6288
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3CD4"
    },
    "15566": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6267,
        6288
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15567": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6267,
        6288
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15568": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6267,
        6288
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x52B3"
    },
    "15571": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        6267,
        6288
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15572": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6267,
        6288
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15573": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6267,
        6288
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15574": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6267,
        6288
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "15575": {
      "op": "POP"
    },
    "15576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15580": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15582": {
      "op": "SHL"
    },
    "15583": {
      "op": "SUB"
    },
    "15584": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6306,
        6339
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 154
    },
    "15585": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6306,
        6339
      ],
      "op": "AND",
      "path": "18"
    },
    "15586": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6306,
        6323
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "15588": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6306,
        6323
      ],
      "op": "DUP10",
      "path": "18"
    },
    "15589": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6306,
        6323
      ],
      "op": "ADD",
      "path": "18"
    },
    "15590": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6306,
        6339
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "15591": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6364
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 155,
      "value": "0xF"
    },
    "15593": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6364
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "15594": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15596": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15597": {
      "op": "PUSH4",
      "value": "0x667E6B11"
    },
    "15602": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "15604": {
      "op": "SHL"
    },
    "15605": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15606": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "15607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15613": {
      "op": "SHL"
    },
    "15614": {
      "op": "SUB"
    },
    "15615": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6364
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15616": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6364
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15617": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6364
      ],
      "op": "AND",
      "path": "18"
    },
    "15618": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6364
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15619": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6383
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xCCFCD622"
    },
    "15624": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6383
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15625": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D1A"
    },
    "15628": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15629": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6384,
        6386
      ],
      "op": "DUP16",
      "path": "18"
    },
    "15630": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6384,
        6386
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15631": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6395,
        6397
      ],
      "op": "DUP11",
      "path": "18"
    },
    "15632": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6395,
        6397
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15633": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6306,
        6313
      ],
      "op": "DUP14",
      "path": "18"
    },
    "15634": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6306,
        6313
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15635": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "15637": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "ADD",
      "path": "18"
    },
    "15638": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x53D5"
    },
    "15641": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        6358,
        6408
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15642": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15643": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15645": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15647": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15648": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15649": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "DUP4",
      "path": "18"
    },
    "15650": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "SUB",
      "path": "18"
    },
    "15651": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15652": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15654": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "DUP8",
      "path": "18"
    },
    "15655": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15656": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "15657": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15658": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15659": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15660": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D34"
    },
    "15663": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "15664": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15666": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15667": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "REVERT",
      "path": "18"
    },
    "15668": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15669": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "POP",
      "path": "18"
    },
    "15670": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "GAS",
      "path": "18"
    },
    "15671": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "CALL",
      "path": "18"
    },
    "15672": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15673": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15674": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15675": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D48"
    },
    "15678": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "15679": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "15680": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15682": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15683": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "15684": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "15685": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15687": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "REVERT",
      "path": "18"
    },
    "15688": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15689": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "POP",
      "path": "18"
    },
    "15690": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "POP",
      "path": "18"
    },
    "15691": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "POP",
      "path": "18"
    },
    "15692": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        6358,
        6408
      ],
      "op": "POP",
      "path": "18"
    },
    "15693": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5694,
        6423
      ],
      "op": "POP",
      "path": "18"
    },
    "15694": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        5672,
        6423
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15695": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4214,
        6433
      ],
      "op": "POP",
      "path": "18"
    },
    "15696": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4214,
        6433
      ],
      "op": "POP",
      "path": "18"
    },
    "15697": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4214,
        6433
      ],
      "op": "POP",
      "path": "18"
    },
    "15698": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4214,
        6433
      ],
      "op": "POP",
      "path": "18"
    },
    "15699": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4214,
        6433
      ],
      "op": "POP",
      "path": "18"
    },
    "15700": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4209,
        4212
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 156
    },
    "15701": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4209,
        4212
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15702": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4209,
        4212
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D5E"
    },
    "15705": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4209,
        4212
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15706": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4209,
        4212
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x50B5"
    },
    "15709": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        4209,
        4212
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15710": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4209,
        4212
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15711": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4209,
        4212
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15712": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4209,
        4212
      ],
      "op": "POP",
      "path": "18"
    },
    "15713": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4209,
        4212
      ],
      "op": "POP",
      "path": "18"
    },
    "15714": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4173,
        6433
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x37F7"
    },
    "15717": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4173,
        6433
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15718": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4173,
        6433
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15719": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4173,
        6433
      ],
      "op": "POP",
      "path": "18"
    },
    "15720": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        4041,
        6439
      ],
      "op": "POP",
      "path": "18"
    },
    "15721": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        3828,
        6439
      ],
      "op": "POP",
      "path": "18"
    },
    "15722": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        3828,
        6439
      ],
      "op": "POP",
      "path": "18"
    },
    "15723": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        3828,
        6439
      ],
      "op": "POP",
      "path": "18"
    },
    "15724": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        3828,
        6439
      ],
      "op": "POP",
      "path": "18"
    },
    "15725": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        3828,
        6439
      ],
      "op": "POP",
      "path": "18"
    },
    "15726": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "offset": [
        3828,
        6439
      ],
      "op": "POP",
      "path": "18"
    },
    "15727": {
      "fn": "HouseOfPanda._beforeTokenTransfer",
      "jump": "o",
      "offset": [
        3828,
        6439
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15728": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14024,
        14816
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "15729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15735": {
      "op": "SHL"
    },
    "15736": {
      "op": "SUB"
    },
    "15737": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14256,
        14269
      ],
      "op": "DUP5",
      "path": "2"
    },
    "15738": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14256,
        14269
      ],
      "op": "AND",
      "path": "2"
    },
    "15739": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "15740": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "10",
      "statement": 157
    },
    "15741": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14252,
        14810
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BF9"
    },
    "15744": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14252,
        14810
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "15745": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "15747": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "15748": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "15753": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15755": {
      "op": "SHL"
    },
    "15756": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP2",
      "path": "2"
    },
    "15757": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "15758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15762": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15764": {
      "op": "SHL"
    },
    "15765": {
      "op": "SUB"
    },
    "15766": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "DUP6",
      "path": "2"
    },
    "15767": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "AND",
      "path": "2"
    },
    "15768": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15769": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBC197C81"
    },
    "15774": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15775": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DB4"
    },
    "15778": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15779": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14335,
        14343
      ],
      "op": "DUP10",
      "path": "2"
    },
    "15780": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14335,
        14343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15781": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14345,
        14349
      ],
      "op": "DUP10",
      "path": "2"
    },
    "15782": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14345,
        14349
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15783": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14351,
        14354
      ],
      "op": "DUP9",
      "path": "2"
    },
    "15784": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14351,
        14354
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15785": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14356,
        14363
      ],
      "op": "DUP9",
      "path": "2"
    },
    "15786": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14356,
        14363
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15787": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14365,
        14369
      ],
      "op": "DUP9",
      "path": "2"
    },
    "15788": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14365,
        14369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15789": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "15791": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ADD",
      "path": "2"
    },
    "15792": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5428"
    },
    "15795": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMP",
      "path": "2"
    },
    "15796": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "15797": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "15799": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "15801": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "15802": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15803": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP4",
      "path": "2"
    },
    "15804": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SUB",
      "path": "2"
    },
    "15805": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP2",
      "path": "2"
    },
    "15806": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15808": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP8",
      "path": "2"
    },
    "15809": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "GAS",
      "path": "2"
    },
    "15810": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "CALL",
      "path": "2"
    },
    "15811": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "15812": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "POP",
      "path": "2"
    },
    "15813": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "POP",
      "path": "2"
    },
    "15814": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "POP",
      "path": "2"
    },
    "15815": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15816": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "15817": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DEF"
    },
    "15820": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "15821": {
      "op": "POP"
    },
    "15822": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "15824": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15825": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "15826": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "15828": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "15829": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15830": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP2",
      "path": "2"
    },
    "15831": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ADD",
      "path": "2"
    },
    "15832": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15834": {
      "op": "NOT"
    },
    "15835": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "AND",
      "path": "2"
    },
    "15836": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP3",
      "path": "2"
    },
    "15837": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ADD",
      "path": "2"
    },
    "15838": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15839": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "15840": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "15841": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DEC"
    },
    "15844": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "15845": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP2",
      "path": "2"
    },
    "15846": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ADD",
      "path": "2"
    },
    "15847": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15848": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x547A"
    },
    "15851": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMP",
      "path": "2"
    },
    "15852": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "15853": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "15855": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "15856": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E9B"
    },
    "15859": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "15860": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DFB"
    },
    "15863": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5497"
    },
    "15866": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMP",
      "path": "2"
    },
    "15867": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "15868": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15869": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8C379A0"
    },
    "15874": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "SUB",
      "path": "2"
    },
    "15875": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E34"
    },
    "15878": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "15879": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "POP",
      "path": "2"
    },
    "15880": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E0F"
    },
    "15883": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x54B3"
    },
    "15886": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMP",
      "path": "2"
    },
    "15887": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "15888": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15889": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E1A"
    },
    "15892": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "15893": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "POP",
      "path": "2"
    },
    "15894": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E36"
    },
    "15897": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMP",
      "path": "2"
    },
    "15898": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "15899": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14676,
        14682
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 158
    },
    "15900": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "15902": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "15903": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15907": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15909": {
      "op": "SHL"
    },
    "15910": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "DUP2",
      "path": "2"
    },
    "15911": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "15912": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "15914": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "ADD",
      "path": "2"
    },
    "15915": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82F"
    },
    "15918": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "15919": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15920": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x459A"
    },
    "15923": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14669,
        14683
      ],
      "op": "JUMP",
      "path": "2"
    },
    "15924": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "15925": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "POP",
      "path": "2"
    },
    "15926": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "15927": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 159,
      "value": "0x40"
    },
    "15929": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "15930": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15934": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15936": {
      "op": "SHL"
    },
    "15937": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "DUP2",
      "path": "2"
    },
    "15938": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "15939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15941": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "15943": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "DUP3",
      "path": "2"
    },
    "15944": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "ADD",
      "path": "2"
    },
    "15945": {
      "op": "MSTORE"
    },
    "15946": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "15948": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15950": {
      "op": "DUP3"
    },
    "15951": {
      "op": "ADD"
    },
    "15952": {
      "op": "MSTORE"
    },
    "15953": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
    },
    "15986": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15988": {
      "op": "DUP3"
    },
    "15989": {
      "op": "ADD"
    },
    "15990": {
      "op": "MSTORE"
    },
    "15991": {
      "op": "PUSH20",
      "value": "0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "16012": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "16014": {
      "op": "SHL"
    },
    "16015": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "16017": {
      "op": "DUP3"
    },
    "16018": {
      "op": "ADD"
    },
    "16019": {
      "op": "MSTORE"
    },
    "16020": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "16022": {
      "op": "ADD"
    },
    "16023": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82F"
    },
    "16026": {
      "op": "JUMP"
    },
    "16027": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "16028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16032": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16034": {
      "op": "SHL"
    },
    "16035": {
      "op": "SUB"
    },
    "16036": {
      "op": "NOT"
    },
    "16037": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14449,
        14509
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16038": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14449,
        14509
      ],
      "op": "AND",
      "path": "2"
    },
    "16039": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "16044": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16046": {
      "op": "SHL"
    },
    "16047": {
      "branch": 240,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14449,
        14509
      ],
      "op": "EQ",
      "path": "2"
    },
    "16048": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14445,
        14602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3705"
    },
    "16051": {
      "branch": 240,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14445,
        14602
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "16052": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 160,
      "value": "0x40"
    },
    "16054": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "16055": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16059": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16061": {
      "op": "SHL"
    },
    "16062": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16063": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "16064": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "16066": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "ADD",
      "path": "2"
    },
    "16067": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82F"
    },
    "16070": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16071": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x553C"
    },
    "16074": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14533,
        14583
      ],
      "op": "JUMP",
      "path": "2"
    },
    "16075": {
      "fn": "ERC1155._burn",
      "offset": [
        10394,
        11051
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "16076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16080": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16082": {
      "op": "SHL"
    },
    "16083": {
      "op": "SUB"
    },
    "16084": {
      "fn": "ERC1155._burn",
      "offset": [
        10519,
        10540
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 161
    },
    "16085": {
      "branch": 241,
      "fn": "ERC1155._burn",
      "offset": [
        10519,
        10540
      ],
      "op": "AND",
      "path": "2"
    },
    "16086": {
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F2D"
    },
    "16089": {
      "branch": 241,
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "16090": {
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "16092": {
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "16093": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16097": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16099": {
      "op": "SHL"
    },
    "16100": {
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16101": {
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "16102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16104": {
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "16106": {
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "DUP3",
      "path": "2"
    },
    "16107": {
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "ADD",
      "path": "2"
    },
    "16108": {
      "op": "MSTORE"
    },
    "16109": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "16111": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16113": {
      "op": "DUP3"
    },
    "16114": {
      "op": "ADD"
    },
    "16115": {
      "op": "MSTORE"
    },
    "16116": {
      "op": "PUSH32",
      "value": "0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472"
    },
    "16149": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "16151": {
      "op": "DUP3"
    },
    "16152": {
      "op": "ADD"
    },
    "16153": {
      "op": "MSTORE"
    },
    "16154": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "16158": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "16160": {
      "op": "SHL"
    },
    "16161": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "16163": {
      "op": "DUP3"
    },
    "16164": {
      "op": "ADD"
    },
    "16165": {
      "op": "MSTORE"
    },
    "16166": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "16168": {
      "op": "ADD"
    },
    "16169": {
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82F"
    },
    "16172": {
      "op": "JUMP"
    },
    "16173": {
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "16174": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "11"
    },
    "16175": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 162,
      "value": "0x3F5C"
    },
    "16178": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "DUP2",
      "path": "11"
    },
    "16179": {
      "fn": "ERC1155._burn",
      "offset": [
        10664,
        10671
      ],
      "op": "DUP6",
      "path": "2"
    },
    "16180": {
      "fn": "ERC1155._burn",
      "offset": [
        10591,
        10607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "16182": {
      "fn": "ERC1155._burn",
      "offset": [
        10685,
        10706
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F3E"
    },
    "16185": {
      "fn": "ERC1155._burn",
      "offset": [
        10703,
        10705
      ],
      "op": "DUP8",
      "path": "2"
    },
    "16186": {
      "fn": "ERC1155._burn",
      "offset": [
        10685,
        10702
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x411B"
    },
    "16189": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10685,
        10706
      ],
      "op": "JUMP",
      "path": "2"
    },
    "16190": {
      "fn": "ERC1155._burn",
      "offset": [
        10685,
        10706
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "16191": {
      "fn": "ERC1155._burn",
      "offset": [
        10708,
        10733
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F47"
    },
    "16194": {
      "fn": "ERC1155._burn",
      "offset": [
        10726,
        10732
      ],
      "op": "DUP8",
      "path": "2"
    },
    "16195": {
      "fn": "ERC1155._burn",
      "offset": [
        10708,
        10725
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x411B"
    },
    "16198": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10708,
        10733
      ],
      "op": "JUMP",
      "path": "2"
    },
    "16199": {
      "fn": "ERC1155._burn",
      "offset": [
        10708,
        10733
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "16200": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "16202": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "16203": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "16204": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "16206": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "ADD",
      "path": "2"
    },
    "16207": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "16209": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "16210": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "16211": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "16213": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16214": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "16215": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "POP",
      "path": "2"
    },
    "16216": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10653
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379E"
    },
    "16219": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10633,
        10738
      ],
      "op": "JUMP",
      "path": "2"
    },
    "16220": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "16221": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10771
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "16223": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "DUP4",
      "path": "2"
    },
    "16224": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16225": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "16226": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "16228": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16229": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16230": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "16231": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "16233": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "DUP1",
      "path": "2"
    },
    "16234": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "DUP4",
      "path": "2"
    },
    "16235": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "16236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16242": {
      "op": "SHL"
    },
    "16243": {
      "op": "SUB"
    },
    "16244": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10796
      ],
      "op": "DUP9",
      "path": "2"
    },
    "16245": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10796
      ],
      "op": "AND",
      "path": "2"
    },
    "16246": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10796
      ],
      "op": "DUP5",
      "path": "2"
    },
    "16247": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10796
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "16248": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10796
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16249": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10796
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "16250": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10796
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "16251": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10796
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16252": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10796
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "16253": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10796
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "16254": {
      "fn": "ERC1155._burn",
      "offset": [
        10814,
        10838
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 163
    },
    "16255": {
      "fn": "ERC1155._burn",
      "offset": [
        10814,
        10838
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16256": {
      "fn": "ERC1155._burn",
      "offset": [
        10814,
        10838
      ],
      "op": "LT",
      "path": "2"
    },
    "16257": {
      "branch": 242,
      "fn": "ERC1155._burn",
      "offset": [
        10814,
        10838
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "16258": {
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FD9"
    },
    "16261": {
      "branch": 242,
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "16262": {
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "16264": {
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "16265": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16269": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16271": {
      "op": "SHL"
    },
    "16272": {
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16273": {
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "16274": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16276": {
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "16278": {
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "DUP3",
      "path": "2"
    },
    "16279": {
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "ADD",
      "path": "2"
    },
    "16280": {
      "op": "MSTORE"
    },
    "16281": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16283": {
      "op": "DUP1"
    },
    "16284": {
      "op": "DUP3"
    },
    "16285": {
      "op": "ADD"
    },
    "16286": {
      "op": "MSTORE"
    },
    "16287": {
      "op": "PUSH32",
      "value": "0x455243313135353A206275726E20616D6F756E7420657863656564732062616C"
    },
    "16320": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "16322": {
      "op": "DUP3"
    },
    "16323": {
      "op": "ADD"
    },
    "16324": {
      "op": "MSTORE"
    },
    "16325": {
      "op": "PUSH4",
      "value": "0x616E6365"
    },
    "16330": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16332": {
      "op": "SHL"
    },
    "16333": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "16335": {
      "op": "DUP3"
    },
    "16336": {
      "op": "ADD"
    },
    "16337": {
      "op": "MSTORE"
    },
    "16338": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "16340": {
      "op": "ADD"
    },
    "16341": {
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82F"
    },
    "16344": {
      "op": "JUMP"
    },
    "16345": {
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "16346": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10922
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 164,
      "value": "0x0"
    },
    "16348": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "DUP5",
      "path": "2"
    },
    "16349": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16350": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "16351": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "16353": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16354": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16355": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "16356": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "16358": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "DUP1",
      "path": "2"
    },
    "16359": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "DUP4",
      "path": "2"
    },
    "16360": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "16361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16367": {
      "op": "SHL"
    },
    "16368": {
      "op": "SUB"
    },
    "16369": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "DUP10",
      "path": "2"
    },
    "16370": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16371": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "AND",
      "path": "2"
    },
    "16372": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "DUP1",
      "path": "2"
    },
    "16373": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "DUP7",
      "path": "2"
    },
    "16374": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "16375": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "16376": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "DUP5",
      "path": "2"
    },
    "16377": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "16378": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "DUP3",
      "path": "2"
    },
    "16379": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "DUP6",
      "path": "2"
    },
    "16380": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "16381": {
      "fn": "ERC1155._burn",
      "offset": [
        10938,
        10961
      ],
      "op": "DUP9",
      "path": "2"
    },
    "16382": {
      "fn": "ERC1155._burn",
      "offset": [
        10938,
        10961
      ],
      "op": "DUP8",
      "path": "2"
    },
    "16383": {
      "fn": "ERC1155._burn",
      "offset": [
        10938,
        10961
      ],
      "op": "SUB",
      "path": "2"
    },
    "16384": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10961
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16385": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10961
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "16386": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 165
    },
    "16387": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "16388": {
      "op": "DUP10"
    },
    "16389": {
      "op": "DUP2"
    },
    "16390": {
      "op": "MSTORE"
    },
    "16391": {
      "op": "SWAP4"
    },
    "16392": {
      "op": "DUP5"
    },
    "16393": {
      "op": "ADD"
    },
    "16394": {
      "op": "DUP9"
    },
    "16395": {
      "op": "SWAP1"
    },
    "16396": {
      "op": "MSTORE"
    },
    "16397": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16398": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "16399": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16400": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "DUP7",
      "path": "2"
    },
    "16401": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "AND",
      "path": "2"
    },
    "16402": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "16403": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "16436": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "16437": {
      "op": "ADD"
    },
    "16438": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "16440": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "16441": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "DUP1",
      "path": "2"
    },
    "16442": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "16443": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "SUB",
      "path": "2"
    },
    "16444": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16445": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "LOG4",
      "path": "2"
    },
    "16446": {
      "fn": "ERC1155._burn",
      "offset": [
        10501,
        11051
      ],
      "op": "POP",
      "path": "2"
    },
    "16447": {
      "fn": "ERC1155._burn",
      "offset": [
        10501,
        11051
      ],
      "op": "POP",
      "path": "2"
    },
    "16448": {
      "fn": "ERC1155._burn",
      "offset": [
        10394,
        11051
      ],
      "op": "POP",
      "path": "2"
    },
    "16449": {
      "fn": "ERC1155._burn",
      "offset": [
        10394,
        11051
      ],
      "op": "POP",
      "path": "2"
    },
    "16450": {
      "fn": "ERC1155._burn",
      "offset": [
        10394,
        11051
      ],
      "op": "POP",
      "path": "2"
    },
    "16451": {
      "fn": "ERC1155._burn",
      "jump": "o",
      "offset": [
        10394,
        11051
      ],
      "op": "JUMP",
      "path": "2"
    },
    "16452": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3140,
        3846
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "16453": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "16455": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4099"
    },
    "16458": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3613,
        3617
      ],
      "op": "DUP3",
      "path": "9"
    },
    "16459": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "16461": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "16462": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "9"
    },
    "16463": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "16465": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "9"
    },
    "16466": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "16468": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "16469": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "9"
    },
    "16470": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "16472": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "9"
    },
    "16473": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "16474": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "16476": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "9"
    },
    "16477": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "16510": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "9"
    },
    "16511": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "16512": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "POP",
      "path": "9"
    },
    "16513": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3593,
        3598
      ],
      "op": "DUP6",
      "path": "9"
    },
    "16514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16520": {
      "op": "SHL"
    },
    "16521": {
      "op": "SUB"
    },
    "16522": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "AND",
      "path": "9"
    },
    "16523": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x424A"
    },
    "16526": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "16527": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "16528": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "16529": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "16530": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "16535": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "AND",
      "path": "9"
    },
    "16536": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMP",
      "path": "9"
    },
    "16537": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "16538": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "DUP1",
      "path": "9"
    },
    "16539": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "16540": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "16541": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "16542": {
      "op": "POP"
    },
    "16543": {
      "branch": 249,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3689
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "16544": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4116"
    },
    "16547": {
      "branch": 249,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "16548": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3763,
        3773
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 166
    },
    "16549": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP1",
      "path": "9"
    },
    "16550": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "16552": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "9"
    },
    "16553": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "16554": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "16555": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP2",
      "path": "9"
    },
    "16556": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "9"
    },
    "16557": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "16558": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x40B7"
    },
    "16561": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "16562": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "16563": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5584"
    },
    "16566": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMP",
      "path": "9"
    },
    "16567": {
      "branch": 250,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "16568": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4116"
    },
    "16571": {
      "branch": 250,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "16572": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "16574": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "16575": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16579": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16581": {
      "op": "SHL"
    },
    "16582": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP2",
      "path": "9"
    },
    "16583": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "16584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16586": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "16588": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP3",
      "path": "9"
    },
    "16589": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "ADD",
      "path": "9"
    },
    "16590": {
      "op": "MSTORE"
    },
    "16591": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "16593": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16595": {
      "op": "DUP3"
    },
    "16596": {
      "op": "ADD"
    },
    "16597": {
      "op": "MSTORE"
    },
    "16598": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "16631": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "16633": {
      "op": "DUP3"
    },
    "16634": {
      "op": "ADD"
    },
    "16635": {
      "op": "MSTORE"
    },
    "16636": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "16647": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "16649": {
      "op": "SHL"
    },
    "16650": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "16652": {
      "op": "DUP3"
    },
    "16653": {
      "op": "ADD"
    },
    "16654": {
      "op": "MSTORE"
    },
    "16655": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "16657": {
      "op": "ADD"
    },
    "16658": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x82F"
    },
    "16661": {
      "op": "JUMP"
    },
    "16662": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "16663": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3210,
        3846
      ],
      "op": "POP",
      "path": "9"
    },
    "16664": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3140,
        3846
      ],
      "op": "POP",
      "path": "9"
    },
    "16665": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3140,
        3846
      ],
      "op": "POP",
      "path": "9"
    },
    "16666": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "o",
      "offset": [
        3140,
        3846
      ],
      "op": "JUMP",
      "path": "9"
    },
    "16667": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14822,
        15015
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "16668": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "16670": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "16671": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "16672": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14955,
        14956
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "16674": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "16675": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP3",
      "path": "2"
    },
    "16676": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "16677": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16678": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP4",
      "path": "2"
    },
    "16679": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "ADD",
      "path": "2"
    },
    "16680": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16681": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "16682": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "16683": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14888,
        14904
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "16685": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14888,
        14904
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "16686": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14916,
        14938
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "16688": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14916,
        14938
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "16689": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16690": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "16692": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "16693": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP4",
      "path": "2"
    },
    "16694": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "ADD",
      "path": "2"
    },
    "16695": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16696": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "16697": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "16698": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP4",
      "path": "2"
    },
    "16699": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "16700": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "ADD",
      "path": "2"
    },
    "16701": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16702": {
      "op": "POP"
    },
    "16703": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "POP",
      "path": "2"
    },
    "16704": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14916,
        14957
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16705": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14916,
        14957
      ],
      "op": "POP",
      "path": "2"
    },
    "16706": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14978,
        14985
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 167
    },
    "16707": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14972
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16708": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14973,
        14974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "16710": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16711": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "16712": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16713": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "LT",
      "path": "2"
    },
    "16714": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4155"
    },
    "16717": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "16718": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4155"
    },
    "16721": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5089"
    },
    "16724": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "i",
      "offset": [
        14967,
        14975
      ],
      "op": "JUMP",
      "path": "2"
    },
    "16725": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "16726": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "16728": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16729": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16730": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "MUL",
      "path": "2"
    },
    "16731": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "16732": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16733": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "16734": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "ADD",
      "path": "2"
    },
    "16735": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "ADD",
      "path": "2"
    },
    "16736": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14985
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "16737": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15003,
        15008
      ],
      "op": "SWAP3",
      "path": "2",
      "statement": 168
    },
    "16738": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14822,
        15015
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "16739": {
      "op": "POP"
    },
    "16740": {
      "op": "POP"
    },
    "16741": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "o",
      "offset": [
        14822,
        15015
      ],
      "op": "JUMP",
      "path": "2"
    },
    "16742": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13293,
        14018
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "16743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16749": {
      "op": "SHL"
    },
    "16750": {
      "op": "SUB"
    },
    "16751": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13500,
        13513
      ],
      "op": "DUP5",
      "path": "2"
    },
    "16752": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13500,
        13513
      ],
      "op": "AND",
      "path": "2"
    },
    "16753": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "16754": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "16755": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13496,
        14012
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BF9"
    },
    "16758": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13496,
        14012
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "16759": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "16761": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "16762": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "16767": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16769": {
      "op": "SHL"
    },
    "16770": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16771": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "16772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16778": {
      "op": "SHL"
    },
    "16779": {
      "op": "SUB"
    },
    "16780": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "DUP6",
      "path": "2"
    },
    "16781": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "AND",
      "path": "2"
    },
    "16782": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16783": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF23A6E61"
    },
    "16788": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16789": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41AA"
    },
    "16792": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16793": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13574,
        13582
      ],
      "op": "DUP10",
      "path": "2"
    },
    "16794": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13574,
        13582
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16795": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13584,
        13588
      ],
      "op": "DUP10",
      "path": "2"
    },
    "16796": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13584,
        13588
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16797": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13590,
        13592
      ],
      "op": "DUP9",
      "path": "2"
    },
    "16798": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13590,
        13592
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16799": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13594,
        13600
      ],
      "op": "DUP9",
      "path": "2"
    },
    "16800": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13594,
        13600
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16801": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13602,
        13606
      ],
      "op": "DUP9",
      "path": "2"
    },
    "16802": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13602,
        13606
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16803": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "16805": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "2"
    },
    "16806": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x55A1"
    },
    "16809": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMP",
      "path": "2"
    },
    "16810": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "16811": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "16813": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "16815": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "16816": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "2"
    },
    "16817": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP4",
      "path": "2"
    },
    "16818": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SUB",
      "path": "2"
    },
    "16819": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16820": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "16822": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP8",
      "path": "2"
    },
    "16823": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "GAS",
      "path": "2"
    },
    "16824": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "CALL",
      "path": "2"
    },
    "16825": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "16826": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "POP",
      "path": "2"
    },
    "16827": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "POP",
      "path": "2"
    },
    "16828": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "POP",
      "path": "2"
    },
    "16829": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "2"
    },
    "16830": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "16831": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41E5"
    },
    "16834": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "16835": {
      "op": "POP"
    },
    "16836": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "16838": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "2"
    },
    "16839": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "16840": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "16842": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "16843": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16844": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16845": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "2"
    },
    "16846": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16848": {
      "op": "NOT"
    },
    "16849": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "AND",
      "path": "2"
    },
    "16850": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP3",
      "path": "2"
    },
    "16851": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "2"
    },
    "16852": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16853": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "16854": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "16855": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41E2"
    },
    "16858": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "16859": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16860": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "2"
    },
    "16861": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16862": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x547A"
    },
    "16865": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMP",
      "path": "2"
    },
    "16866": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "16867": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "16869": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "16870": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41F1"
    },
    "16873": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "16874": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DFB"
    },
    "16877": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5497"
    },
    "16880": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMP",
      "path": "2"
    },
    "16881": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "16882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16886": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16888": {
      "op": "SHL"
    },
    "16889": {
      "op": "SUB"
    },
    "16890": {
      "op": "NOT"
    },
    "16891": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13656,
        13711
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16892": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13656,
        13711
      ],
      "op": "AND",
      "path": "2"
    },
    "16893": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "16898": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16900": {
      "op": "SHL"
    },
    "16901": {
      "branch": 243,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13656,
        13711
      ],
      "op": "EQ",
      "path": "2"
    },
    "16902": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13652,
        13804
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3705"
    },
    "16905": {
      "branch": 243,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13652,
        13804
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "16906": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 169,
      "value": "0x40"
    },
    "16908": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "16909": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16913": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16915": {
      "op": "SHL"
    },
    "16916": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP2",
      "path": "2"
    },
    "16917": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "16918": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "16920": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "ADD",
      "path": "2"
    },
    "16921": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82F"
    },
    "16924": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16925": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x553C"
    },
    "16928": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13735,
        13785
      ],
      "op": "JUMP",
      "path": "2"
    },
    "16929": {
      "fn": "HouseOfPanda.min",
      "offset": [
        2792,
        2894
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "16930": {
      "fn": "HouseOfPanda.min",
      "offset": [
        2848,
        2854
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "16932": {
      "fn": "HouseOfPanda.min",
      "offset": [
        2878,
        2879
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 170
    },
    "16933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16937": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16939": {
      "op": "SHL"
    },
    "16940": {
      "op": "SUB"
    },
    "16941": {
      "fn": "HouseOfPanda.min",
      "offset": [
        2873,
        2879
      ],
      "op": "AND",
      "path": "18"
    },
    "16942": {
      "fn": "HouseOfPanda.min",
      "offset": [
        2873,
        2874
      ],
      "op": "DUP4",
      "path": "18"
    },
    "16943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16947": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16949": {
      "op": "SHL"
    },
    "16950": {
      "op": "SUB"
    },
    "16951": {
      "fn": "HouseOfPanda.min",
      "offset": [
        2873,
        2879
      ],
      "op": "AND",
      "path": "18"
    },
    "16952": {
      "fn": "HouseOfPanda.min",
      "offset": [
        2873,
        2879
      ],
      "op": "GT",
      "path": "18"
    },
    "16953": {
      "branch": 224,
      "fn": "HouseOfPanda.min",
      "offset": [
        2873,
        2879
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "16954": {
      "fn": "HouseOfPanda.min",
      "offset": [
        2873,
        2887
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4243"
    },
    "16957": {
      "branch": 224,
      "fn": "HouseOfPanda.min",
      "offset": [
        2873,
        2887
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "16958": {
      "fn": "HouseOfPanda.min",
      "offset": [
        2886,
        2887
      ],
      "op": "DUP2",
      "path": "18"
    },
    "16959": {
      "fn": "HouseOfPanda.min",
      "offset": [
        2873,
        2887
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x24A3"
    },
    "16962": {
      "fn": "HouseOfPanda.min",
      "offset": [
        2873,
        2887
      ],
      "op": "JUMP",
      "path": "18"
    },
    "16963": {
      "fn": "HouseOfPanda.min",
      "offset": [
        2873,
        2887
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "16964": {
      "op": "POP"
    },
    "16965": {
      "fn": "HouseOfPanda.min",
      "offset": [
        2882,
        2883
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "16966": {
      "fn": "HouseOfPanda.min",
      "offset": [
        2882,
        2883
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "16967": {
      "fn": "HouseOfPanda.min",
      "offset": [
        2792,
        2894
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "16968": {
      "op": "POP"
    },
    "16969": {
      "fn": "HouseOfPanda.min",
      "jump": "o",
      "offset": [
        2792,
        2894
      ],
      "op": "JUMP",
      "path": "18"
    },
    "16970": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "16971": {
      "fn": "Address.functionCall",
      "offset": [
        3594,
        3606
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "16973": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 171,
      "value": "0xDCA"
    },
    "16976": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3653
      ],
      "op": "DUP5",
      "path": "10"
    },
    "16977": {
      "fn": "Address.functionCall",
      "offset": [
        3655,
        3659
      ],
      "op": "DUP5",
      "path": "10"
    },
    "16978": {
      "fn": "Address.functionCall",
      "offset": [
        3661,
        3662
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "16980": {
      "fn": "Address.functionCall",
      "offset": [
        3664,
        3676
      ],
      "op": "DUP6",
      "path": "10"
    },
    "16981": {
      "fn": "Address.functionCall",
      "offset": [
        3594,
        3606
      ],
      "op": "DUP6",
      "path": "10"
    },
    "16982": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "DUP5",
      "path": "10"
    },
    "16983": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "16984": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 172,
      "value": "0x42A3"
    },
    "16987": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "16988": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "16990": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "16991": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16995": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16997": {
      "op": "SHL"
    },
    "16998": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP2",
      "path": "10"
    },
    "16999": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "17000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17002": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "17004": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP3",
      "path": "10"
    },
    "17005": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "ADD",
      "path": "10"
    },
    "17006": {
      "op": "MSTORE"
    },
    "17007": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "17009": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17011": {
      "op": "DUP3"
    },
    "17012": {
      "op": "ADD"
    },
    "17013": {
      "op": "MSTORE"
    },
    "17014": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "17047": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "17049": {
      "op": "DUP3"
    },
    "17050": {
      "op": "ADD"
    },
    "17051": {
      "op": "MSTORE"
    },
    "17052": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "17054": {
      "op": "ADD"
    },
    "17055": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x82F"
    },
    "17058": {
      "op": "JUMP"
    },
    "17059": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17060": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4900,
        4912
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "17062": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4914,
        4937
      ],
      "op": "DUP1",
      "path": "10"
    },
    "17063": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4947
      ],
      "op": "DUP7",
      "path": "10"
    },
    "17064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17070": {
      "op": "SHL"
    },
    "17071": {
      "op": "SUB"
    },
    "17072": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4952
      ],
      "op": "AND",
      "path": "10"
    },
    "17073": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        4965
      ],
      "op": "DUP6",
      "path": "10"
    },
    "17074": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4971
      ],
      "op": "DUP8",
      "path": "10"
    },
    "17075": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "17077": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "17078": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x42BF"
    },
    "17081": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "17082": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "17083": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4EB3"
    },
    "17086": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "10"
    },
    "17087": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17088": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "17090": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "17092": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "17093": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "10"
    },
    "17094": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP4",
      "path": "10"
    },
    "17095": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SUB",
      "path": "10"
    },
    "17096": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "10"
    },
    "17097": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP6",
      "path": "10"
    },
    "17098": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP8",
      "path": "10"
    },
    "17099": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "GAS",
      "path": "10"
    },
    "17100": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "CALL",
      "path": "10"
    },
    "17101": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "17102": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "10"
    },
    "17103": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "10"
    },
    "17104": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "10"
    },
    "17105": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "17106": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "10"
    },
    "17107": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "17109": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "10"
    },
    "17110": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "EQ",
      "path": "10"
    },
    "17111": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x42FC"
    },
    "17114": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "17115": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "17117": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "17118": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "17119": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "10"
    },
    "17120": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "17122": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "NOT",
      "path": "10"
    },
    "17123": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3F"
    },
    "17125": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "17126": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "10"
    },
    "17127": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "AND",
      "path": "10"
    },
    "17128": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "10"
    },
    "17129": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "10"
    },
    "17130": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "17132": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "17133": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "17134": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "10"
    },
    "17135": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "17136": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "17137": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "17139": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "17141": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP5",
      "path": "10"
    },
    "17142": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "10"
    },
    "17143": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "17144": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4301"
    },
    "17147": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "10"
    },
    "17148": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17149": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "17151": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "17152": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "10"
    },
    "17153": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17154": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "10"
    },
    "17155": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "17156": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "10"
    },
    "17157": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "17158": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "10"
    },
    "17159": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 173,
      "value": "0x4311"
    },
    "17162": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5006,
        5013
      ],
      "op": "DUP3",
      "path": "10"
    },
    "17163": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5015,
        5025
      ],
      "op": "DUP3",
      "path": "10"
    },
    "17164": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5027,
        5039
      ],
      "op": "DUP7",
      "path": "10"
    },
    "17165": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5005
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x431C"
    },
    "17168": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMP",
      "path": "10"
    },
    "17169": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17170": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5040
      ],
      "op": "SWAP8",
      "path": "10"
    },
    "17171": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "17172": {
      "op": "POP"
    },
    "17173": {
      "op": "POP"
    },
    "17174": {
      "op": "POP"
    },
    "17175": {
      "op": "POP"
    },
    "17176": {
      "op": "POP"
    },
    "17177": {
      "op": "POP"
    },
    "17178": {
      "op": "POP"
    },
    "17179": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMP",
      "path": "10"
    },
    "17180": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7161,
        7853
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17181": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7307,
        7319
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "17183": {
      "branch": 225,
      "fn": "Address.verifyCallResult",
      "offset": [
        7335,
        7342
      ],
      "op": "DUP4",
      "path": "10"
    },
    "17184": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "17185": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x432B"
    },
    "17188": {
      "branch": 225,
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "17189": {
      "op": "POP"
    },
    "17190": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7365,
        7375
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 174
    },
    "17191": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x24A3"
    },
    "17194": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "JUMP",
      "path": "10"
    },
    "17195": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17196": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "DUP3",
      "path": "10"
    },
    "17197": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "17198": {
      "branch": 226,
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7497
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "17199": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x433B"
    },
    "17202": {
      "branch": 226,
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "17203": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7670,
        7680
      ],
      "op": "DUP3",
      "path": "10"
    },
    "17204": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7664,
        7681
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "17205": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7730,
        7745
      ],
      "op": "DUP1",
      "path": "10"
    },
    "17206": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7717,
        7727
      ],
      "op": "DUP5",
      "path": "10"
    },
    "17207": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7713,
        7715
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "17209": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7709,
        7728
      ],
      "op": "ADD",
      "path": "10"
    },
    "17210": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7702,
        7746
      ],
      "op": "REVERT",
      "path": "10"
    },
    "17211": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17212": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7809,
        7821
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 175
    },
    "17213": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "17215": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "17216": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17220": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17222": {
      "op": "SHL"
    },
    "17223": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "DUP2",
      "path": "10"
    },
    "17224": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "17225": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "17227": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "ADD",
      "path": "10"
    },
    "17228": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x82F"
    },
    "17231": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "17232": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "17233": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x459A"
    },
    "17236": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        7802,
        7822
      ],
      "op": "JUMP",
      "path": "10"
    },
    "17237": {
      "op": "JUMPDEST"
    },
    "17238": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17240": {
      "op": "DUP1"
    },
    "17241": {
      "op": "MLOAD"
    },
    "17242": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "17245": {
      "op": "DUP2"
    },
    "17246": {
      "op": "ADD"
    },
    "17247": {
      "op": "DUP3"
    },
    "17248": {
      "op": "MSTORE"
    },
    "17249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17251": {
      "op": "DUP1"
    },
    "17252": {
      "op": "DUP3"
    },
    "17253": {
      "op": "MSTORE"
    },
    "17254": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17258": {
      "op": "DUP4"
    },
    "17259": {
      "op": "ADD"
    },
    "17260": {
      "op": "DUP2"
    },
    "17261": {
      "op": "SWAP1"
    },
    "17262": {
      "op": "MSTORE"
    },
    "17263": {
      "op": "SWAP3"
    },
    "17264": {
      "op": "DUP3"
    },
    "17265": {
      "op": "ADD"
    },
    "17266": {
      "op": "DUP2"
    },
    "17267": {
      "op": "SWAP1"
    },
    "17268": {
      "op": "MSTORE"
    },
    "17269": {
      "op": "SWAP2"
    },
    "17270": {
      "op": "DUP2"
    },
    "17271": {
      "op": "ADD"
    },
    "17272": {
      "op": "DUP3"
    },
    "17273": {
      "op": "SWAP1"
    },
    "17274": {
      "op": "MSTORE"
    },
    "17275": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17277": {
      "op": "DUP2"
    },
    "17278": {
      "op": "ADD"
    },
    "17279": {
      "op": "DUP3"
    },
    "17280": {
      "op": "SWAP1"
    },
    "17281": {
      "op": "MSTORE"
    },
    "17282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17284": {
      "op": "DUP2"
    },
    "17285": {
      "op": "ADD"
    },
    "17286": {
      "op": "DUP3"
    },
    "17287": {
      "op": "SWAP1"
    },
    "17288": {
      "op": "MSTORE"
    },
    "17289": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "17291": {
      "op": "DUP2"
    },
    "17292": {
      "op": "ADD"
    },
    "17293": {
      "op": "DUP3"
    },
    "17294": {
      "op": "SWAP1"
    },
    "17295": {
      "op": "MSTORE"
    },
    "17296": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17298": {
      "op": "DUP2"
    },
    "17299": {
      "op": "ADD"
    },
    "17300": {
      "op": "DUP3"
    },
    "17301": {
      "op": "SWAP1"
    },
    "17302": {
      "op": "MSTORE"
    },
    "17303": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "17306": {
      "op": "DUP2"
    },
    "17307": {
      "op": "ADD"
    },
    "17308": {
      "op": "DUP3"
    },
    "17309": {
      "op": "SWAP1"
    },
    "17310": {
      "op": "MSTORE"
    },
    "17311": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "17314": {
      "op": "DUP2"
    },
    "17315": {
      "op": "ADD"
    },
    "17316": {
      "op": "DUP3"
    },
    "17317": {
      "op": "SWAP1"
    },
    "17318": {
      "op": "MSTORE"
    },
    "17319": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "17322": {
      "op": "DUP2"
    },
    "17323": {
      "op": "ADD"
    },
    "17324": {
      "op": "DUP3"
    },
    "17325": {
      "op": "SWAP1"
    },
    "17326": {
      "op": "MSTORE"
    },
    "17327": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "17330": {
      "op": "DUP2"
    },
    "17331": {
      "op": "ADD"
    },
    "17332": {
      "op": "DUP3"
    },
    "17333": {
      "op": "SWAP1"
    },
    "17334": {
      "op": "MSTORE"
    },
    "17335": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "17338": {
      "op": "DUP2"
    },
    "17339": {
      "op": "ADD"
    },
    "17340": {
      "op": "SWAP2"
    },
    "17341": {
      "op": "SWAP1"
    },
    "17342": {
      "op": "SWAP2"
    },
    "17343": {
      "op": "MSTORE"
    },
    "17344": {
      "op": "SWAP1"
    },
    "17345": {
      "jump": "o",
      "op": "JUMP"
    },
    "17346": {
      "op": "JUMPDEST"
    },
    "17347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17353": {
      "op": "SHL"
    },
    "17354": {
      "op": "SUB"
    },
    "17355": {
      "op": "DUP2"
    },
    "17356": {
      "op": "AND"
    },
    "17357": {
      "op": "DUP2"
    },
    "17358": {
      "op": "EQ"
    },
    "17359": {
      "op": "PUSH2",
      "value": "0x97F"
    },
    "17362": {
      "op": "JUMPI"
    },
    "17363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17365": {
      "op": "DUP1"
    },
    "17366": {
      "op": "REVERT"
    },
    "17367": {
      "op": "JUMPDEST"
    },
    "17368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17370": {
      "op": "DUP1"
    },
    "17371": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17373": {
      "op": "DUP4"
    },
    "17374": {
      "op": "DUP6"
    },
    "17375": {
      "op": "SUB"
    },
    "17376": {
      "op": "SLT"
    },
    "17377": {
      "op": "ISZERO"
    },
    "17378": {
      "op": "PUSH2",
      "value": "0x43EA"
    },
    "17381": {
      "op": "JUMPI"
    },
    "17382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17384": {
      "op": "DUP1"
    },
    "17385": {
      "op": "REVERT"
    },
    "17386": {
      "op": "JUMPDEST"
    },
    "17387": {
      "op": "DUP3"
    },
    "17388": {
      "op": "CALLDATALOAD"
    },
    "17389": {
      "op": "PUSH2",
      "value": "0x43F5"
    },
    "17392": {
      "op": "DUP2"
    },
    "17393": {
      "op": "PUSH2",
      "value": "0x43C2"
    },
    "17396": {
      "jump": "i",
      "op": "JUMP"
    },
    "17397": {
      "op": "JUMPDEST"
    },
    "17398": {
      "op": "SWAP5"
    },
    "17399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17401": {
      "op": "SWAP4"
    },
    "17402": {
      "op": "SWAP1"
    },
    "17403": {
      "op": "SWAP4"
    },
    "17404": {
      "op": "ADD"
    },
    "17405": {
      "op": "CALLDATALOAD"
    },
    "17406": {
      "op": "SWAP4"
    },
    "17407": {
      "op": "POP"
    },
    "17408": {
      "op": "POP"
    },
    "17409": {
      "op": "POP"
    },
    "17410": {
      "jump": "o",
      "op": "JUMP"
    },
    "17411": {
      "op": "JUMPDEST"
    },
    "17412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17416": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17418": {
      "op": "SHL"
    },
    "17419": {
      "op": "SUB"
    },
    "17420": {
      "op": "NOT"
    },
    "17421": {
      "op": "DUP2"
    },
    "17422": {
      "op": "AND"
    },
    "17423": {
      "op": "DUP2"
    },
    "17424": {
      "op": "EQ"
    },
    "17425": {
      "op": "PUSH2",
      "value": "0x97F"
    },
    "17428": {
      "op": "JUMPI"
    },
    "17429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17431": {
      "op": "DUP1"
    },
    "17432": {
      "op": "REVERT"
    },
    "17433": {
      "op": "JUMPDEST"
    },
    "17434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17438": {
      "op": "DUP3"
    },
    "17439": {
      "op": "DUP5"
    },
    "17440": {
      "op": "SUB"
    },
    "17441": {
      "op": "SLT"
    },
    "17442": {
      "op": "ISZERO"
    },
    "17443": {
      "op": "PUSH2",
      "value": "0x442B"
    },
    "17446": {
      "op": "JUMPI"
    },
    "17447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17449": {
      "op": "DUP1"
    },
    "17450": {
      "op": "REVERT"
    },
    "17451": {
      "op": "JUMPDEST"
    },
    "17452": {
      "op": "DUP2"
    },
    "17453": {
      "op": "CALLDATALOAD"
    },
    "17454": {
      "op": "PUSH2",
      "value": "0x24A3"
    },
    "17457": {
      "op": "DUP2"
    },
    "17458": {
      "op": "PUSH2",
      "value": "0x4403"
    },
    "17461": {
      "jump": "i",
      "op": "JUMP"
    },
    "17462": {
      "op": "JUMPDEST"
    },
    "17463": {
      "op": "DUP1"
    },
    "17464": {
      "op": "ISZERO"
    },
    "17465": {
      "op": "ISZERO"
    },
    "17466": {
      "op": "DUP2"
    },
    "17467": {
      "op": "EQ"
    },
    "17468": {
      "op": "PUSH2",
      "value": "0x97F"
    },
    "17471": {
      "op": "JUMPI"
    },
    "17472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17474": {
      "op": "DUP1"
    },
    "17475": {
      "op": "REVERT"
    },
    "17476": {
      "op": "JUMPDEST"
    },
    "17477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17481": {
      "op": "DUP3"
    },
    "17482": {
      "op": "DUP5"
    },
    "17483": {
      "op": "SUB"
    },
    "17484": {
      "op": "SLT"
    },
    "17485": {
      "op": "ISZERO"
    },
    "17486": {
      "op": "PUSH2",
      "value": "0x4456"
    },
    "17489": {
      "op": "JUMPI"
    },
    "17490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17492": {
      "op": "DUP1"
    },
    "17493": {
      "op": "REVERT"
    },
    "17494": {
      "op": "JUMPDEST"
    },
    "17495": {
      "op": "DUP2"
    },
    "17496": {
      "op": "CALLDATALOAD"
    },
    "17497": {
      "op": "PUSH2",
      "value": "0x24A3"
    },
    "17500": {
      "op": "DUP2"
    },
    "17501": {
      "op": "PUSH2",
      "value": "0x4436"
    },
    "17504": {
      "jump": "i",
      "op": "JUMP"
    },
    "17505": {
      "op": "JUMPDEST"
    },
    "17506": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "17511": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17513": {
      "op": "SHL"
    },
    "17514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17516": {
      "op": "MSTORE"
    },
    "17517": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "17519": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "17521": {
      "op": "MSTORE"
    },
    "17522": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17526": {
      "op": "REVERT"
    },
    "17527": {
      "op": "JUMPDEST"
    },
    "17528": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17530": {
      "op": "DUP3"
    },
    "17531": {
      "op": "ADD"
    },
    "17532": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17534": {
      "op": "NOT"
    },
    "17535": {
      "op": "AND"
    },
    "17536": {
      "op": "DUP2"
    },
    "17537": {
      "op": "ADD"
    },
    "17538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17542": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17544": {
      "op": "SHL"
    },
    "17545": {
      "op": "SUB"
    },
    "17546": {
      "op": "DUP2"
    },
    "17547": {
      "op": "GT"
    },
    "17548": {
      "op": "DUP3"
    },
    "17549": {
      "op": "DUP3"
    },
    "17550": {
      "op": "LT"
    },
    "17551": {
      "op": "OR"
    },
    "17552": {
      "op": "ISZERO"
    },
    "17553": {
      "op": "PUSH2",
      "value": "0x449C"
    },
    "17556": {
      "op": "JUMPI"
    },
    "17557": {
      "op": "PUSH2",
      "value": "0x449C"
    },
    "17560": {
      "op": "PUSH2",
      "value": "0x4461"
    },
    "17563": {
      "jump": "i",
      "op": "JUMP"
    },
    "17564": {
      "op": "JUMPDEST"
    },
    "17565": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17567": {
      "op": "MSTORE"
    },
    "17568": {
      "op": "POP"
    },
    "17569": {
      "op": "POP"
    },
    "17570": {
      "jump": "o",
      "op": "JUMP"
    },
    "17571": {
      "op": "JUMPDEST"
    },
    "17572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17574": {
      "op": "DUP3"
    },
    "17575": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17577": {
      "op": "DUP4"
    },
    "17578": {
      "op": "ADD"
    },
    "17579": {
      "op": "SLT"
    },
    "17580": {
      "op": "PUSH2",
      "value": "0x44B4"
    },
    "17583": {
      "op": "JUMPI"
    },
    "17584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17586": {
      "op": "DUP1"
    },
    "17587": {
      "op": "REVERT"
    },
    "17588": {
      "op": "JUMPDEST"
    },
    "17589": {
      "op": "DUP2"
    },
    "17590": {
      "op": "CALLDATALOAD"
    },
    "17591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17595": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17597": {
      "op": "SHL"
    },
    "17598": {
      "op": "SUB"
    },
    "17599": {
      "op": "DUP2"
    },
    "17600": {
      "op": "GT"
    },
    "17601": {
      "op": "ISZERO"
    },
    "17602": {
      "op": "PUSH2",
      "value": "0x44CD"
    },
    "17605": {
      "op": "JUMPI"
    },
    "17606": {
      "op": "PUSH2",
      "value": "0x44CD"
    },
    "17609": {
      "op": "PUSH2",
      "value": "0x4461"
    },
    "17612": {
      "jump": "i",
      "op": "JUMP"
    },
    "17613": {
      "op": "JUMPDEST"
    },
    "17614": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17616": {
      "op": "MLOAD"
    },
    "17617": {
      "op": "PUSH2",
      "value": "0x44E4"
    },
    "17620": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17622": {
      "op": "DUP4"
    },
    "17623": {
      "op": "ADD"
    },
    "17624": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17626": {
      "op": "NOT"
    },
    "17627": {
      "op": "AND"
    },
    "17628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17630": {
      "op": "ADD"
    },
    "17631": {
      "op": "DUP3"
    },
    "17632": {
      "op": "PUSH2",
      "value": "0x4477"
    },
    "17635": {
      "jump": "i",
      "op": "JUMP"
    },
    "17636": {
      "op": "JUMPDEST"
    },
    "17637": {
      "op": "DUP2"
    },
    "17638": {
      "op": "DUP2"
    },
    "17639": {
      "op": "MSTORE"
    },
    "17640": {
      "op": "DUP5"
    },
    "17641": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17643": {
      "op": "DUP4"
    },
    "17644": {
      "op": "DUP7"
    },
    "17645": {
      "op": "ADD"
    },
    "17646": {
      "op": "ADD"
    },
    "17647": {
      "op": "GT"
    },
    "17648": {
      "op": "ISZERO"
    },
    "17649": {
      "op": "PUSH2",
      "value": "0x44F9"
    },
    "17652": {
      "op": "JUMPI"
    },
    "17653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17655": {
      "op": "DUP1"
    },
    "17656": {
      "op": "REVERT"
    },
    "17657": {
      "op": "JUMPDEST"
    },
    "17658": {
      "op": "DUP2"
    },
    "17659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17661": {
      "op": "DUP6"
    },
    "17662": {
      "op": "ADD"
    },
    "17663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17665": {
      "op": "DUP4"
    },
    "17666": {
      "op": "ADD"
    },
    "17667": {
      "op": "CALLDATACOPY"
    },
    "17668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17670": {
      "op": "SWAP2"
    },
    "17671": {
      "op": "DUP2"
    },
    "17672": {
      "op": "ADD"
    },
    "17673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17675": {
      "op": "ADD"
    },
    "17676": {
      "op": "SWAP2"
    },
    "17677": {
      "op": "SWAP1"
    },
    "17678": {
      "op": "SWAP2"
    },
    "17679": {
      "op": "MSTORE"
    },
    "17680": {
      "op": "SWAP4"
    },
    "17681": {
      "op": "SWAP3"
    },
    "17682": {
      "op": "POP"
    },
    "17683": {
      "op": "POP"
    },
    "17684": {
      "op": "POP"
    },
    "17685": {
      "jump": "o",
      "op": "JUMP"
    },
    "17686": {
      "op": "JUMPDEST"
    },
    "17687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17691": {
      "op": "DUP3"
    },
    "17692": {
      "op": "DUP5"
    },
    "17693": {
      "op": "SUB"
    },
    "17694": {
      "op": "SLT"
    },
    "17695": {
      "op": "ISZERO"
    },
    "17696": {
      "op": "PUSH2",
      "value": "0x4528"
    },
    "17699": {
      "op": "JUMPI"
    },
    "17700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17702": {
      "op": "DUP1"
    },
    "17703": {
      "op": "REVERT"
    },
    "17704": {
      "op": "JUMPDEST"
    },
    "17705": {
      "op": "DUP2"
    },
    "17706": {
      "op": "CALLDATALOAD"
    },
    "17707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17711": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17713": {
      "op": "SHL"
    },
    "17714": {
      "op": "SUB"
    },
    "17715": {
      "op": "DUP2"
    },
    "17716": {
      "op": "GT"
    },
    "17717": {
      "op": "ISZERO"
    },
    "17718": {
      "op": "PUSH2",
      "value": "0x453E"
    },
    "17721": {
      "op": "JUMPI"
    },
    "17722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17724": {
      "op": "DUP1"
    },
    "17725": {
      "op": "REVERT"
    },
    "17726": {
      "op": "JUMPDEST"
    },
    "17727": {
      "op": "PUSH2",
      "value": "0xDCA"
    },
    "17730": {
      "op": "DUP5"
    },
    "17731": {
      "op": "DUP3"
    },
    "17732": {
      "op": "DUP6"
    },
    "17733": {
      "op": "ADD"
    },
    "17734": {
      "op": "PUSH2",
      "value": "0x44A3"
    },
    "17737": {
      "jump": "i",
      "op": "JUMP"
    },
    "17738": {
      "op": "JUMPDEST"
    },
    "17739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17741": {
      "op": "JUMPDEST"
    },
    "17742": {
      "op": "DUP4"
    },
    "17743": {
      "op": "DUP2"
    },
    "17744": {
      "op": "LT"
    },
    "17745": {
      "op": "ISZERO"
    },
    "17746": {
      "op": "PUSH2",
      "value": "0x4565"
    },
    "17749": {
      "op": "JUMPI"
    },
    "17750": {
      "op": "DUP2"
    },
    "17751": {
      "op": "DUP2"
    },
    "17752": {
      "op": "ADD"
    },
    "17753": {
      "op": "MLOAD"
    },
    "17754": {
      "op": "DUP4"
    },
    "17755": {
      "op": "DUP3"
    },
    "17756": {
      "op": "ADD"
    },
    "17757": {
      "op": "MSTORE"
    },
    "17758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17760": {
      "op": "ADD"
    },
    "17761": {
      "op": "PUSH2",
      "value": "0x454D"
    },
    "17764": {
      "op": "JUMP"
    },
    "17765": {
      "op": "JUMPDEST"
    },
    "17766": {
      "op": "POP"
    },
    "17767": {
      "op": "POP"
    },
    "17768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17770": {
      "op": "SWAP2"
    },
    "17771": {
      "op": "ADD"
    },
    "17772": {
      "op": "MSTORE"
    },
    "17773": {
      "jump": "o",
      "op": "JUMP"
    },
    "17774": {
      "op": "JUMPDEST"
    },
    "17775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17777": {
      "op": "DUP2"
    },
    "17778": {
      "op": "MLOAD"
    },
    "17779": {
      "op": "DUP1"
    },
    "17780": {
      "op": "DUP5"
    },
    "17781": {
      "op": "MSTORE"
    },
    "17782": {
      "op": "PUSH2",
      "value": "0x4586"
    },
    "17785": {
      "op": "DUP2"
    },
    "17786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17788": {
      "op": "DUP7"
    },
    "17789": {
      "op": "ADD"
    },
    "17790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17792": {
      "op": "DUP7"
    },
    "17793": {
      "op": "ADD"
    },
    "17794": {
      "op": "PUSH2",
      "value": "0x454A"
    },
    "17797": {
      "jump": "i",
      "op": "JUMP"
    },
    "17798": {
      "op": "JUMPDEST"
    },
    "17799": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17801": {
      "op": "ADD"
    },
    "17802": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17804": {
      "op": "NOT"
    },
    "17805": {
      "op": "AND"
    },
    "17806": {
      "op": "SWAP3"
    },
    "17807": {
      "op": "SWAP1"
    },
    "17808": {
      "op": "SWAP3"
    },
    "17809": {
      "op": "ADD"
    },
    "17810": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17812": {
      "op": "ADD"
    },
    "17813": {
      "op": "SWAP3"
    },
    "17814": {
      "op": "SWAP2"
    },
    "17815": {
      "op": "POP"
    },
    "17816": {
      "op": "POP"
    },
    "17817": {
      "jump": "o",
      "op": "JUMP"
    },
    "17818": {
      "op": "JUMPDEST"
    },
    "17819": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17821": {
      "op": "DUP2"
    },
    "17822": {
      "op": "MSTORE"
    },
    "17823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17825": {
      "op": "PUSH2",
      "value": "0x24A3"
    },
    "17828": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17830": {
      "op": "DUP4"
    },
    "17831": {
      "op": "ADD"
    },
    "17832": {
      "op": "DUP5"
    },
    "17833": {
      "op": "PUSH2",
      "value": "0x456E"
    },
    "17836": {
      "jump": "i",
      "op": "JUMP"
    },
    "17837": {
      "op": "JUMPDEST"
    },
    "17838": {
      "op": "DUP1"
    },
    "17839": {
      "op": "CALLDATALOAD"
    },
    "17840": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17842": {
      "op": "DUP2"
    },
    "17843": {
      "op": "AND"
    },
    "17844": {
      "op": "DUP2"
    },
    "17845": {
      "op": "EQ"
    },
    "17846": {
      "op": "PUSH2",
      "value": "0x45BE"
    },
    "17849": {
      "op": "JUMPI"
    },
    "17850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17852": {
      "op": "DUP1"
    },
    "17853": {
      "op": "REVERT"
    },
    "17854": {
      "op": "JUMPDEST"
    },
    "17855": {
      "op": "SWAP2"
    },
    "17856": {
      "op": "SWAP1"
    },
    "17857": {
      "op": "POP"
    },
    "17858": {
      "jump": "o",
      "op": "JUMP"
    },
    "17859": {
      "op": "JUMPDEST"
    },
    "17860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17862": {
      "op": "DUP1"
    },
    "17863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17865": {
      "op": "DUP1"
    },
    "17866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17870": {
      "op": "DUP7"
    },
    "17871": {
      "op": "DUP9"
    },
    "17872": {
      "op": "SUB"
    },
    "17873": {
      "op": "SLT"
    },
    "17874": {
      "op": "ISZERO"
    },
    "17875": {
      "op": "PUSH2",
      "value": "0x45DB"
    },
    "17878": {
      "op": "JUMPI"
    },
    "17879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17881": {
      "op": "DUP1"
    },
    "17882": {
      "op": "REVERT"
    },
    "17883": {
      "op": "JUMPDEST"
    },
    "17884": {
      "op": "DUP6"
    },
    "17885": {
      "op": "CALLDATALOAD"
    },
    "17886": {
      "op": "PUSH2",
      "value": "0x45E6"
    },
    "17889": {
      "op": "DUP2"
    },
    "17890": {
      "op": "PUSH2",
      "value": "0x43C2"
    },
    "17893": {
      "jump": "i",
      "op": "JUMP"
    },
    "17894": {
      "op": "JUMPDEST"
    },
    "17895": {
      "op": "SWAP5"
    },
    "17896": {
      "op": "POP"
    },
    "17897": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17899": {
      "op": "DUP7"
    },
    "17900": {
      "op": "ADD"
    },
    "17901": {
      "op": "CALLDATALOAD"
    },
    "17902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17906": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17908": {
      "op": "SHL"
    },
    "17909": {
      "op": "SUB"
    },
    "17910": {
      "op": "DUP2"
    },
    "17911": {
      "op": "GT"
    },
    "17912": {
      "op": "ISZERO"
    },
    "17913": {
      "op": "PUSH2",
      "value": "0x4601"
    },
    "17916": {
      "op": "JUMPI"
    },
    "17917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17919": {
      "op": "DUP1"
    },
    "17920": {
      "op": "REVERT"
    },
    "17921": {
      "op": "JUMPDEST"
    },
    "17922": {
      "op": "PUSH2",
      "value": "0x460D"
    },
    "17925": {
      "op": "DUP9"
    },
    "17926": {
      "op": "DUP3"
    },
    "17927": {
      "op": "DUP10"
    },
    "17928": {
      "op": "ADD"
    },
    "17929": {
      "op": "PUSH2",
      "value": "0x44A3"
    },
    "17932": {
      "jump": "i",
      "op": "JUMP"
    },
    "17933": {
      "op": "JUMPDEST"
    },
    "17934": {
      "op": "SWAP5"
    },
    "17935": {
      "op": "POP"
    },
    "17936": {
      "op": "POP"
    },
    "17937": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17939": {
      "op": "DUP7"
    },
    "17940": {
      "op": "ADD"
    },
    "17941": {
      "op": "CALLDATALOAD"
    },
    "17942": {
      "op": "SWAP3"
    },
    "17943": {
      "op": "POP"
    },
    "17944": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17946": {
      "op": "DUP7"
    },
    "17947": {
      "op": "ADD"
    },
    "17948": {
      "op": "CALLDATALOAD"
    },
    "17949": {
      "op": "SWAP2"
    },
    "17950": {
      "op": "POP"
    },
    "17951": {
      "op": "PUSH2",
      "value": "0x462A"
    },
    "17954": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17956": {
      "op": "DUP8"
    },
    "17957": {
      "op": "ADD"
    },
    "17958": {
      "op": "PUSH2",
      "value": "0x45AD"
    },
    "17961": {
      "jump": "i",
      "op": "JUMP"
    },
    "17962": {
      "op": "JUMPDEST"
    },
    "17963": {
      "op": "SWAP1"
    },
    "17964": {
      "op": "POP"
    },
    "17965": {
      "op": "SWAP3"
    },
    "17966": {
      "op": "SWAP6"
    },
    "17967": {
      "op": "POP"
    },
    "17968": {
      "op": "SWAP3"
    },
    "17969": {
      "op": "SWAP6"
    },
    "17970": {
      "op": "SWAP1"
    },
    "17971": {
      "op": "SWAP4"
    },
    "17972": {
      "op": "POP"
    },
    "17973": {
      "jump": "o",
      "op": "JUMP"
    },
    "17974": {
      "op": "JUMPDEST"
    },
    "17975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17977": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17979": {
      "op": "DUP3"
    },
    "17980": {
      "op": "DUP5"
    },
    "17981": {
      "op": "SUB"
    },
    "17982": {
      "op": "SLT"
    },
    "17983": {
      "op": "ISZERO"
    },
    "17984": {
      "op": "PUSH2",
      "value": "0x4648"
    },
    "17987": {
      "op": "JUMPI"
    },
    "17988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17990": {
      "op": "DUP1"
    },
    "17991": {
      "op": "REVERT"
    },
    "17992": {
      "op": "JUMPDEST"
    },
    "17993": {
      "op": "POP"
    },
    "17994": {
      "op": "CALLDATALOAD"
    },
    "17995": {
      "op": "SWAP2"
    },
    "17996": {
      "op": "SWAP1"
    },
    "17997": {
      "op": "POP"
    },
    "17998": {
      "jump": "o",
      "op": "JUMP"
    },
    "17999": {
      "op": "JUMPDEST"
    },
    "18000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18004": {
      "op": "DUP3"
    },
    "18005": {
      "op": "DUP5"
    },
    "18006": {
      "op": "SUB"
    },
    "18007": {
      "op": "SLT"
    },
    "18008": {
      "op": "ISZERO"
    },
    "18009": {
      "op": "PUSH2",
      "value": "0x4661"
    },
    "18012": {
      "op": "JUMPI"
    },
    "18013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18015": {
      "op": "DUP1"
    },
    "18016": {
      "op": "REVERT"
    },
    "18017": {
      "op": "JUMPDEST"
    },
    "18018": {
      "op": "DUP2"
    },
    "18019": {
      "op": "CALLDATALOAD"
    },
    "18020": {
      "op": "PUSH2",
      "value": "0x24A3"
    },
    "18023": {
      "op": "DUP2"
    },
    "18024": {
      "op": "PUSH2",
      "value": "0x43C2"
    },
    "18027": {
      "jump": "i",
      "op": "JUMP"
    },
    "18028": {
      "op": "JUMPDEST"
    },
    "18029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18035": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18037": {
      "op": "SHL"
    },
    "18038": {
      "op": "SUB"
    },
    "18039": {
      "op": "DUP3"
    },
    "18040": {
      "op": "GT"
    },
    "18041": {
      "op": "ISZERO"
    },
    "18042": {
      "op": "PUSH2",
      "value": "0x4685"
    },
    "18045": {
      "op": "JUMPI"
    },
    "18046": {
      "op": "PUSH2",
      "value": "0x4685"
    },
    "18049": {
      "op": "PUSH2",
      "value": "0x4461"
    },
    "18052": {
      "jump": "i",
      "op": "JUMP"
    },
    "18053": {
      "op": "JUMPDEST"
    },
    "18054": {
      "op": "POP"
    },
    "18055": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "18057": {
      "op": "SHL"
    },
    "18058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18060": {
      "op": "ADD"
    },
    "18061": {
      "op": "SWAP1"
    },
    "18062": {
      "jump": "o",
      "op": "JUMP"
    },
    "18063": {
      "op": "JUMPDEST"
    },
    "18064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18066": {
      "op": "DUP3"
    },
    "18067": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18069": {
      "op": "DUP4"
    },
    "18070": {
      "op": "ADD"
    },
    "18071": {
      "op": "SLT"
    },
    "18072": {
      "op": "PUSH2",
      "value": "0x46A0"
    },
    "18075": {
      "op": "JUMPI"
    },
    "18076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18078": {
      "op": "DUP1"
    },
    "18079": {
      "op": "REVERT"
    },
    "18080": {
      "op": "JUMPDEST"
    },
    "18081": {
      "op": "DUP2"
    },
    "18082": {
      "op": "CALLDATALOAD"
    },
    "18083": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18085": {
      "op": "PUSH2",
      "value": "0x46AD"
    },
    "18088": {
      "op": "DUP3"
    },
    "18089": {
      "op": "PUSH2",
      "value": "0x466C"
    },
    "18092": {
      "jump": "i",
      "op": "JUMP"
    },
    "18093": {
      "op": "JUMPDEST"
    },
    "18094": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18096": {
      "op": "MLOAD"
    },
    "18097": {
      "op": "PUSH2",
      "value": "0x46BA"
    },
    "18100": {
      "op": "DUP3"
    },
    "18101": {
      "op": "DUP3"
    },
    "18102": {
      "op": "PUSH2",
      "value": "0x4477"
    },
    "18105": {
      "jump": "i",
      "op": "JUMP"
    },
    "18106": {
      "op": "JUMPDEST"
    },
    "18107": {
      "op": "DUP4"
    },
    "18108": {
      "op": "DUP2"
    },
    "18109": {
      "op": "MSTORE"
    },
    "18110": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "18112": {
      "op": "SWAP4"
    },
    "18113": {
      "op": "SWAP1"
    },
    "18114": {
      "op": "SWAP4"
    },
    "18115": {
      "op": "SHL"
    },
    "18116": {
      "op": "DUP6"
    },
    "18117": {
      "op": "ADD"
    },
    "18118": {
      "op": "DUP3"
    },
    "18119": {
      "op": "ADD"
    },
    "18120": {
      "op": "SWAP3"
    },
    "18121": {
      "op": "DUP3"
    },
    "18122": {
      "op": "DUP2"
    },
    "18123": {
      "op": "ADD"
    },
    "18124": {
      "op": "SWAP2"
    },
    "18125": {
      "op": "POP"
    },
    "18126": {
      "op": "DUP7"
    },
    "18127": {
      "op": "DUP5"
    },
    "18128": {
      "op": "GT"
    },
    "18129": {
      "op": "ISZERO"
    },
    "18130": {
      "op": "PUSH2",
      "value": "0x46DA"
    },
    "18133": {
      "op": "JUMPI"
    },
    "18134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18136": {
      "op": "DUP1"
    },
    "18137": {
      "op": "REVERT"
    },
    "18138": {
      "op": "JUMPDEST"
    },
    "18139": {
      "op": "DUP3"
    },
    "18140": {
      "op": "DUP7"
    },
    "18141": {
      "op": "ADD"
    },
    "18142": {
      "op": "JUMPDEST"
    },
    "18143": {
      "op": "DUP5"
    },
    "18144": {
      "op": "DUP2"
    },
    "18145": {
      "op": "LT"
    },
    "18146": {
      "op": "ISZERO"
    },
    "18147": {
      "op": "PUSH2",
      "value": "0x46F5"
    },
    "18150": {
      "op": "JUMPI"
    },
    "18151": {
      "op": "DUP1"
    },
    "18152": {
      "op": "CALLDATALOAD"
    },
    "18153": {
      "op": "DUP4"
    },
    "18154": {
      "op": "MSTORE"
    },
    "18155": {
      "op": "SWAP2"
    },
    "18156": {
      "op": "DUP4"
    },
    "18157": {
      "op": "ADD"
    },
    "18158": {
      "op": "SWAP2"
    },
    "18159": {
      "op": "DUP4"
    },
    "18160": {
      "op": "ADD"
    },
    "18161": {
      "op": "PUSH2",
      "value": "0x46DE"
    },
    "18164": {
      "op": "JUMP"
    },
    "18165": {
      "op": "JUMPDEST"
    },
    "18166": {
      "op": "POP"
    },
    "18167": {
      "op": "SWAP7"
    },
    "18168": {
      "op": "SWAP6"
    },
    "18169": {
      "op": "POP"
    },
    "18170": {
      "op": "POP"
    },
    "18171": {
      "op": "POP"
    },
    "18172": {
      "op": "POP"
    },
    "18173": {
      "op": "POP"
    },
    "18174": {
      "op": "POP"
    },
    "18175": {
      "jump": "o",
      "op": "JUMP"
    },
    "18176": {
      "op": "JUMPDEST"
    },
    "18177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18179": {
      "op": "DUP1"
    },
    "18180": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18182": {
      "op": "DUP1"
    },
    "18183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18185": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18187": {
      "op": "DUP7"
    },
    "18188": {
      "op": "DUP9"
    },
    "18189": {
      "op": "SUB"
    },
    "18190": {
      "op": "SLT"
    },
    "18191": {
      "op": "ISZERO"
    },
    "18192": {
      "op": "PUSH2",
      "value": "0x4718"
    },
    "18195": {
      "op": "JUMPI"
    },
    "18196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18198": {
      "op": "DUP1"
    },
    "18199": {
      "op": "REVERT"
    },
    "18200": {
      "op": "JUMPDEST"
    },
    "18201": {
      "op": "DUP6"
    },
    "18202": {
      "op": "CALLDATALOAD"
    },
    "18203": {
      "op": "PUSH2",
      "value": "0x4723"
    },
    "18206": {
      "op": "DUP2"
    },
    "18207": {
      "op": "PUSH2",
      "value": "0x43C2"
    },
    "18210": {
      "jump": "i",
      "op": "JUMP"
    },
    "18211": {
      "op": "JUMPDEST"
    },
    "18212": {
      "op": "SWAP5"
    },
    "18213": {
      "op": "POP"
    },
    "18214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18216": {
      "op": "DUP7"
    },
    "18217": {
      "op": "ADD"
    },
    "18218": {
      "op": "CALLDATALOAD"
    },
    "18219": {
      "op": "PUSH2",
      "value": "0x4733"
    },
    "18222": {
      "op": "DUP2"
    },
    "18223": {
      "op": "PUSH2",
      "value": "0x43C2"
    },
    "18226": {
      "jump": "i",
      "op": "JUMP"
    },
    "18227": {
      "op": "JUMPDEST"
    },
    "18228": {
      "op": "SWAP4"
    },
    "18229": {
      "op": "POP"
    },
    "18230": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18232": {
      "op": "DUP7"
    },
    "18233": {
      "op": "ADD"
    },
    "18234": {
      "op": "CALLDATALOAD"
    },
    "18235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18239": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18241": {
      "op": "SHL"
    },
    "18242": {
      "op": "SUB"
    },
    "18243": {
      "op": "DUP1"
    },
    "18244": {
      "op": "DUP3"
    },
    "18245": {
      "op": "GT"
    },
    "18246": {
      "op": "ISZERO"
    },
    "18247": {
      "op": "PUSH2",
      "value": "0x474F"
    },
    "18250": {
      "op": "JUMPI"
    },
    "18251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18253": {
      "op": "DUP1"
    },
    "18254": {
      "op": "REVERT"
    },
    "18255": {
      "op": "JUMPDEST"
    },
    "18256": {
      "op": "PUSH2",
      "value": "0x475B"
    },
    "18259": {
      "op": "DUP10"
    },
    "18260": {
      "op": "DUP4"
    },
    "18261": {
      "op": "DUP11"
    },
    "18262": {
      "op": "ADD"
    },
    "18263": {
      "op": "PUSH2",
      "value": "0x468F"
    },
    "18266": {
      "jump": "i",
      "op": "JUMP"
    },
    "18267": {
      "op": "JUMPDEST"
    },
    "18268": {
      "op": "SWAP5"
    },
    "18269": {
      "op": "POP"
    },
    "18270": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18272": {
      "op": "DUP9"
    },
    "18273": {
      "op": "ADD"
    },
    "18274": {
      "op": "CALLDATALOAD"
    },
    "18275": {
      "op": "SWAP2"
    },
    "18276": {
      "op": "POP"
    },
    "18277": {
      "op": "DUP1"
    },
    "18278": {
      "op": "DUP3"
    },
    "18279": {
      "op": "GT"
    },
    "18280": {
      "op": "ISZERO"
    },
    "18281": {
      "op": "PUSH2",
      "value": "0x4771"
    },
    "18284": {
      "op": "JUMPI"
    },
    "18285": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18287": {
      "op": "DUP1"
    },
    "18288": {
      "op": "REVERT"
    },
    "18289": {
      "op": "JUMPDEST"
    },
    "18290": {
      "op": "PUSH2",
      "value": "0x477D"
    },
    "18293": {
      "op": "DUP10"
    },
    "18294": {
      "op": "DUP4"
    },
    "18295": {
      "op": "DUP11"
    },
    "18296": {
      "op": "ADD"
    },
    "18297": {
      "op": "PUSH2",
      "value": "0x468F"
    },
    "18300": {
      "jump": "i",
      "op": "JUMP"
    },
    "18301": {
      "op": "JUMPDEST"
    },
    "18302": {
      "op": "SWAP4"
    },
    "18303": {
      "op": "POP"
    },
    "18304": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "18306": {
      "op": "DUP9"
    },
    "18307": {
      "op": "ADD"
    },
    "18308": {
      "op": "CALLDATALOAD"
    },
    "18309": {
      "op": "SWAP2"
    },
    "18310": {
      "op": "POP"
    },
    "18311": {
      "op": "DUP1"
    },
    "18312": {
      "op": "DUP3"
    },
    "18313": {
      "op": "GT"
    },
    "18314": {
      "op": "ISZERO"
    },
    "18315": {
      "op": "PUSH2",
      "value": "0x4793"
    },
    "18318": {
      "op": "JUMPI"
    },
    "18319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18321": {
      "op": "DUP1"
    },
    "18322": {
      "op": "REVERT"
    },
    "18323": {
      "op": "JUMPDEST"
    },
    "18324": {
      "op": "POP"
    },
    "18325": {
      "op": "PUSH2",
      "value": "0x47A0"
    },
    "18328": {
      "op": "DUP9"
    },
    "18329": {
      "op": "DUP3"
    },
    "18330": {
      "op": "DUP10"
    },
    "18331": {
      "op": "ADD"
    },
    "18332": {
      "op": "PUSH2",
      "value": "0x44A3"
    },
    "18335": {
      "jump": "i",
      "op": "JUMP"
    },
    "18336": {
      "op": "JUMPDEST"
    },
    "18337": {
      "op": "SWAP2"
    },
    "18338": {
      "op": "POP"
    },
    "18339": {
      "op": "POP"
    },
    "18340": {
      "op": "SWAP3"
    },
    "18341": {
      "op": "SWAP6"
    },
    "18342": {
      "op": "POP"
    },
    "18343": {
      "op": "SWAP3"
    },
    "18344": {
      "op": "SWAP6"
    },
    "18345": {
      "op": "SWAP1"
    },
    "18346": {
      "op": "SWAP4"
    },
    "18347": {
      "op": "POP"
    },
    "18348": {
      "jump": "o",
      "op": "JUMP"
    },
    "18349": {
      "op": "JUMPDEST"
    },
    "18350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18352": {
      "op": "DUP1"
    },
    "18353": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18355": {
      "op": "DUP4"
    },
    "18356": {
      "op": "DUP6"
    },
    "18357": {
      "op": "SUB"
    },
    "18358": {
      "op": "SLT"
    },
    "18359": {
      "op": "ISZERO"
    },
    "18360": {
      "op": "PUSH2",
      "value": "0x47C0"
    },
    "18363": {
      "op": "JUMPI"
    },
    "18364": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18366": {
      "op": "DUP1"
    },
    "18367": {
      "op": "REVERT"
    },
    "18368": {
      "op": "JUMPDEST"
    },
    "18369": {
      "op": "DUP3"
    },
    "18370": {
      "op": "CALLDATALOAD"
    },
    "18371": {
      "op": "SWAP2"
    },
    "18372": {
      "op": "POP"
    },
    "18373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18375": {
      "op": "DUP4"
    },
    "18376": {
      "op": "ADD"
    },
    "18377": {
      "op": "CALLDATALOAD"
    },
    "18378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18382": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18384": {
      "op": "SHL"
    },
    "18385": {
      "op": "SUB"
    },
    "18386": {
      "op": "DUP2"
    },
    "18387": {
      "op": "GT"
    },
    "18388": {
      "op": "ISZERO"
    },
    "18389": {
      "op": "PUSH2",
      "value": "0x47DD"
    },
    "18392": {
      "op": "JUMPI"
    },
    "18393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18395": {
      "op": "DUP1"
    },
    "18396": {
      "op": "REVERT"
    },
    "18397": {
      "op": "JUMPDEST"
    },
    "18398": {
      "op": "PUSH2",
      "value": "0x47E9"
    },
    "18401": {
      "op": "DUP6"
    },
    "18402": {
      "op": "DUP3"
    },
    "18403": {
      "op": "DUP7"
    },
    "18404": {
      "op": "ADD"
    },
    "18405": {
      "op": "PUSH2",
      "value": "0x44A3"
    },
    "18408": {
      "jump": "i",
      "op": "JUMP"
    },
    "18409": {
      "op": "JUMPDEST"
    },
    "18410": {
      "op": "SWAP2"
    },
    "18411": {
      "op": "POP"
    },
    "18412": {
      "op": "POP"
    },
    "18413": {
      "op": "SWAP3"
    },
    "18414": {
      "op": "POP"
    },
    "18415": {
      "op": "SWAP3"
    },
    "18416": {
      "op": "SWAP1"
    },
    "18417": {
      "op": "POP"
    },
    "18418": {
      "jump": "o",
      "op": "JUMP"
    },
    "18419": {
      "op": "JUMPDEST"
    },
    "18420": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "18425": {
      "op": "DUP2"
    },
    "18426": {
      "op": "AND"
    },
    "18427": {
      "op": "DUP2"
    },
    "18428": {
      "op": "EQ"
    },
    "18429": {
      "op": "PUSH2",
      "value": "0x97F"
    },
    "18432": {
      "op": "JUMPI"
    },
    "18433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18435": {
      "op": "DUP1"
    },
    "18436": {
      "op": "REVERT"
    },
    "18437": {
      "op": "JUMPDEST"
    },
    "18438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18440": {
      "op": "DUP1"
    },
    "18441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18443": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18445": {
      "op": "DUP5"
    },
    "18446": {
      "op": "DUP7"
    },
    "18447": {
      "op": "SUB"
    },
    "18448": {
      "op": "SLT"
    },
    "18449": {
      "op": "ISZERO"
    },
    "18450": {
      "op": "PUSH2",
      "value": "0x481A"
    },
    "18453": {
      "op": "JUMPI"
    },
    "18454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18456": {
      "op": "DUP1"
    },
    "18457": {
      "op": "REVERT"
    },
    "18458": {
      "op": "JUMPDEST"
    },
    "18459": {
      "op": "DUP4"
    },
    "18460": {
      "op": "CALLDATALOAD"
    },
    "18461": {
      "op": "PUSH2",
      "value": "0x4825"
    },
    "18464": {
      "op": "DUP2"
    },
    "18465": {
      "op": "PUSH2",
      "value": "0x47F3"
    },
    "18468": {
      "jump": "i",
      "op": "JUMP"
    },
    "18469": {
      "op": "JUMPDEST"
    },
    "18470": {
      "op": "SWAP3"
    },
    "18471": {
      "op": "POP"
    },
    "18472": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18474": {
      "op": "DUP5"
    },
    "18475": {
      "op": "ADD"
    },
    "18476": {
      "op": "CALLDATALOAD"
    },
    "18477": {
      "op": "PUSH2",
      "value": "0x4835"
    },
    "18480": {
      "op": "DUP2"
    },
    "18481": {
      "op": "PUSH2",
      "value": "0x47F3"
    },
    "18484": {
      "jump": "i",
      "op": "JUMP"
    },
    "18485": {
      "op": "JUMPDEST"
    },
    "18486": {
      "op": "SWAP2"
    },
    "18487": {
      "op": "POP"
    },
    "18488": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18490": {
      "op": "DUP5"
    },
    "18491": {
      "op": "ADD"
    },
    "18492": {
      "op": "CALLDATALOAD"
    },
    "18493": {
      "op": "PUSH2",
      "value": "0x4845"
    },
    "18496": {
      "op": "DUP2"
    },
    "18497": {
      "op": "PUSH2",
      "value": "0x43C2"
    },
    "18500": {
      "jump": "i",
      "op": "JUMP"
    },
    "18501": {
      "op": "JUMPDEST"
    },
    "18502": {
      "op": "DUP1"
    },
    "18503": {
      "op": "SWAP2"
    },
    "18504": {
      "op": "POP"
    },
    "18505": {
      "op": "POP"
    },
    "18506": {
      "op": "SWAP3"
    },
    "18507": {
      "op": "POP"
    },
    "18508": {
      "op": "SWAP3"
    },
    "18509": {
      "op": "POP"
    },
    "18510": {
      "op": "SWAP3"
    },
    "18511": {
      "jump": "o",
      "op": "JUMP"
    },
    "18512": {
      "op": "JUMPDEST"
    },
    "18513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18515": {
      "op": "DUP1"
    },
    "18516": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18518": {
      "op": "DUP4"
    },
    "18519": {
      "op": "DUP6"
    },
    "18520": {
      "op": "SUB"
    },
    "18521": {
      "op": "SLT"
    },
    "18522": {
      "op": "ISZERO"
    },
    "18523": {
      "op": "PUSH2",
      "value": "0x4863"
    },
    "18526": {
      "op": "JUMPI"
    },
    "18527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18529": {
      "op": "DUP1"
    },
    "18530": {
      "op": "REVERT"
    },
    "18531": {
      "op": "JUMPDEST"
    },
    "18532": {
      "op": "DUP3"
    },
    "18533": {
      "op": "CALLDATALOAD"
    },
    "18534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18538": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18540": {
      "op": "SHL"
    },
    "18541": {
      "op": "SUB"
    },
    "18542": {
      "op": "DUP1"
    },
    "18543": {
      "op": "DUP3"
    },
    "18544": {
      "op": "GT"
    },
    "18545": {
      "op": "ISZERO"
    },
    "18546": {
      "op": "PUSH2",
      "value": "0x487A"
    },
    "18549": {
      "op": "JUMPI"
    },
    "18550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18552": {
      "op": "DUP1"
    },
    "18553": {
      "op": "REVERT"
    },
    "18554": {
      "op": "JUMPDEST"
    },
    "18555": {
      "op": "DUP2"
    },
    "18556": {
      "op": "DUP6"
    },
    "18557": {
      "op": "ADD"
    },
    "18558": {
      "op": "SWAP2"
    },
    "18559": {
      "op": "POP"
    },
    "18560": {
      "op": "DUP6"
    },
    "18561": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18563": {
      "op": "DUP4"
    },
    "18564": {
      "op": "ADD"
    },
    "18565": {
      "op": "SLT"
    },
    "18566": {
      "op": "PUSH2",
      "value": "0x488E"
    },
    "18569": {
      "op": "JUMPI"
    },
    "18570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18572": {
      "op": "DUP1"
    },
    "18573": {
      "op": "REVERT"
    },
    "18574": {
      "op": "JUMPDEST"
    },
    "18575": {
      "op": "DUP2"
    },
    "18576": {
      "op": "CALLDATALOAD"
    },
    "18577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18579": {
      "op": "PUSH2",
      "value": "0x489B"
    },
    "18582": {
      "op": "DUP3"
    },
    "18583": {
      "op": "PUSH2",
      "value": "0x466C"
    },
    "18586": {
      "jump": "i",
      "op": "JUMP"
    },
    "18587": {
      "op": "JUMPDEST"
    },
    "18588": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18590": {
      "op": "MLOAD"
    },
    "18591": {
      "op": "PUSH2",
      "value": "0x48A8"
    },
    "18594": {
      "op": "DUP3"
    },
    "18595": {
      "op": "DUP3"
    },
    "18596": {
      "op": "PUSH2",
      "value": "0x4477"
    },
    "18599": {
      "jump": "i",
      "op": "JUMP"
    },
    "18600": {
      "op": "JUMPDEST"
    },
    "18601": {
      "op": "DUP4"
    },
    "18602": {
      "op": "DUP2"
    },
    "18603": {
      "op": "MSTORE"
    },
    "18604": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "18606": {
      "op": "SWAP4"
    },
    "18607": {
      "op": "SWAP1"
    },
    "18608": {
      "op": "SWAP4"
    },
    "18609": {
      "op": "SHL"
    },
    "18610": {
      "op": "DUP6"
    },
    "18611": {
      "op": "ADD"
    },
    "18612": {
      "op": "DUP3"
    },
    "18613": {
      "op": "ADD"
    },
    "18614": {
      "op": "SWAP3"
    },
    "18615": {
      "op": "DUP3"
    },
    "18616": {
      "op": "DUP2"
    },
    "18617": {
      "op": "ADD"
    },
    "18618": {
      "op": "SWAP2"
    },
    "18619": {
      "op": "POP"
    },
    "18620": {
      "op": "DUP10"
    },
    "18621": {
      "op": "DUP5"
    },
    "18622": {
      "op": "GT"
    },
    "18623": {
      "op": "ISZERO"
    },
    "18624": {
      "op": "PUSH2",
      "value": "0x48C8"
    },
    "18627": {
      "op": "JUMPI"
    },
    "18628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18630": {
      "op": "DUP1"
    },
    "18631": {
      "op": "REVERT"
    },
    "18632": {
      "op": "JUMPDEST"
    },
    "18633": {
      "op": "SWAP5"
    },
    "18634": {
      "op": "DUP3"
    },
    "18635": {
      "op": "ADD"
    },
    "18636": {
      "op": "SWAP5"
    },
    "18637": {
      "op": "JUMPDEST"
    },
    "18638": {
      "op": "DUP4"
    },
    "18639": {
      "op": "DUP7"
    },
    "18640": {
      "op": "LT"
    },
    "18641": {
      "op": "ISZERO"
    },
    "18642": {
      "op": "PUSH2",
      "value": "0x48EF"
    },
    "18645": {
      "op": "JUMPI"
    },
    "18646": {
      "op": "DUP6"
    },
    "18647": {
      "op": "CALLDATALOAD"
    },
    "18648": {
      "op": "PUSH2",
      "value": "0x48E0"
    },
    "18651": {
      "op": "DUP2"
    },
    "18652": {
      "op": "PUSH2",
      "value": "0x43C2"
    },
    "18655": {
      "jump": "i",
      "op": "JUMP"
    },
    "18656": {
      "op": "JUMPDEST"
    },
    "18657": {
      "op": "DUP3"
    },
    "18658": {
      "op": "MSTORE"
    },
    "18659": {
      "op": "SWAP5"
    },
    "18660": {
      "op": "DUP3"
    },
    "18661": {
      "op": "ADD"
    },
    "18662": {
      "op": "SWAP5"
    },
    "18663": {
      "op": "SWAP1"
    },
    "18664": {
      "op": "DUP3"
    },
    "18665": {
      "op": "ADD"
    },
    "18666": {
      "op": "SWAP1"
    },
    "18667": {
      "op": "PUSH2",
      "value": "0x48CD"
    },
    "18670": {
      "op": "JUMP"
    },
    "18671": {
      "op": "JUMPDEST"
    },
    "18672": {
      "op": "SWAP7"
    },
    "18673": {
      "op": "POP"
    },
    "18674": {
      "op": "POP"
    },
    "18675": {
      "op": "DUP7"
    },
    "18676": {
      "op": "ADD"
    },
    "18677": {
      "op": "CALLDATALOAD"
    },
    "18678": {
      "op": "SWAP3"
    },
    "18679": {
      "op": "POP"
    },
    "18680": {
      "op": "POP"
    },
    "18681": {
      "op": "DUP1"
    },
    "18682": {
      "op": "DUP3"
    },
    "18683": {
      "op": "GT"
    },
    "18684": {
      "op": "ISZERO"
    },
    "18685": {
      "op": "PUSH2",
      "value": "0x4905"
    },
    "18688": {
      "op": "JUMPI"
    },
    "18689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18691": {
      "op": "DUP1"
    },
    "18692": {
      "op": "REVERT"
    },
    "18693": {
      "op": "JUMPDEST"
    },
    "18694": {
      "op": "POP"
    },
    "18695": {
      "op": "PUSH2",
      "value": "0x47E9"
    },
    "18698": {
      "op": "DUP6"
    },
    "18699": {
      "op": "DUP3"
    },
    "18700": {
      "op": "DUP7"
    },
    "18701": {
      "op": "ADD"
    },
    "18702": {
      "op": "PUSH2",
      "value": "0x468F"
    },
    "18705": {
      "jump": "i",
      "op": "JUMP"
    },
    "18706": {
      "op": "JUMPDEST"
    },
    "18707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18709": {
      "op": "DUP2"
    },
    "18710": {
      "op": "MLOAD"
    },
    "18711": {
      "op": "DUP1"
    },
    "18712": {
      "op": "DUP5"
    },
    "18713": {
      "op": "MSTORE"
    },
    "18714": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18716": {
      "op": "DUP1"
    },
    "18717": {
      "op": "DUP6"
    },
    "18718": {
      "op": "ADD"
    },
    "18719": {
      "op": "SWAP5"
    },
    "18720": {
      "op": "POP"
    },
    "18721": {
      "op": "DUP1"
    },
    "18722": {
      "op": "DUP5"
    },
    "18723": {
      "op": "ADD"
    },
    "18724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18726": {
      "op": "JUMPDEST"
    },
    "18727": {
      "op": "DUP4"
    },
    "18728": {
      "op": "DUP2"
    },
    "18729": {
      "op": "LT"
    },
    "18730": {
      "op": "ISZERO"
    },
    "18731": {
      "op": "PUSH2",
      "value": "0x4942"
    },
    "18734": {
      "op": "JUMPI"
    },
    "18735": {
      "op": "DUP2"
    },
    "18736": {
      "op": "MLOAD"
    },
    "18737": {
      "op": "DUP8"
    },
    "18738": {
      "op": "MSTORE"
    },
    "18739": {
      "op": "SWAP6"
    },
    "18740": {
      "op": "DUP3"
    },
    "18741": {
      "op": "ADD"
    },
    "18742": {
      "op": "SWAP6"
    },
    "18743": {
      "op": "SWAP1"
    },
    "18744": {
      "op": "DUP3"
    },
    "18745": {
      "op": "ADD"
    },
    "18746": {
      "op": "SWAP1"
    },
    "18747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18749": {
      "op": "ADD"
    },
    "18750": {
      "op": "PUSH2",
      "value": "0x4926"
    },
    "18753": {
      "op": "JUMP"
    },
    "18754": {
      "op": "JUMPDEST"
    },
    "18755": {
      "op": "POP"
    },
    "18756": {
      "op": "SWAP5"
    },
    "18757": {
      "op": "SWAP6"
    },
    "18758": {
      "op": "SWAP5"
    },
    "18759": {
      "op": "POP"
    },
    "18760": {
      "op": "POP"
    },
    "18761": {
      "op": "POP"
    },
    "18762": {
      "op": "POP"
    },
    "18763": {
      "op": "POP"
    },
    "18764": {
      "jump": "o",
      "op": "JUMP"
    },
    "18765": {
      "op": "JUMPDEST"
    },
    "18766": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18768": {
      "op": "DUP2"
    },
    "18769": {
      "op": "MSTORE"
    },
    "18770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18772": {
      "op": "PUSH2",
      "value": "0x24A3"
    },
    "18775": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18777": {
      "op": "DUP4"
    },
    "18778": {
      "op": "ADD"
    },
    "18779": {
      "op": "DUP5"
    },
    "18780": {
      "op": "PUSH2",
      "value": "0x4912"
    },
    "18783": {
      "jump": "i",
      "op": "JUMP"
    },
    "18784": {
      "op": "JUMPDEST"
    },
    "18785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18789": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18791": {
      "op": "SHL"
    },
    "18792": {
      "op": "SUB"
    },
    "18793": {
      "op": "DUP2"
    },
    "18794": {
      "op": "AND"
    },
    "18795": {
      "op": "DUP2"
    },
    "18796": {
      "op": "EQ"
    },
    "18797": {
      "op": "PUSH2",
      "value": "0x97F"
    },
    "18800": {
      "op": "JUMPI"
    },
    "18801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18803": {
      "op": "DUP1"
    },
    "18804": {
      "op": "REVERT"
    },
    "18805": {
      "op": "JUMPDEST"
    },
    "18806": {
      "op": "DUP1"
    },
    "18807": {
      "op": "CALLDATALOAD"
    },
    "18808": {
      "op": "PUSH2",
      "value": "0x45BE"
    },
    "18811": {
      "op": "DUP2"
    },
    "18812": {
      "op": "PUSH2",
      "value": "0x4960"
    },
    "18815": {
      "jump": "i",
      "op": "JUMP"
    },
    "18816": {
      "op": "JUMPDEST"
    },
    "18817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18819": {
      "op": "DUP1"
    },
    "18820": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18822": {
      "op": "DUP1"
    },
    "18823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18825": {
      "op": "DUP6"
    },
    "18826": {
      "op": "DUP8"
    },
    "18827": {
      "op": "SUB"
    },
    "18828": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18830": {
      "op": "DUP2"
    },
    "18831": {
      "op": "SLT"
    },
    "18832": {
      "op": "ISZERO"
    },
    "18833": {
      "op": "PUSH2",
      "value": "0x4999"
    },
    "18836": {
      "op": "JUMPI"
    },
    "18837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18839": {
      "op": "DUP1"
    },
    "18840": {
      "op": "REVERT"
    },
    "18841": {
      "op": "JUMPDEST"
    },
    "18842": {
      "op": "DUP7"
    },
    "18843": {
      "op": "CALLDATALOAD"
    },
    "18844": {
      "op": "PUSH2",
      "value": "0x49A4"
    },
    "18847": {
      "op": "DUP2"
    },
    "18848": {
      "op": "PUSH2",
      "value": "0x47F3"
    },
    "18851": {
      "jump": "i",
      "op": "JUMP"
    },
    "18852": {
      "op": "JUMPDEST"
    },
    "18853": {
      "op": "SWAP6"
    },
    "18854": {
      "op": "POP"
    },
    "18855": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18857": {
      "op": "DUP8"
    },
    "18858": {
      "op": "ADD"
    },
    "18859": {
      "op": "CALLDATALOAD"
    },
    "18860": {
      "op": "PUSH2",
      "value": "0x49B4"
    },
    "18863": {
      "op": "DUP2"
    },
    "18864": {
      "op": "PUSH2",
      "value": "0x47F3"
    },
    "18867": {
      "jump": "i",
      "op": "JUMP"
    },
    "18868": {
      "op": "JUMPDEST"
    },
    "18869": {
      "op": "SWAP5"
    },
    "18870": {
      "op": "POP"
    },
    "18871": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18873": {
      "op": "DUP8"
    },
    "18874": {
      "op": "ADD"
    },
    "18875": {
      "op": "CALLDATALOAD"
    },
    "18876": {
      "op": "PUSH2",
      "value": "0x49C4"
    },
    "18879": {
      "op": "DUP2"
    },
    "18880": {
      "op": "PUSH2",
      "value": "0x43C2"
    },
    "18883": {
      "jump": "i",
      "op": "JUMP"
    },
    "18884": {
      "op": "JUMPDEST"
    },
    "18885": {
      "op": "SWAP4"
    },
    "18886": {
      "op": "POP"
    },
    "18887": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18889": {
      "op": "DUP8"
    },
    "18890": {
      "op": "ADD"
    },
    "18891": {
      "op": "CALLDATALOAD"
    },
    "18892": {
      "op": "PUSH2",
      "value": "0x49D4"
    },
    "18895": {
      "op": "DUP2"
    },
    "18896": {
      "op": "PUSH2",
      "value": "0x4960"
    },
    "18899": {
      "jump": "i",
      "op": "JUMP"
    },
    "18900": {
      "op": "JUMPDEST"
    },
    "18901": {
      "op": "SWAP3"
    },
    "18902": {
      "op": "POP"
    },
    "18903": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18905": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "18907": {
      "op": "NOT"
    },
    "18908": {
      "op": "DUP3"
    },
    "18909": {
      "op": "ADD"
    },
    "18910": {
      "op": "SLT"
    },
    "18911": {
      "op": "ISZERO"
    },
    "18912": {
      "op": "PUSH2",
      "value": "0x49E8"
    },
    "18915": {
      "op": "JUMPI"
    },
    "18916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18918": {
      "op": "DUP1"
    },
    "18919": {
      "op": "REVERT"
    },
    "18920": {
      "op": "JUMPDEST"
    },
    "18921": {
      "op": "POP"
    },
    "18922": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18924": {
      "op": "MLOAD"
    },
    "18925": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18927": {
      "op": "DUP2"
    },
    "18928": {
      "op": "ADD"
    },
    "18929": {
      "op": "DUP2"
    },
    "18930": {
      "op": "DUP2"
    },
    "18931": {
      "op": "LT"
    },
    "18932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18936": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18938": {
      "op": "SHL"
    },
    "18939": {
      "op": "SUB"
    },
    "18940": {
      "op": "DUP3"
    },
    "18941": {
      "op": "GT"
    },
    "18942": {
      "op": "OR"
    },
    "18943": {
      "op": "ISZERO"
    },
    "18944": {
      "op": "PUSH2",
      "value": "0x4A0B"
    },
    "18947": {
      "op": "JUMPI"
    },
    "18948": {
      "op": "PUSH2",
      "value": "0x4A0B"
    },
    "18951": {
      "op": "PUSH2",
      "value": "0x4461"
    },
    "18954": {
      "jump": "i",
      "op": "JUMP"
    },
    "18955": {
      "op": "JUMPDEST"
    },
    "18956": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18958": {
      "op": "MSTORE"
    },
    "18959": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "18961": {
      "op": "DUP8"
    },
    "18962": {
      "op": "ADD"
    },
    "18963": {
      "op": "CALLDATALOAD"
    },
    "18964": {
      "op": "DUP2"
    },
    "18965": {
      "op": "MSTORE"
    },
    "18966": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18968": {
      "op": "DUP8"
    },
    "18969": {
      "op": "ADD"
    },
    "18970": {
      "op": "CALLDATALOAD"
    },
    "18971": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18973": {
      "op": "DUP3"
    },
    "18974": {
      "op": "ADD"
    },
    "18975": {
      "op": "MSTORE"
    },
    "18976": {
      "op": "PUSH2",
      "value": "0x4A2B"
    },
    "18979": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "18981": {
      "op": "DUP9"
    },
    "18982": {
      "op": "ADD"
    },
    "18983": {
      "op": "PUSH2",
      "value": "0x45AD"
    },
    "18986": {
      "jump": "i",
      "op": "JUMP"
    },
    "18987": {
      "op": "JUMPDEST"
    },
    "18988": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18990": {
      "op": "DUP3"
    },
    "18991": {
      "op": "ADD"
    },
    "18992": {
      "op": "MSTORE"
    },
    "18993": {
      "op": "DUP1"
    },
    "18994": {
      "op": "SWAP2"
    },
    "18995": {
      "op": "POP"
    },
    "18996": {
      "op": "POP"
    },
    "18997": {
      "op": "SWAP3"
    },
    "18998": {
      "op": "SWAP6"
    },
    "18999": {
      "op": "POP"
    },
    "19000": {
      "op": "SWAP3"
    },
    "19001": {
      "op": "SWAP6"
    },
    "19002": {
      "op": "SWAP1"
    },
    "19003": {
      "op": "SWAP4"
    },
    "19004": {
      "op": "POP"
    },
    "19005": {
      "jump": "o",
      "op": "JUMP"
    },
    "19006": {
      "op": "JUMPDEST"
    },
    "19007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19009": {
      "op": "DUP1"
    },
    "19010": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19012": {
      "op": "DUP4"
    },
    "19013": {
      "op": "DUP6"
    },
    "19014": {
      "op": "SUB"
    },
    "19015": {
      "op": "SLT"
    },
    "19016": {
      "op": "ISZERO"
    },
    "19017": {
      "op": "PUSH2",
      "value": "0x4A51"
    },
    "19020": {
      "op": "JUMPI"
    },
    "19021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19023": {
      "op": "DUP1"
    },
    "19024": {
      "op": "REVERT"
    },
    "19025": {
      "op": "JUMPDEST"
    },
    "19026": {
      "op": "DUP3"
    },
    "19027": {
      "op": "CALLDATALOAD"
    },
    "19028": {
      "op": "PUSH2",
      "value": "0x4A5C"
    },
    "19031": {
      "op": "DUP2"
    },
    "19032": {
      "op": "PUSH2",
      "value": "0x43C2"
    },
    "19035": {
      "jump": "i",
      "op": "JUMP"
    },
    "19036": {
      "op": "JUMPDEST"
    },
    "19037": {
      "op": "SWAP2"
    },
    "19038": {
      "op": "POP"
    },
    "19039": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19041": {
      "op": "DUP4"
    },
    "19042": {
      "op": "ADD"
    },
    "19043": {
      "op": "CALLDATALOAD"
    },
    "19044": {
      "op": "PUSH2",
      "value": "0x4A6C"
    },
    "19047": {
      "op": "DUP2"
    },
    "19048": {
      "op": "PUSH2",
      "value": "0x47F3"
    },
    "19051": {
      "jump": "i",
      "op": "JUMP"
    },
    "19052": {
      "op": "JUMPDEST"
    },
    "19053": {
      "op": "DUP1"
    },
    "19054": {
      "op": "SWAP2"
    },
    "19055": {
      "op": "POP"
    },
    "19056": {
      "op": "POP"
    },
    "19057": {
      "op": "SWAP3"
    },
    "19058": {
      "op": "POP"
    },
    "19059": {
      "op": "SWAP3"
    },
    "19060": {
      "op": "SWAP1"
    },
    "19061": {
      "op": "POP"
    },
    "19062": {
      "jump": "o",
      "op": "JUMP"
    },
    "19063": {
      "op": "JUMPDEST"
    },
    "19064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19066": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19068": {
      "op": "DUP3"
    },
    "19069": {
      "op": "DUP5"
    },
    "19070": {
      "op": "SUB"
    },
    "19071": {
      "op": "SLT"
    },
    "19072": {
      "op": "ISZERO"
    },
    "19073": {
      "op": "PUSH2",
      "value": "0x4A89"
    },
    "19076": {
      "op": "JUMPI"
    },
    "19077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19079": {
      "op": "DUP1"
    },
    "19080": {
      "op": "REVERT"
    },
    "19081": {
      "op": "JUMPDEST"
    },
    "19082": {
      "op": "DUP2"
    },
    "19083": {
      "op": "CALLDATALOAD"
    },
    "19084": {
      "op": "PUSH2",
      "value": "0x24A3"
    },
    "19087": {
      "op": "DUP2"
    },
    "19088": {
      "op": "PUSH2",
      "value": "0x47F3"
    },
    "19091": {
      "jump": "i",
      "op": "JUMP"
    },
    "19092": {
      "op": "JUMPDEST"
    },
    "19093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19095": {
      "op": "DUP1"
    },
    "19096": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19098": {
      "op": "DUP4"
    },
    "19099": {
      "op": "DUP6"
    },
    "19100": {
      "op": "SUB"
    },
    "19101": {
      "op": "SLT"
    },
    "19102": {
      "op": "ISZERO"
    },
    "19103": {
      "op": "PUSH2",
      "value": "0x4AA7"
    },
    "19106": {
      "op": "JUMPI"
    },
    "19107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19109": {
      "op": "DUP1"
    },
    "19110": {
      "op": "REVERT"
    },
    "19111": {
      "op": "JUMPDEST"
    },
    "19112": {
      "op": "DUP3"
    },
    "19113": {
      "op": "CALLDATALOAD"
    },
    "19114": {
      "op": "PUSH2",
      "value": "0x4A5C"
    },
    "19117": {
      "op": "DUP2"
    },
    "19118": {
      "op": "PUSH2",
      "value": "0x47F3"
    },
    "19121": {
      "jump": "i",
      "op": "JUMP"
    },
    "19122": {
      "op": "JUMPDEST"
    },
    "19123": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19125": {
      "op": "DUP2"
    },
    "19126": {
      "op": "MSTORE"
    },
    "19127": {
      "op": "PUSH2",
      "value": "0x4AC9"
    },
    "19130": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19132": {
      "op": "DUP3"
    },
    "19133": {
      "op": "ADD"
    },
    "19134": {
      "op": "DUP4"
    },
    "19135": {
      "op": "MLOAD"
    },
    "19136": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "19141": {
      "op": "AND"
    },
    "19142": {
      "op": "SWAP1"
    },
    "19143": {
      "op": "MSTORE"
    },
    "19144": {
      "op": "JUMP"
    },
    "19145": {
      "op": "JUMPDEST"
    },
    "19146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19150": {
      "op": "DUP4"
    },
    "19151": {
      "op": "ADD"
    },
    "19152": {
      "op": "MLOAD"
    },
    "19153": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "19156": {
      "op": "DUP1"
    },
    "19157": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19159": {
      "op": "DUP6"
    },
    "19160": {
      "op": "ADD"
    },
    "19161": {
      "op": "MSTORE"
    },
    "19162": {
      "op": "PUSH2",
      "value": "0x4AE7"
    },
    "19165": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "19168": {
      "op": "DUP6"
    },
    "19169": {
      "op": "ADD"
    },
    "19170": {
      "op": "DUP4"
    },
    "19171": {
      "op": "PUSH2",
      "value": "0x456E"
    },
    "19174": {
      "jump": "i",
      "op": "JUMP"
    },
    "19175": {
      "op": "JUMPDEST"
    },
    "19176": {
      "op": "SWAP2"
    },
    "19177": {
      "op": "POP"
    },
    "19178": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19180": {
      "op": "DUP6"
    },
    "19181": {
      "op": "ADD"
    },
    "19182": {
      "op": "MLOAD"
    },
    "19183": {
      "op": "PUSH2",
      "value": "0x4B03"
    },
    "19186": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19188": {
      "op": "DUP7"
    },
    "19189": {
      "op": "ADD"
    },
    "19190": {
      "op": "DUP3"
    },
    "19191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19197": {
      "op": "SHL"
    },
    "19198": {
      "op": "SUB"
    },
    "19199": {
      "op": "AND"
    },
    "19200": {
      "op": "SWAP1"
    },
    "19201": {
      "op": "MSTORE"
    },
    "19202": {
      "op": "JUMP"
    },
    "19203": {
      "op": "JUMPDEST"
    },
    "19204": {
      "op": "POP"
    },
    "19205": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19207": {
      "op": "DUP6"
    },
    "19208": {
      "op": "ADD"
    },
    "19209": {
      "op": "MLOAD"
    },
    "19210": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "19213": {
      "op": "DUP2"
    },
    "19214": {
      "op": "AND"
    },
    "19215": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "19217": {
      "op": "DUP7"
    },
    "19218": {
      "op": "ADD"
    },
    "19219": {
      "op": "MSTORE"
    },
    "19220": {
      "op": "POP"
    },
    "19221": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "19223": {
      "op": "DUP6"
    },
    "19224": {
      "op": "ADD"
    },
    "19225": {
      "op": "MLOAD"
    },
    "19226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19228": {
      "op": "DUP6"
    },
    "19229": {
      "op": "ADD"
    },
    "19230": {
      "op": "MSTORE"
    },
    "19231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19233": {
      "op": "DUP6"
    },
    "19234": {
      "op": "ADD"
    },
    "19235": {
      "op": "MLOAD"
    },
    "19236": {
      "op": "PUSH2",
      "value": "0x4B31"
    },
    "19239": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "19241": {
      "op": "DUP7"
    },
    "19242": {
      "op": "ADD"
    },
    "19243": {
      "op": "DUP3"
    },
    "19244": {
      "op": "ISZERO"
    },
    "19245": {
      "op": "ISZERO"
    },
    "19246": {
      "op": "SWAP1"
    },
    "19247": {
      "op": "MSTORE"
    },
    "19248": {
      "op": "JUMP"
    },
    "19249": {
      "op": "JUMPDEST"
    },
    "19250": {
      "op": "POP"
    },
    "19251": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "19253": {
      "op": "DUP6"
    },
    "19254": {
      "op": "ADD"
    },
    "19255": {
      "op": "MLOAD"
    },
    "19256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19260": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "19262": {
      "op": "SHL"
    },
    "19263": {
      "op": "SUB"
    },
    "19264": {
      "op": "NOT"
    },
    "19265": {
      "op": "DUP2"
    },
    "19266": {
      "op": "AND"
    },
    "19267": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "19269": {
      "op": "DUP7"
    },
    "19270": {
      "op": "ADD"
    },
    "19271": {
      "op": "MSTORE"
    },
    "19272": {
      "op": "POP"
    },
    "19273": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "19275": {
      "op": "DUP6"
    },
    "19276": {
      "op": "ADD"
    },
    "19277": {
      "op": "MLOAD"
    },
    "19278": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "19281": {
      "op": "PUSH2",
      "value": "0x4B5F"
    },
    "19284": {
      "op": "DUP2"
    },
    "19285": {
      "op": "DUP8"
    },
    "19286": {
      "op": "ADD"
    },
    "19287": {
      "op": "DUP4"
    },
    "19288": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "19291": {
      "op": "AND"
    },
    "19292": {
      "op": "SWAP1"
    },
    "19293": {
      "op": "MSTORE"
    },
    "19294": {
      "op": "JUMP"
    },
    "19295": {
      "op": "JUMPDEST"
    },
    "19296": {
      "op": "DUP7"
    },
    "19297": {
      "op": "ADD"
    },
    "19298": {
      "op": "MLOAD"
    },
    "19299": {
      "op": "SWAP1"
    },
    "19300": {
      "op": "POP"
    },
    "19301": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "19304": {
      "op": "PUSH2",
      "value": "0x4B7B"
    },
    "19307": {
      "op": "DUP7"
    },
    "19308": {
      "op": "DUP3"
    },
    "19309": {
      "op": "ADD"
    },
    "19310": {
      "op": "DUP4"
    },
    "19311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19315": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "19317": {
      "op": "SHL"
    },
    "19318": {
      "op": "SUB"
    },
    "19319": {
      "op": "AND"
    },
    "19320": {
      "op": "SWAP1"
    },
    "19321": {
      "op": "MSTORE"
    },
    "19322": {
      "op": "JUMP"
    },
    "19323": {
      "op": "JUMPDEST"
    },
    "19324": {
      "op": "DUP7"
    },
    "19325": {
      "op": "ADD"
    },
    "19326": {
      "op": "MLOAD"
    },
    "19327": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "19330": {
      "op": "DUP7"
    },
    "19331": {
      "op": "DUP2"
    },
    "19332": {
      "op": "ADD"
    },
    "19333": {
      "op": "SWAP2"
    },
    "19334": {
      "op": "SWAP1"
    },
    "19335": {
      "op": "SWAP2"
    },
    "19336": {
      "op": "MSTORE"
    },
    "19337": {
      "op": "DUP7"
    },
    "19338": {
      "op": "ADD"
    },
    "19339": {
      "op": "MLOAD"
    },
    "19340": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "19343": {
      "op": "DUP1"
    },
    "19344": {
      "op": "DUP8"
    },
    "19345": {
      "op": "ADD"
    },
    "19346": {
      "op": "SWAP2"
    },
    "19347": {
      "op": "SWAP1"
    },
    "19348": {
      "op": "SWAP2"
    },
    "19349": {
      "op": "MSTORE"
    },
    "19350": {
      "op": "DUP7"
    },
    "19351": {
      "op": "ADD"
    },
    "19352": {
      "op": "MLOAD"
    },
    "19353": {
      "op": "SWAP1"
    },
    "19354": {
      "op": "POP"
    },
    "19355": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "19358": {
      "op": "PUSH2",
      "value": "0x4BB1"
    },
    "19361": {
      "op": "DUP2"
    },
    "19362": {
      "op": "DUP8"
    },
    "19363": {
      "op": "ADD"
    },
    "19364": {
      "op": "DUP4"
    },
    "19365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19369": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19371": {
      "op": "SHL"
    },
    "19372": {
      "op": "SUB"
    },
    "19373": {
      "op": "AND"
    },
    "19374": {
      "op": "SWAP1"
    },
    "19375": {
      "op": "MSTORE"
    },
    "19376": {
      "op": "JUMP"
    },
    "19377": {
      "op": "JUMPDEST"
    },
    "19378": {
      "op": "SWAP1"
    },
    "19379": {
      "op": "SWAP6"
    },
    "19380": {
      "op": "ADD"
    },
    "19381": {
      "op": "MLOAD"
    },
    "19382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19386": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19388": {
      "op": "SHL"
    },
    "19389": {
      "op": "SUB"
    },
    "19390": {
      "op": "AND"
    },
    "19391": {
      "op": "SWAP4"
    },
    "19392": {
      "op": "ADD"
    },
    "19393": {
      "op": "SWAP3"
    },
    "19394": {
      "op": "SWAP1"
    },
    "19395": {
      "op": "SWAP3"
    },
    "19396": {
      "op": "MSTORE"
    },
    "19397": {
      "op": "POP"
    },
    "19398": {
      "op": "SWAP2"
    },
    "19399": {
      "op": "SWAP1"
    },
    "19400": {
      "op": "POP"
    },
    "19401": {
      "jump": "o",
      "op": "JUMP"
    },
    "19402": {
      "op": "JUMPDEST"
    },
    "19403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19405": {
      "op": "DUP1"
    },
    "19406": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19408": {
      "op": "DUP4"
    },
    "19409": {
      "op": "DUP6"
    },
    "19410": {
      "op": "SUB"
    },
    "19411": {
      "op": "SLT"
    },
    "19412": {
      "op": "ISZERO"
    },
    "19413": {
      "op": "PUSH2",
      "value": "0x4BDD"
    },
    "19416": {
      "op": "JUMPI"
    },
    "19417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19419": {
      "op": "DUP1"
    },
    "19420": {
      "op": "REVERT"
    },
    "19421": {
      "op": "JUMPDEST"
    },
    "19422": {
      "op": "DUP3"
    },
    "19423": {
      "op": "CALLDATALOAD"
    },
    "19424": {
      "op": "PUSH2",
      "value": "0x4BE8"
    },
    "19427": {
      "op": "DUP2"
    },
    "19428": {
      "op": "PUSH2",
      "value": "0x43C2"
    },
    "19431": {
      "jump": "i",
      "op": "JUMP"
    },
    "19432": {
      "op": "JUMPDEST"
    },
    "19433": {
      "op": "SWAP2"
    },
    "19434": {
      "op": "POP"
    },
    "19435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19437": {
      "op": "DUP4"
    },
    "19438": {
      "op": "ADD"
    },
    "19439": {
      "op": "CALLDATALOAD"
    },
    "19440": {
      "op": "PUSH2",
      "value": "0x4A6C"
    },
    "19443": {
      "op": "DUP2"
    },
    "19444": {
      "op": "PUSH2",
      "value": "0x4436"
    },
    "19447": {
      "jump": "i",
      "op": "JUMP"
    },
    "19448": {
      "op": "JUMPDEST"
    },
    "19449": {
      "op": "DUP1"
    },
    "19450": {
      "op": "CALLDATALOAD"
    },
    "19451": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "19454": {
      "op": "DUP2"
    },
    "19455": {
      "op": "AND"
    },
    "19456": {
      "op": "DUP2"
    },
    "19457": {
      "op": "EQ"
    },
    "19458": {
      "op": "PUSH2",
      "value": "0x45BE"
    },
    "19461": {
      "op": "JUMPI"
    },
    "19462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19464": {
      "op": "DUP1"
    },
    "19465": {
      "op": "REVERT"
    },
    "19466": {
      "op": "JUMPDEST"
    },
    "19467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19469": {
      "op": "DUP1"
    },
    "19470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19472": {
      "op": "DUP1"
    },
    "19473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19475": {
      "op": "DUP1"
    },
    "19476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19478": {
      "op": "DUP1"
    },
    "19479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19481": {
      "op": "DUP1"
    },
    "19482": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "19485": {
      "op": "DUP12"
    },
    "19486": {
      "op": "DUP14"
    },
    "19487": {
      "op": "SUB"
    },
    "19488": {
      "op": "SLT"
    },
    "19489": {
      "op": "ISZERO"
    },
    "19490": {
      "op": "PUSH2",
      "value": "0x4C2A"
    },
    "19493": {
      "op": "JUMPI"
    },
    "19494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19496": {
      "op": "DUP1"
    },
    "19497": {
      "op": "REVERT"
    },
    "19498": {
      "op": "JUMPDEST"
    },
    "19499": {
      "op": "PUSH2",
      "value": "0x4C33"
    },
    "19502": {
      "op": "DUP12"
    },
    "19503": {
      "op": "PUSH2",
      "value": "0x4BF8"
    },
    "19506": {
      "jump": "i",
      "op": "JUMP"
    },
    "19507": {
      "op": "JUMPDEST"
    },
    "19508": {
      "op": "SWAP10"
    },
    "19509": {
      "op": "POP"
    },
    "19510": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19512": {
      "op": "DUP12"
    },
    "19513": {
      "op": "ADD"
    },
    "19514": {
      "op": "CALLDATALOAD"
    },
    "19515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19519": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19521": {
      "op": "SHL"
    },
    "19522": {
      "op": "SUB"
    },
    "19523": {
      "op": "DUP2"
    },
    "19524": {
      "op": "GT"
    },
    "19525": {
      "op": "ISZERO"
    },
    "19526": {
      "op": "PUSH2",
      "value": "0x4C4E"
    },
    "19529": {
      "op": "JUMPI"
    },
    "19530": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19532": {
      "op": "DUP1"
    },
    "19533": {
      "op": "REVERT"
    },
    "19534": {
      "op": "JUMPDEST"
    },
    "19535": {
      "op": "PUSH2",
      "value": "0x4C5A"
    },
    "19538": {
      "op": "DUP14"
    },
    "19539": {
      "op": "DUP3"
    },
    "19540": {
      "op": "DUP15"
    },
    "19541": {
      "op": "ADD"
    },
    "19542": {
      "op": "PUSH2",
      "value": "0x44A3"
    },
    "19545": {
      "jump": "i",
      "op": "JUMP"
    },
    "19546": {
      "op": "JUMPDEST"
    },
    "19547": {
      "op": "SWAP10"
    },
    "19548": {
      "op": "POP"
    },
    "19549": {
      "op": "POP"
    },
    "19550": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19552": {
      "op": "DUP12"
    },
    "19553": {
      "op": "ADD"
    },
    "19554": {
      "op": "CALLDATALOAD"
    },
    "19555": {
      "op": "SWAP8"
    },
    "19556": {
      "op": "POP"
    },
    "19557": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19559": {
      "op": "DUP12"
    },
    "19560": {
      "op": "ADD"
    },
    "19561": {
      "op": "CALLDATALOAD"
    },
    "19562": {
      "op": "PUSH2",
      "value": "0x4C72"
    },
    "19565": {
      "op": "DUP2"
    },
    "19566": {
      "op": "PUSH2",
      "value": "0x4436"
    },
    "19569": {
      "jump": "i",
      "op": "JUMP"
    },
    "19570": {
      "op": "JUMPDEST"
    },
    "19571": {
      "op": "SWAP7"
    },
    "19572": {
      "op": "POP"
    },
    "19573": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "19575": {
      "op": "DUP12"
    },
    "19576": {
      "op": "ADD"
    },
    "19577": {
      "op": "CALLDATALOAD"
    },
    "19578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19582": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "19584": {
      "op": "SHL"
    },
    "19585": {
      "op": "SUB"
    },
    "19586": {
      "op": "DUP2"
    },
    "19587": {
      "op": "AND"
    },
    "19588": {
      "op": "DUP2"
    },
    "19589": {
      "op": "EQ"
    },
    "19590": {
      "op": "PUSH2",
      "value": "0x4C8E"
    },
    "19593": {
      "op": "JUMPI"
    },
    "19594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19596": {
      "op": "DUP1"
    },
    "19597": {
      "op": "REVERT"
    },
    "19598": {
      "op": "JUMPDEST"
    },
    "19599": {
      "op": "SWAP6"
    },
    "19600": {
      "op": "POP"
    },
    "19601": {
      "op": "PUSH2",
      "value": "0x4C9C"
    },
    "19604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19606": {
      "op": "DUP13"
    },
    "19607": {
      "op": "ADD"
    },
    "19608": {
      "op": "PUSH2",
      "value": "0x4BF8"
    },
    "19611": {
      "jump": "i",
      "op": "JUMP"
    },
    "19612": {
      "op": "JUMPDEST"
    },
    "19613": {
      "op": "SWAP5"
    },
    "19614": {
      "op": "POP"
    },
    "19615": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "19617": {
      "op": "DUP12"
    },
    "19618": {
      "op": "ADD"
    },
    "19619": {
      "op": "CALLDATALOAD"
    },
    "19620": {
      "op": "SWAP4"
    },
    "19621": {
      "op": "POP"
    },
    "19622": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "19624": {
      "op": "DUP12"
    },
    "19625": {
      "op": "ADD"
    },
    "19626": {
      "op": "CALLDATALOAD"
    },
    "19627": {
      "op": "SWAP3"
    },
    "19628": {
      "op": "POP"
    },
    "19629": {
      "op": "PUSH2",
      "value": "0x4CB9"
    },
    "19632": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "19635": {
      "op": "DUP13"
    },
    "19636": {
      "op": "ADD"
    },
    "19637": {
      "op": "PUSH2",
      "value": "0x4975"
    },
    "19640": {
      "jump": "i",
      "op": "JUMP"
    },
    "19641": {
      "op": "JUMPDEST"
    },
    "19642": {
      "op": "SWAP2"
    },
    "19643": {
      "op": "POP"
    },
    "19644": {
      "op": "PUSH2",
      "value": "0x4CC8"
    },
    "19647": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "19650": {
      "op": "DUP13"
    },
    "19651": {
      "op": "ADD"
    },
    "19652": {
      "op": "PUSH2",
      "value": "0x4975"
    },
    "19655": {
      "jump": "i",
      "op": "JUMP"
    },
    "19656": {
      "op": "JUMPDEST"
    },
    "19657": {
      "op": "SWAP1"
    },
    "19658": {
      "op": "POP"
    },
    "19659": {
      "op": "SWAP3"
    },
    "19660": {
      "op": "SWAP6"
    },
    "19661": {
      "op": "SWAP9"
    },
    "19662": {
      "op": "SWAP12"
    },
    "19663": {
      "op": "SWAP2"
    },
    "19664": {
      "op": "SWAP5"
    },
    "19665": {
      "op": "SWAP8"
    },
    "19666": {
      "op": "SWAP11"
    },
    "19667": {
      "op": "POP"
    },
    "19668": {
      "op": "SWAP3"
    },
    "19669": {
      "op": "SWAP6"
    },
    "19670": {
      "op": "SWAP9"
    },
    "19671": {
      "op": "POP"
    },
    "19672": {
      "jump": "o",
      "op": "JUMP"
    },
    "19673": {
      "op": "JUMPDEST"
    },
    "19674": {
      "op": "DUP2"
    },
    "19675": {
      "op": "MLOAD"
    },
    "19676": {
      "op": "DUP2"
    },
    "19677": {
      "op": "MSTORE"
    },
    "19678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19680": {
      "op": "DUP1"
    },
    "19681": {
      "op": "DUP4"
    },
    "19682": {
      "op": "ADD"
    },
    "19683": {
      "op": "MLOAD"
    },
    "19684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19688": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19690": {
      "op": "SHL"
    },
    "19691": {
      "op": "SUB"
    },
    "19692": {
      "op": "AND"
    },
    "19693": {
      "op": "SWAP1"
    },
    "19694": {
      "op": "DUP3"
    },
    "19695": {
      "op": "ADD"
    },
    "19696": {
      "op": "MSTORE"
    },
    "19697": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19699": {
      "op": "DUP1"
    },
    "19700": {
      "op": "DUP4"
    },
    "19701": {
      "op": "ADD"
    },
    "19702": {
      "op": "MLOAD"
    },
    "19703": {
      "op": "SWAP1"
    },
    "19704": {
      "op": "DUP3"
    },
    "19705": {
      "op": "ADD"
    },
    "19706": {
      "op": "MSTORE"
    },
    "19707": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19709": {
      "op": "DUP1"
    },
    "19710": {
      "op": "DUP4"
    },
    "19711": {
      "op": "ADD"
    },
    "19712": {
      "op": "MLOAD"
    },
    "19713": {
      "op": "SWAP1"
    },
    "19714": {
      "op": "DUP3"
    },
    "19715": {
      "op": "ADD"
    },
    "19716": {
      "op": "MSTORE"
    },
    "19717": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "19719": {
      "op": "DUP2"
    },
    "19720": {
      "op": "ADD"
    },
    "19721": {
      "op": "PUSH2",
      "value": "0x85B"
    },
    "19724": {
      "op": "JUMP"
    },
    "19725": {
      "op": "JUMPDEST"
    },
    "19726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19728": {
      "op": "DUP1"
    },
    "19729": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19731": {
      "op": "DUP4"
    },
    "19732": {
      "op": "DUP6"
    },
    "19733": {
      "op": "SUB"
    },
    "19734": {
      "op": "SLT"
    },
    "19735": {
      "op": "ISZERO"
    },
    "19736": {
      "op": "PUSH2",
      "value": "0x4D20"
    },
    "19739": {
      "op": "JUMPI"
    },
    "19740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19742": {
      "op": "DUP1"
    },
    "19743": {
      "op": "REVERT"
    },
    "19744": {
      "op": "JUMPDEST"
    },
    "19745": {
      "op": "DUP3"
    },
    "19746": {
      "op": "CALLDATALOAD"
    },
    "19747": {
      "op": "PUSH2",
      "value": "0x4D2B"
    },
    "19750": {
      "op": "DUP2"
    },
    "19751": {
      "op": "PUSH2",
      "value": "0x47F3"
    },
    "19754": {
      "jump": "i",
      "op": "JUMP"
    },
    "19755": {
      "op": "JUMPDEST"
    },
    "19756": {
      "op": "SWAP2"
    },
    "19757": {
      "op": "POP"
    },
    "19758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19760": {
      "op": "DUP4"
    },
    "19761": {
      "op": "ADD"
    },
    "19762": {
      "op": "CALLDATALOAD"
    },
    "19763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19767": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "19769": {
      "op": "SHL"
    },
    "19770": {
      "op": "SUB"
    },
    "19771": {
      "op": "NOT"
    },
    "19772": {
      "op": "DUP2"
    },
    "19773": {
      "op": "AND"
    },
    "19774": {
      "op": "DUP2"
    },
    "19775": {
      "op": "EQ"
    },
    "19776": {
      "op": "PUSH2",
      "value": "0x4A6C"
    },
    "19779": {
      "op": "JUMPI"
    },
    "19780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19782": {
      "op": "DUP1"
    },
    "19783": {
      "op": "REVERT"
    },
    "19784": {
      "op": "JUMPDEST"
    },
    "19785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19787": {
      "op": "DUP1"
    },
    "19788": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19790": {
      "op": "DUP4"
    },
    "19791": {
      "op": "DUP6"
    },
    "19792": {
      "op": "SUB"
    },
    "19793": {
      "op": "SLT"
    },
    "19794": {
      "op": "ISZERO"
    },
    "19795": {
      "op": "PUSH2",
      "value": "0x4D5B"
    },
    "19798": {
      "op": "JUMPI"
    },
    "19799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19801": {
      "op": "DUP1"
    },
    "19802": {
      "op": "REVERT"
    },
    "19803": {
      "op": "JUMPDEST"
    },
    "19804": {
      "op": "DUP3"
    },
    "19805": {
      "op": "CALLDATALOAD"
    },
    "19806": {
      "op": "PUSH2",
      "value": "0x4D66"
    },
    "19809": {
      "op": "DUP2"
    },
    "19810": {
      "op": "PUSH2",
      "value": "0x43C2"
    },
    "19813": {
      "jump": "i",
      "op": "JUMP"
    },
    "19814": {
      "op": "JUMPDEST"
    },
    "19815": {
      "op": "SWAP2"
    },
    "19816": {
      "op": "POP"
    },
    "19817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19819": {
      "op": "DUP4"
    },
    "19820": {
      "op": "ADD"
    },
    "19821": {
      "op": "CALLDATALOAD"
    },
    "19822": {
      "op": "PUSH2",
      "value": "0x4A6C"
    },
    "19825": {
      "op": "DUP2"
    },
    "19826": {
      "op": "PUSH2",
      "value": "0x43C2"
    },
    "19829": {
      "jump": "i",
      "op": "JUMP"
    },
    "19830": {
      "op": "JUMPDEST"
    },
    "19831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19833": {
      "op": "DUP1"
    },
    "19834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19836": {
      "op": "DUP1"
    },
    "19837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19841": {
      "op": "DUP7"
    },
    "19842": {
      "op": "DUP9"
    },
    "19843": {
      "op": "SUB"
    },
    "19844": {
      "op": "SLT"
    },
    "19845": {
      "op": "ISZERO"
    },
    "19846": {
      "op": "PUSH2",
      "value": "0x4D8E"
    },
    "19849": {
      "op": "JUMPI"
    },
    "19850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19852": {
      "op": "DUP1"
    },
    "19853": {
      "op": "REVERT"
    },
    "19854": {
      "op": "JUMPDEST"
    },
    "19855": {
      "op": "DUP6"
    },
    "19856": {
      "op": "CALLDATALOAD"
    },
    "19857": {
      "op": "PUSH2",
      "value": "0x4D99"
    },
    "19860": {
      "op": "DUP2"
    },
    "19861": {
      "op": "PUSH2",
      "value": "0x43C2"
    },
    "19864": {
      "jump": "i",
      "op": "JUMP"
    },
    "19865": {
      "op": "JUMPDEST"
    },
    "19866": {
      "op": "SWAP5"
    },
    "19867": {
      "op": "POP"
    },
    "19868": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19870": {
      "op": "DUP7"
    },
    "19871": {
      "op": "ADD"
    },
    "19872": {
      "op": "CALLDATALOAD"
    },
    "19873": {
      "op": "PUSH2",
      "value": "0x4DA9"
    },
    "19876": {
      "op": "DUP2"
    },
    "19877": {
      "op": "PUSH2",
      "value": "0x43C2"
    },
    "19880": {
      "jump": "i",
      "op": "JUMP"
    },
    "19881": {
      "op": "JUMPDEST"
    },
    "19882": {
      "op": "SWAP4"
    },
    "19883": {
      "op": "POP"
    },
    "19884": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19886": {
      "op": "DUP7"
    },
    "19887": {
      "op": "ADD"
    },
    "19888": {
      "op": "CALLDATALOAD"
    },
    "19889": {
      "op": "SWAP3"
    },
    "19890": {
      "op": "POP"
    },
    "19891": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19893": {
      "op": "DUP7"
    },
    "19894": {
      "op": "ADD"
    },
    "19895": {
      "op": "CALLDATALOAD"
    },
    "19896": {
      "op": "SWAP2"
    },
    "19897": {
      "op": "POP"
    },
    "19898": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "19900": {
      "op": "DUP7"
    },
    "19901": {
      "op": "ADD"
    },
    "19902": {
      "op": "CALLDATALOAD"
    },
    "19903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19907": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19909": {
      "op": "SHL"
    },
    "19910": {
      "op": "SUB"
    },
    "19911": {
      "op": "DUP2"
    },
    "19912": {
      "op": "GT"
    },
    "19913": {
      "op": "ISZERO"
    },
    "19914": {
      "op": "PUSH2",
      "value": "0x4DD2"
    },
    "19917": {
      "op": "JUMPI"
    },
    "19918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19920": {
      "op": "DUP1"
    },
    "19921": {
      "op": "REVERT"
    },
    "19922": {
      "op": "JUMPDEST"
    },
    "19923": {
      "op": "PUSH2",
      "value": "0x47A0"
    },
    "19926": {
      "op": "DUP9"
    },
    "19927": {
      "op": "DUP3"
    },
    "19928": {
      "op": "DUP10"
    },
    "19929": {
      "op": "ADD"
    },
    "19930": {
      "op": "PUSH2",
      "value": "0x44A3"
    },
    "19933": {
      "jump": "i",
      "op": "JUMP"
    },
    "19934": {
      "op": "JUMPDEST"
    },
    "19935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19937": {
      "op": "DUP1"
    },
    "19938": {
      "op": "DUP3"
    },
    "19939": {
      "op": "MSTORE"
    },
    "19940": {
      "op": "DUP2"
    },
    "19941": {
      "op": "DUP2"
    },
    "19942": {
      "op": "ADD"
    },
    "19943": {
      "op": "MSTORE"
    },
    "19944": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "19977": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19979": {
      "op": "DUP3"
    },
    "19980": {
      "op": "ADD"
    },
    "19981": {
      "op": "MSTORE"
    },
    "19982": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19984": {
      "op": "ADD"
    },
    "19985": {
      "op": "SWAP1"
    },
    "19986": {
      "jump": "o",
      "op": "JUMP"
    },
    "19987": {
      "op": "JUMPDEST"
    },
    "19988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19990": {
      "op": "DUP2"
    },
    "19991": {
      "op": "DUP2"
    },
    "19992": {
      "op": "SHR"
    },
    "19993": {
      "op": "SWAP1"
    },
    "19994": {
      "op": "DUP3"
    },
    "19995": {
      "op": "AND"
    },
    "19996": {
      "op": "DUP1"
    },
    "19997": {
      "op": "PUSH2",
      "value": "0x4E27"
    },
    "20000": {
      "op": "JUMPI"
    },
    "20001": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "20003": {
      "op": "DUP3"
    },
    "20004": {
      "op": "AND"
    },
    "20005": {
      "op": "SWAP2"
    },
    "20006": {
      "op": "POP"
    },
    "20007": {
      "op": "JUMPDEST"
    },
    "20008": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20010": {
      "op": "DUP3"
    },
    "20011": {
      "op": "LT"
    },
    "20012": {
      "op": "DUP2"
    },
    "20013": {
      "op": "SUB"
    },
    "20014": {
      "op": "PUSH2",
      "value": "0xDD2"
    },
    "20017": {
      "op": "JUMPI"
    },
    "20018": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "20023": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "20025": {
      "op": "SHL"
    },
    "20026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20028": {
      "op": "MSTORE"
    },
    "20029": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "20031": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "20033": {
      "op": "MSTORE"
    },
    "20034": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "20036": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20038": {
      "op": "REVERT"
    },
    "20039": {
      "op": "JUMPDEST"
    },
    "20040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20046": {
      "op": "SHL"
    },
    "20047": {
      "op": "SUB"
    },
    "20048": {
      "op": "DUP5"
    },
    "20049": {
      "op": "DUP2"
    },
    "20050": {
      "op": "AND"
    },
    "20051": {
      "op": "DUP3"
    },
    "20052": {
      "op": "MSTORE"
    },
    "20053": {
      "op": "DUP4"
    },
    "20054": {
      "op": "AND"
    },
    "20055": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20057": {
      "op": "DUP3"
    },
    "20058": {
      "op": "ADD"
    },
    "20059": {
      "op": "MSTORE"
    },
    "20060": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20062": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20064": {
      "op": "DUP3"
    },
    "20065": {
      "op": "ADD"
    },
    "20066": {
      "op": "DUP2"
    },
    "20067": {
      "op": "SWAP1"
    },
    "20068": {
      "op": "MSTORE"
    },
    "20069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20071": {
      "op": "SWAP1"
    },
    "20072": {
      "op": "PUSH2",
      "value": "0x4E73"
    },
    "20075": {
      "op": "SWAP1"
    },
    "20076": {
      "op": "DUP4"
    },
    "20077": {
      "op": "ADD"
    },
    "20078": {
      "op": "DUP5"
    },
    "20079": {
      "op": "PUSH2",
      "value": "0x456E"
    },
    "20082": {
      "jump": "i",
      "op": "JUMP"
    },
    "20083": {
      "op": "JUMPDEST"
    },
    "20084": {
      "op": "SWAP6"
    },
    "20085": {
      "op": "SWAP5"
    },
    "20086": {
      "op": "POP"
    },
    "20087": {
      "op": "POP"
    },
    "20088": {
      "op": "POP"
    },
    "20089": {
      "op": "POP"
    },
    "20090": {
      "op": "POP"
    },
    "20091": {
      "jump": "o",
      "op": "JUMP"
    },
    "20092": {
      "op": "JUMPDEST"
    },
    "20093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20095": {
      "op": "DUP4"
    },
    "20096": {
      "op": "MLOAD"
    },
    "20097": {
      "op": "PUSH2",
      "value": "0x4E8E"
    },
    "20100": {
      "op": "DUP2"
    },
    "20101": {
      "op": "DUP5"
    },
    "20102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20104": {
      "op": "DUP9"
    },
    "20105": {
      "op": "ADD"
    },
    "20106": {
      "op": "PUSH2",
      "value": "0x454A"
    },
    "20109": {
      "jump": "i",
      "op": "JUMP"
    },
    "20110": {
      "op": "JUMPDEST"
    },
    "20111": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20113": {
      "op": "SWAP4"
    },
    "20114": {
      "op": "SWAP1"
    },
    "20115": {
      "op": "SWAP4"
    },
    "20116": {
      "op": "SHL"
    },
    "20117": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "20130": {
      "op": "NOT"
    },
    "20131": {
      "op": "AND"
    },
    "20132": {
      "op": "SWAP2"
    },
    "20133": {
      "op": "SWAP1"
    },
    "20134": {
      "op": "SWAP3"
    },
    "20135": {
      "op": "ADD"
    },
    "20136": {
      "op": "SWAP1"
    },
    "20137": {
      "op": "DUP2"
    },
    "20138": {
      "op": "MSTORE"
    },
    "20139": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "20141": {
      "op": "ADD"
    },
    "20142": {
      "op": "SWAP3"
    },
    "20143": {
      "op": "SWAP2"
    },
    "20144": {
      "op": "POP"
    },
    "20145": {
      "op": "POP"
    },
    "20146": {
      "jump": "o",
      "op": "JUMP"
    },
    "20147": {
      "op": "JUMPDEST"
    },
    "20148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20150": {
      "op": "DUP3"
    },
    "20151": {
      "op": "MLOAD"
    },
    "20152": {
      "op": "PUSH2",
      "value": "0x4EC5"
    },
    "20155": {
      "op": "DUP2"
    },
    "20156": {
      "op": "DUP5"
    },
    "20157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20159": {
      "op": "DUP8"
    },
    "20160": {
      "op": "ADD"
    },
    "20161": {
      "op": "PUSH2",
      "value": "0x454A"
    },
    "20164": {
      "jump": "i",
      "op": "JUMP"
    },
    "20165": {
      "op": "JUMPDEST"
    },
    "20166": {
      "op": "SWAP2"
    },
    "20167": {
      "op": "SWAP1"
    },
    "20168": {
      "op": "SWAP2"
    },
    "20169": {
      "op": "ADD"
    },
    "20170": {
      "op": "SWAP3"
    },
    "20171": {
      "op": "SWAP2"
    },
    "20172": {
      "op": "POP"
    },
    "20173": {
      "op": "POP"
    },
    "20174": {
      "jump": "o",
      "op": "JUMP"
    },
    "20175": {
      "op": "JUMPDEST"
    },
    "20176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20178": {
      "op": "DUP1"
    },
    "20179": {
      "op": "DUP3"
    },
    "20180": {
      "op": "MSTORE"
    },
    "20181": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "20183": {
      "op": "SWAP1"
    },
    "20184": {
      "op": "DUP3"
    },
    "20185": {
      "op": "ADD"
    },
    "20186": {
      "op": "MSTORE"
    },
    "20187": {
      "op": "PUSH8",
      "value": "0x85C1C9BDA9958DD"
    },
    "20196": {
      "op": "PUSH1",
      "value": "0xC2"
    },
    "20198": {
      "op": "SHL"
    },
    "20199": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20201": {
      "op": "DUP3"
    },
    "20202": {
      "op": "ADD"
    },
    "20203": {
      "op": "MSTORE"
    },
    "20204": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20206": {
      "op": "ADD"
    },
    "20207": {
      "op": "SWAP1"
    },
    "20208": {
      "jump": "o",
      "op": "JUMP"
    },
    "20209": {
      "op": "JUMPDEST"
    },
    "20210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20212": {
      "op": "DUP4"
    },
    "20213": {
      "op": "MLOAD"
    },
    "20214": {
      "op": "PUSH2",
      "value": "0x4F03"
    },
    "20217": {
      "op": "DUP2"
    },
    "20218": {
      "op": "DUP5"
    },
    "20219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20221": {
      "op": "DUP9"
    },
    "20222": {
      "op": "ADD"
    },
    "20223": {
      "op": "PUSH2",
      "value": "0x454A"
    },
    "20226": {
      "jump": "i",
      "op": "JUMP"
    },
    "20227": {
      "op": "JUMPDEST"
    },
    "20228": {
      "op": "DUP4"
    },
    "20229": {
      "op": "MLOAD"
    },
    "20230": {
      "op": "SWAP1"
    },
    "20231": {
      "op": "DUP4"
    },
    "20232": {
      "op": "ADD"
    },
    "20233": {
      "op": "SWAP1"
    },
    "20234": {
      "op": "PUSH2",
      "value": "0x4F17"
    },
    "20237": {
      "op": "DUP2"
    },
    "20238": {
      "op": "DUP4"
    },
    "20239": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20241": {
      "op": "DUP9"
    },
    "20242": {
      "op": "ADD"
    },
    "20243": {
      "op": "PUSH2",
      "value": "0x454A"
    },
    "20246": {
      "jump": "i",
      "op": "JUMP"
    },
    "20247": {
      "op": "JUMPDEST"
    },
    "20248": {
      "op": "PUSH5",
      "value": "0x173539B7B7"
    },
    "20254": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "20256": {
      "op": "SHL"
    },
    "20257": {
      "op": "SWAP2"
    },
    "20258": {
      "op": "ADD"
    },
    "20259": {
      "op": "SWAP1"
    },
    "20260": {
      "op": "DUP2"
    },
    "20261": {
      "op": "MSTORE"
    },
    "20262": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "20264": {
      "op": "ADD"
    },
    "20265": {
      "op": "SWAP5"
    },
    "20266": {
      "op": "SWAP4"
    },
    "20267": {
      "op": "POP"
    },
    "20268": {
      "op": "POP"
    },
    "20269": {
      "op": "POP"
    },
    "20270": {
      "op": "POP"
    },
    "20271": {
      "jump": "o",
      "op": "JUMP"
    },
    "20272": {
      "op": "JUMPDEST"
    },
    "20273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20277": {
      "op": "DUP3"
    },
    "20278": {
      "op": "DUP5"
    },
    "20279": {
      "op": "SUB"
    },
    "20280": {
      "op": "SLT"
    },
    "20281": {
      "op": "ISZERO"
    },
    "20282": {
      "op": "PUSH2",
      "value": "0x4F42"
    },
    "20285": {
      "op": "JUMPI"
    },
    "20286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20288": {
      "op": "DUP1"
    },
    "20289": {
      "op": "REVERT"
    },
    "20290": {
      "op": "JUMPDEST"
    },
    "20291": {
      "op": "DUP2"
    },
    "20292": {
      "op": "MLOAD"
    },
    "20293": {
      "op": "PUSH2",
      "value": "0x24A3"
    },
    "20296": {
      "op": "DUP2"
    },
    "20297": {
      "op": "PUSH2",
      "value": "0x43C2"
    },
    "20300": {
      "jump": "i",
      "op": "JUMP"
    },
    "20301": {
      "op": "JUMPDEST"
    },
    "20302": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20304": {
      "op": "DUP3"
    },
    "20305": {
      "op": "GT"
    },
    "20306": {
      "op": "ISZERO"
    },
    "20307": {
      "op": "PUSH2",
      "value": "0x4116"
    },
    "20310": {
      "op": "JUMPI"
    },
    "20311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20313": {
      "op": "DUP2"
    },
    "20314": {
      "op": "DUP2"
    },
    "20315": {
      "op": "MSTORE"
    },
    "20316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20318": {
      "op": "DUP2"
    },
    "20319": {
      "op": "KECCAK256"
    },
    "20320": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20322": {
      "op": "DUP6"
    },
    "20323": {
      "op": "ADD"
    },
    "20324": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "20326": {
      "op": "SHR"
    },
    "20327": {
      "op": "DUP2"
    },
    "20328": {
      "op": "ADD"
    },
    "20329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20331": {
      "op": "DUP7"
    },
    "20332": {
      "op": "LT"
    },
    "20333": {
      "op": "ISZERO"
    },
    "20334": {
      "op": "PUSH2",
      "value": "0x4F74"
    },
    "20337": {
      "op": "JUMPI"
    },
    "20338": {
      "op": "POP"
    },
    "20339": {
      "op": "DUP1"
    },
    "20340": {
      "op": "JUMPDEST"
    },
    "20341": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20343": {
      "op": "DUP6"
    },
    "20344": {
      "op": "ADD"
    },
    "20345": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "20347": {
      "op": "SHR"
    },
    "20348": {
      "op": "DUP3"
    },
    "20349": {
      "op": "ADD"
    },
    "20350": {
      "op": "SWAP2"
    },
    "20351": {
      "op": "POP"
    },
    "20352": {
      "op": "JUMPDEST"
    },
    "20353": {
      "op": "DUP2"
    },
    "20354": {
      "op": "DUP2"
    },
    "20355": {
      "op": "LT"
    },
    "20356": {
      "op": "ISZERO"
    },
    "20357": {
      "op": "PUSH2",
      "value": "0x2BF9"
    },
    "20360": {
      "op": "JUMPI"
    },
    "20361": {
      "op": "DUP3"
    },
    "20362": {
      "op": "DUP2"
    },
    "20363": {
      "op": "SSTORE"
    },
    "20364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20366": {
      "op": "ADD"
    },
    "20367": {
      "op": "PUSH2",
      "value": "0x4F80"
    },
    "20370": {
      "op": "JUMP"
    },
    "20371": {
      "op": "JUMPDEST"
    },
    "20372": {
      "op": "DUP2"
    },
    "20373": {
      "op": "MLOAD"
    },
    "20374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20378": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20380": {
      "op": "SHL"
    },
    "20381": {
      "op": "SUB"
    },
    "20382": {
      "op": "DUP2"
    },
    "20383": {
      "op": "GT"
    },
    "20384": {
      "op": "ISZERO"
    },
    "20385": {
      "op": "PUSH2",
      "value": "0x4FAC"
    },
    "20388": {
      "op": "JUMPI"
    },
    "20389": {
      "op": "PUSH2",
      "value": "0x4FAC"
    },
    "20392": {
      "op": "PUSH2",
      "value": "0x4461"
    },
    "20395": {
      "jump": "i",
      "op": "JUMP"
    },
    "20396": {
      "op": "JUMPDEST"
    },
    "20397": {
      "op": "PUSH2",
      "value": "0x4FC0"
    },
    "20400": {
      "op": "DUP2"
    },
    "20401": {
      "op": "PUSH2",
      "value": "0x4FBA"
    },
    "20404": {
      "op": "DUP5"
    },
    "20405": {
      "op": "SLOAD"
    },
    "20406": {
      "op": "PUSH2",
      "value": "0x4E13"
    },
    "20409": {
      "jump": "i",
      "op": "JUMP"
    },
    "20410": {
      "op": "JUMPDEST"
    },
    "20411": {
      "op": "DUP5"
    },
    "20412": {
      "op": "PUSH2",
      "value": "0x4F4D"
    },
    "20415": {
      "jump": "i",
      "op": "JUMP"
    },
    "20416": {
      "op": "JUMPDEST"
    },
    "20417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20419": {
      "op": "DUP1"
    },
    "20420": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20422": {
      "op": "DUP4"
    },
    "20423": {
      "op": "GT"
    },
    "20424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20426": {
      "op": "DUP2"
    },
    "20427": {
      "op": "EQ"
    },
    "20428": {
      "op": "PUSH2",
      "value": "0x4FF5"
    },
    "20431": {
      "op": "JUMPI"
    },
    "20432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20434": {
      "op": "DUP5"
    },
    "20435": {
      "op": "ISZERO"
    },
    "20436": {
      "op": "PUSH2",
      "value": "0x4FDD"
    },
    "20439": {
      "op": "JUMPI"
    },
    "20440": {
      "op": "POP"
    },
    "20441": {
      "op": "DUP6"
    },
    "20442": {
      "op": "DUP4"
    },
    "20443": {
      "op": "ADD"
    },
    "20444": {
      "op": "MLOAD"
    },
    "20445": {
      "op": "JUMPDEST"
    },
    "20446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20448": {
      "op": "NOT"
    },
    "20449": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "20451": {
      "op": "DUP7"
    },
    "20452": {
      "op": "SWAP1"
    },
    "20453": {
      "op": "SHL"
    },
    "20454": {
      "op": "SHR"
    },
    "20455": {
      "op": "NOT"
    },
    "20456": {
      "op": "AND"
    },
    "20457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20459": {
      "op": "DUP6"
    },
    "20460": {
      "op": "SWAP1"
    },
    "20461": {
      "op": "SHL"
    },
    "20462": {
      "op": "OR"
    },
    "20463": {
      "op": "DUP6"
    },
    "20464": {
      "op": "SSTORE"
    },
    "20465": {
      "op": "PUSH2",
      "value": "0x2BF9"
    },
    "20468": {
      "op": "JUMP"
    },
    "20469": {
      "op": "JUMPDEST"
    },
    "20470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20472": {
      "op": "DUP6"
    },
    "20473": {
      "op": "DUP2"
    },
    "20474": {
      "op": "MSTORE"
    },
    "20475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20477": {
      "op": "DUP2"
    },
    "20478": {
      "op": "KECCAK256"
    },
    "20479": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20481": {
      "op": "NOT"
    },
    "20482": {
      "op": "DUP7"
    },
    "20483": {
      "op": "AND"
    },
    "20484": {
      "op": "SWAP2"
    },
    "20485": {
      "op": "JUMPDEST"
    },
    "20486": {
      "op": "DUP3"
    },
    "20487": {
      "op": "DUP2"
    },
    "20488": {
      "op": "LT"
    },
    "20489": {
      "op": "ISZERO"
    },
    "20490": {
      "op": "PUSH2",
      "value": "0x5024"
    },
    "20493": {
      "op": "JUMPI"
    },
    "20494": {
      "op": "DUP9"
    },
    "20495": {
      "op": "DUP7"
    },
    "20496": {
      "op": "ADD"
    },
    "20497": {
      "op": "MLOAD"
    },
    "20498": {
      "op": "DUP3"
    },
    "20499": {
      "op": "SSTORE"
    },
    "20500": {
      "op": "SWAP5"
    },
    "20501": {
      "op": "DUP5"
    },
    "20502": {
      "op": "ADD"
    },
    "20503": {
      "op": "SWAP5"
    },
    "20504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20506": {
      "op": "SWAP1"
    },
    "20507": {
      "op": "SWAP2"
    },
    "20508": {
      "op": "ADD"
    },
    "20509": {
      "op": "SWAP1"
    },
    "20510": {
      "op": "DUP5"
    },
    "20511": {
      "op": "ADD"
    },
    "20512": {
      "op": "PUSH2",
      "value": "0x5005"
    },
    "20515": {
      "op": "JUMP"
    },
    "20516": {
      "op": "JUMPDEST"
    },
    "20517": {
      "op": "POP"
    },
    "20518": {
      "op": "DUP6"
    },
    "20519": {
      "op": "DUP3"
    },
    "20520": {
      "op": "LT"
    },
    "20521": {
      "op": "ISZERO"
    },
    "20522": {
      "op": "PUSH2",
      "value": "0x5042"
    },
    "20525": {
      "op": "JUMPI"
    },
    "20526": {
      "op": "DUP8"
    },
    "20527": {
      "op": "DUP6"
    },
    "20528": {
      "op": "ADD"
    },
    "20529": {
      "op": "MLOAD"
    },
    "20530": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20532": {
      "op": "NOT"
    },
    "20533": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "20535": {
      "op": "DUP9"
    },
    "20536": {
      "op": "SWAP1"
    },
    "20537": {
      "op": "SHL"
    },
    "20538": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "20540": {
      "op": "AND"
    },
    "20541": {
      "op": "SHR"
    },
    "20542": {
      "op": "NOT"
    },
    "20543": {
      "op": "AND"
    },
    "20544": {
      "op": "DUP2"
    },
    "20545": {
      "op": "SSTORE"
    },
    "20546": {
      "op": "JUMPDEST"
    },
    "20547": {
      "op": "POP"
    },
    "20548": {
      "op": "POP"
    },
    "20549": {
      "op": "POP"
    },
    "20550": {
      "op": "POP"
    },
    "20551": {
      "op": "POP"
    },
    "20552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20554": {
      "op": "SWAP1"
    },
    "20555": {
      "op": "DUP2"
    },
    "20556": {
      "op": "SHL"
    },
    "20557": {
      "op": "ADD"
    },
    "20558": {
      "op": "SWAP1"
    },
    "20559": {
      "op": "SSTORE"
    },
    "20560": {
      "op": "POP"
    },
    "20561": {
      "jump": "o",
      "op": "JUMP"
    },
    "20562": {
      "op": "JUMPDEST"
    },
    "20563": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20565": {
      "op": "DUP1"
    },
    "20566": {
      "op": "DUP3"
    },
    "20567": {
      "op": "MSTORE"
    },
    "20568": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "20570": {
      "op": "SWAP1"
    },
    "20571": {
      "op": "DUP3"
    },
    "20572": {
      "op": "ADD"
    },
    "20573": {
      "op": "MSTORE"
    },
    "20574": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "20607": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20609": {
      "op": "DUP3"
    },
    "20610": {
      "op": "ADD"
    },
    "20611": {
      "op": "MSTORE"
    },
    "20612": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20614": {
      "op": "ADD"
    },
    "20615": {
      "op": "SWAP1"
    },
    "20616": {
      "jump": "o",
      "op": "JUMP"
    },
    "20617": {
      "op": "JUMPDEST"
    },
    "20618": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "20623": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "20625": {
      "op": "SHL"
    },
    "20626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20628": {
      "op": "MSTORE"
    },
    "20629": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "20631": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "20633": {
      "op": "MSTORE"
    },
    "20634": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "20636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20638": {
      "op": "REVERT"
    },
    "20639": {
      "op": "JUMPDEST"
    },
    "20640": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "20645": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "20647": {
      "op": "SHL"
    },
    "20648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20650": {
      "op": "MSTORE"
    },
    "20651": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "20653": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "20655": {
      "op": "MSTORE"
    },
    "20656": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "20658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20660": {
      "op": "REVERT"
    },
    "20661": {
      "op": "JUMPDEST"
    },
    "20662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20666": {
      "op": "DUP3"
    },
    "20667": {
      "op": "ADD"
    },
    "20668": {
      "op": "PUSH2",
      "value": "0x50C7"
    },
    "20671": {
      "op": "JUMPI"
    },
    "20672": {
      "op": "PUSH2",
      "value": "0x50C7"
    },
    "20675": {
      "op": "PUSH2",
      "value": "0x509F"
    },
    "20678": {
      "jump": "i",
      "op": "JUMP"
    },
    "20679": {
      "op": "JUMPDEST"
    },
    "20680": {
      "op": "POP"
    },
    "20681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20683": {
      "op": "ADD"
    },
    "20684": {
      "op": "SWAP1"
    },
    "20685": {
      "jump": "o",
      "op": "JUMP"
    },
    "20686": {
      "op": "JUMPDEST"
    },
    "20687": {
      "op": "DUP1"
    },
    "20688": {
      "op": "DUP3"
    },
    "20689": {
      "op": "MUL"
    },
    "20690": {
      "op": "DUP2"
    },
    "20691": {
      "op": "ISZERO"
    },
    "20692": {
      "op": "DUP3"
    },
    "20693": {
      "op": "DUP3"
    },
    "20694": {
      "op": "DIV"
    },
    "20695": {
      "op": "DUP5"
    },
    "20696": {
      "op": "EQ"
    },
    "20697": {
      "op": "OR"
    },
    "20698": {
      "op": "PUSH2",
      "value": "0x85B"
    },
    "20701": {
      "op": "JUMPI"
    },
    "20702": {
      "op": "PUSH2",
      "value": "0x85B"
    },
    "20705": {
      "op": "PUSH2",
      "value": "0x509F"
    },
    "20708": {
      "jump": "i",
      "op": "JUMP"
    },
    "20709": {
      "op": "JUMPDEST"
    },
    "20710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20714": {
      "op": "DUP3"
    },
    "20715": {
      "op": "DUP5"
    },
    "20716": {
      "op": "SUB"
    },
    "20717": {
      "op": "SLT"
    },
    "20718": {
      "op": "ISZERO"
    },
    "20719": {
      "op": "PUSH2",
      "value": "0x50F7"
    },
    "20722": {
      "op": "JUMPI"
    },
    "20723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20725": {
      "op": "DUP1"
    },
    "20726": {
      "op": "REVERT"
    },
    "20727": {
      "op": "JUMPDEST"
    },
    "20728": {
      "op": "POP"
    },
    "20729": {
      "op": "MLOAD"
    },
    "20730": {
      "op": "SWAP2"
    },
    "20731": {
      "op": "SWAP1"
    },
    "20732": {
      "op": "POP"
    },
    "20733": {
      "jump": "o",
      "op": "JUMP"
    },
    "20734": {
      "op": "JUMPDEST"
    },
    "20735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20739": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "20741": {
      "op": "SHL"
    },
    "20742": {
      "op": "SUB"
    },
    "20743": {
      "op": "DUP2"
    },
    "20744": {
      "op": "DUP2"
    },
    "20745": {
      "op": "AND"
    },
    "20746": {
      "op": "DUP4"
    },
    "20747": {
      "op": "DUP3"
    },
    "20748": {
      "op": "AND"
    },
    "20749": {
      "op": "ADD"
    },
    "20750": {
      "op": "SWAP1"
    },
    "20751": {
      "op": "DUP1"
    },
    "20752": {
      "op": "DUP3"
    },
    "20753": {
      "op": "GT"
    },
    "20754": {
      "op": "ISZERO"
    },
    "20755": {
      "op": "PUSH2",
      "value": "0x511E"
    },
    "20758": {
      "op": "JUMPI"
    },
    "20759": {
      "op": "PUSH2",
      "value": "0x511E"
    },
    "20762": {
      "op": "PUSH2",
      "value": "0x509F"
    },
    "20765": {
      "jump": "i",
      "op": "JUMP"
    },
    "20766": {
      "op": "JUMPDEST"
    },
    "20767": {
      "op": "POP"
    },
    "20768": {
      "op": "SWAP3"
    },
    "20769": {
      "op": "SWAP2"
    },
    "20770": {
      "op": "POP"
    },
    "20771": {
      "op": "POP"
    },
    "20772": {
      "jump": "o",
      "op": "JUMP"
    },
    "20773": {
      "op": "JUMPDEST"
    },
    "20774": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "20779": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "20781": {
      "op": "SHL"
    },
    "20782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20784": {
      "op": "MSTORE"
    },
    "20785": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "20787": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "20789": {
      "op": "MSTORE"
    },
    "20790": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "20792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20794": {
      "op": "REVERT"
    },
    "20795": {
      "op": "JUMPDEST"
    },
    "20796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20802": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20804": {
      "op": "SHL"
    },
    "20805": {
      "op": "SUB"
    },
    "20806": {
      "op": "DUP1"
    },
    "20807": {
      "op": "DUP5"
    },
    "20808": {
      "op": "AND"
    },
    "20809": {
      "op": "DUP1"
    },
    "20810": {
      "op": "PUSH2",
      "value": "0x5155"
    },
    "20813": {
      "op": "JUMPI"
    },
    "20814": {
      "op": "PUSH2",
      "value": "0x5155"
    },
    "20817": {
      "op": "PUSH2",
      "value": "0x5125"
    },
    "20820": {
      "jump": "i",
      "op": "JUMP"
    },
    "20821": {
      "op": "JUMPDEST"
    },
    "20822": {
      "op": "SWAP3"
    },
    "20823": {
      "op": "AND"
    },
    "20824": {
      "op": "SWAP2"
    },
    "20825": {
      "op": "SWAP1"
    },
    "20826": {
      "op": "SWAP2"
    },
    "20827": {
      "op": "DIV"
    },
    "20828": {
      "op": "SWAP3"
    },
    "20829": {
      "op": "SWAP2"
    },
    "20830": {
      "op": "POP"
    },
    "20831": {
      "op": "POP"
    },
    "20832": {
      "jump": "o",
      "op": "JUMP"
    },
    "20833": {
      "op": "JUMPDEST"
    },
    "20834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20836": {
      "op": "DUP1"
    },
    "20837": {
      "op": "DUP3"
    },
    "20838": {
      "op": "MSTORE"
    },
    "20839": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "20841": {
      "op": "SWAP1"
    },
    "20842": {
      "op": "DUP3"
    },
    "20843": {
      "op": "ADD"
    },
    "20844": {
      "op": "MSTORE"
    },
    "20845": {
      "op": "PUSH10",
      "value": "0x85C1C9BDA9958DD1259"
    },
    "20856": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "20858": {
      "op": "SHL"
    },
    "20859": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20861": {
      "op": "DUP3"
    },
    "20862": {
      "op": "ADD"
    },
    "20863": {
      "op": "MSTORE"
    },
    "20864": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20866": {
      "op": "ADD"
    },
    "20867": {
      "op": "SWAP1"
    },
    "20868": {
      "jump": "o",
      "op": "JUMP"
    },
    "20869": {
      "op": "JUMPDEST"
    },
    "20870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20874": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20876": {
      "op": "SHL"
    },
    "20877": {
      "op": "SUB"
    },
    "20878": {
      "op": "SWAP3"
    },
    "20879": {
      "op": "SWAP1"
    },
    "20880": {
      "op": "SWAP3"
    },
    "20881": {
      "op": "AND"
    },
    "20882": {
      "op": "DUP3"
    },
    "20883": {
      "op": "MSTORE"
    },
    "20884": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "20889": {
      "op": "AND"
    },
    "20890": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20892": {
      "op": "DUP3"
    },
    "20893": {
      "op": "ADD"
    },
    "20894": {
      "op": "MSTORE"
    },
    "20895": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20897": {
      "op": "ADD"
    },
    "20898": {
      "op": "SWAP1"
    },
    "20899": {
      "jump": "o",
      "op": "JUMP"
    },
    "20900": {
      "op": "JUMPDEST"
    },
    "20901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20903": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "20905": {
      "op": "DUP3"
    },
    "20906": {
      "op": "DUP5"
    },
    "20907": {
      "op": "SUB"
    },
    "20908": {
      "op": "SLT"
    },
    "20909": {
      "op": "ISZERO"
    },
    "20910": {
      "op": "PUSH2",
      "value": "0x51B6"
    },
    "20913": {
      "op": "JUMPI"
    },
    "20914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20916": {
      "op": "DUP1"
    },
    "20917": {
      "op": "REVERT"
    },
    "20918": {
      "op": "JUMPDEST"
    },
    "20919": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20921": {
      "op": "MLOAD"
    },
    "20922": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "20924": {
      "op": "DUP2"
    },
    "20925": {
      "op": "ADD"
    },
    "20926": {
      "op": "DUP2"
    },
    "20927": {
      "op": "DUP2"
    },
    "20928": {
      "op": "LT"
    },
    "20929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20933": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20935": {
      "op": "SHL"
    },
    "20936": {
      "op": "SUB"
    },
    "20937": {
      "op": "DUP3"
    },
    "20938": {
      "op": "GT"
    },
    "20939": {
      "op": "OR"
    },
    "20940": {
      "op": "ISZERO"
    },
    "20941": {
      "op": "PUSH2",
      "value": "0x51D8"
    },
    "20944": {
      "op": "JUMPI"
    },
    "20945": {
      "op": "PUSH2",
      "value": "0x51D8"
    },
    "20948": {
      "op": "PUSH2",
      "value": "0x4461"
    },
    "20951": {
      "jump": "i",
      "op": "JUMP"
    },
    "20952": {
      "op": "JUMPDEST"
    },
    "20953": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20955": {
      "op": "MSTORE"
    },
    "20956": {
      "op": "DUP3"
    },
    "20957": {
      "op": "MLOAD"
    },
    "20958": {
      "op": "DUP2"
    },
    "20959": {
      "op": "MSTORE"
    },
    "20960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20962": {
      "op": "DUP4"
    },
    "20963": {
      "op": "ADD"
    },
    "20964": {
      "op": "MLOAD"
    },
    "20965": {
      "op": "PUSH2",
      "value": "0x51ED"
    },
    "20968": {
      "op": "DUP2"
    },
    "20969": {
      "op": "PUSH2",
      "value": "0x4960"
    },
    "20972": {
      "jump": "i",
      "op": "JUMP"
    },
    "20973": {
      "op": "JUMPDEST"
    },
    "20974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20976": {
      "op": "DUP3"
    },
    "20977": {
      "op": "ADD"
    },
    "20978": {
      "op": "MSTORE"
    },
    "20979": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20981": {
      "op": "DUP4"
    },
    "20982": {
      "op": "DUP2"
    },
    "20983": {
      "op": "ADD"
    },
    "20984": {
      "op": "MLOAD"
    },
    "20985": {
      "op": "SWAP1"
    },
    "20986": {
      "op": "DUP3"
    },
    "20987": {
      "op": "ADD"
    },
    "20988": {
      "op": "MSTORE"
    },
    "20989": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20991": {
      "op": "SWAP3"
    },
    "20992": {
      "op": "DUP4"
    },
    "20993": {
      "op": "ADD"
    },
    "20994": {
      "op": "MLOAD"
    },
    "20995": {
      "op": "SWAP3"
    },
    "20996": {
      "op": "DUP2"
    },
    "20997": {
      "op": "ADD"
    },
    "20998": {
      "op": "SWAP3"
    },
    "20999": {
      "op": "SWAP1"
    },
    "21000": {
      "op": "SWAP3"
    },
    "21001": {
      "op": "MSTORE"
    },
    "21002": {
      "op": "POP"
    },
    "21003": {
      "op": "SWAP2"
    },
    "21004": {
      "op": "SWAP1"
    },
    "21005": {
      "op": "POP"
    },
    "21006": {
      "jump": "o",
      "op": "JUMP"
    },
    "21007": {
      "op": "JUMPDEST"
    },
    "21008": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "21012": {
      "op": "DUP3"
    },
    "21013": {
      "op": "DUP5"
    },
    "21014": {
      "op": "SUB"
    },
    "21015": {
      "op": "SLT"
    },
    "21016": {
      "op": "ISZERO"
    },
    "21017": {
      "op": "PUSH2",
      "value": "0x5221"
    },
    "21020": {
      "op": "JUMPI"
    },
    "21021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21023": {
      "op": "DUP1"
    },
    "21024": {
      "op": "REVERT"
    },
    "21025": {
      "op": "JUMPDEST"
    },
    "21026": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21028": {
      "op": "MLOAD"
    },
    "21029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "21031": {
      "op": "DUP2"
    },
    "21032": {
      "op": "ADD"
    },
    "21033": {
      "op": "DUP2"
    },
    "21034": {
      "op": "DUP2"
    },
    "21035": {
      "op": "LT"
    },
    "21036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21040": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21042": {
      "op": "SHL"
    },
    "21043": {
      "op": "SUB"
    },
    "21044": {
      "op": "DUP3"
    },
    "21045": {
      "op": "GT"
    },
    "21046": {
      "op": "OR"
    },
    "21047": {
      "op": "ISZERO"
    },
    "21048": {
      "op": "PUSH2",
      "value": "0x5243"
    },
    "21051": {
      "op": "JUMPI"
    },
    "21052": {
      "op": "PUSH2",
      "value": "0x5243"
    },
    "21055": {
      "op": "PUSH2",
      "value": "0x4461"
    },
    "21058": {
      "jump": "i",
      "op": "JUMP"
    },
    "21059": {
      "op": "JUMPDEST"
    },
    "21060": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21062": {
      "op": "MSTORE"
    },
    "21063": {
      "op": "DUP3"
    },
    "21064": {
      "op": "MLOAD"
    },
    "21065": {
      "op": "PUSH2",
      "value": "0x5251"
    },
    "21068": {
      "op": "DUP2"
    },
    "21069": {
      "op": "PUSH2",
      "value": "0x47F3"
    },
    "21072": {
      "jump": "i",
      "op": "JUMP"
    },
    "21073": {
      "op": "JUMPDEST"
    },
    "21074": {
      "op": "DUP2"
    },
    "21075": {
      "op": "MSTORE"
    },
    "21076": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21078": {
      "op": "DUP4"
    },
    "21079": {
      "op": "ADD"
    },
    "21080": {
      "op": "MLOAD"
    },
    "21081": {
      "op": "PUSH2",
      "value": "0x5261"
    },
    "21084": {
      "op": "DUP2"
    },
    "21085": {
      "op": "PUSH2",
      "value": "0x47F3"
    },
    "21088": {
      "jump": "i",
      "op": "JUMP"
    },
    "21089": {
      "op": "JUMPDEST"
    },
    "21090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21092": {
      "op": "DUP3"
    },
    "21093": {
      "op": "ADD"
    },
    "21094": {
      "op": "MSTORE"
    },
    "21095": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21097": {
      "op": "DUP4"
    },
    "21098": {
      "op": "ADD"
    },
    "21099": {
      "op": "MLOAD"
    },
    "21100": {
      "op": "PUSH2",
      "value": "0x5274"
    },
    "21103": {
      "op": "DUP2"
    },
    "21104": {
      "op": "PUSH2",
      "value": "0x4960"
    },
    "21107": {
      "jump": "i",
      "op": "JUMP"
    },
    "21108": {
      "op": "JUMPDEST"
    },
    "21109": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21111": {
      "op": "DUP3"
    },
    "21112": {
      "op": "ADD"
    },
    "21113": {
      "op": "MSTORE"
    },
    "21114": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "21116": {
      "op": "DUP4"
    },
    "21117": {
      "op": "DUP2"
    },
    "21118": {
      "op": "ADD"
    },
    "21119": {
      "op": "MLOAD"
    },
    "21120": {
      "op": "SWAP1"
    },
    "21121": {
      "op": "DUP3"
    },
    "21122": {
      "op": "ADD"
    },
    "21123": {
      "op": "MSTORE"
    },
    "21124": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "21126": {
      "op": "SWAP3"
    },
    "21127": {
      "op": "DUP4"
    },
    "21128": {
      "op": "ADD"
    },
    "21129": {
      "op": "MLOAD"
    },
    "21130": {
      "op": "SWAP3"
    },
    "21131": {
      "op": "DUP2"
    },
    "21132": {
      "op": "ADD"
    },
    "21133": {
      "op": "SWAP3"
    },
    "21134": {
      "op": "SWAP1"
    },
    "21135": {
      "op": "SWAP3"
    },
    "21136": {
      "op": "MSTORE"
    },
    "21137": {
      "op": "POP"
    },
    "21138": {
      "op": "SWAP2"
    },
    "21139": {
      "op": "SWAP1"
    },
    "21140": {
      "op": "POP"
    },
    "21141": {
      "jump": "o",
      "op": "JUMP"
    },
    "21142": {
      "op": "JUMPDEST"
    },
    "21143": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "21148": {
      "op": "DUP2"
    },
    "21149": {
      "op": "DUP2"
    },
    "21150": {
      "op": "AND"
    },
    "21151": {
      "op": "DUP4"
    },
    "21152": {
      "op": "DUP3"
    },
    "21153": {
      "op": "AND"
    },
    "21154": {
      "op": "ADD"
    },
    "21155": {
      "op": "SWAP1"
    },
    "21156": {
      "op": "DUP1"
    },
    "21157": {
      "op": "DUP3"
    },
    "21158": {
      "op": "GT"
    },
    "21159": {
      "op": "ISZERO"
    },
    "21160": {
      "op": "PUSH2",
      "value": "0x511E"
    },
    "21163": {
      "op": "JUMPI"
    },
    "21164": {
      "op": "PUSH2",
      "value": "0x511E"
    },
    "21167": {
      "op": "PUSH2",
      "value": "0x509F"
    },
    "21170": {
      "jump": "i",
      "op": "JUMP"
    },
    "21171": {
      "op": "JUMPDEST"
    },
    "21172": {
      "op": "DUP1"
    },
    "21173": {
      "op": "DUP3"
    },
    "21174": {
      "op": "ADD"
    },
    "21175": {
      "op": "DUP1"
    },
    "21176": {
      "op": "DUP3"
    },
    "21177": {
      "op": "GT"
    },
    "21178": {
      "op": "ISZERO"
    },
    "21179": {
      "op": "PUSH2",
      "value": "0x85B"
    },
    "21182": {
      "op": "JUMPI"
    },
    "21183": {
      "op": "PUSH2",
      "value": "0x85B"
    },
    "21186": {
      "op": "PUSH2",
      "value": "0x509F"
    },
    "21189": {
      "jump": "i",
      "op": "JUMP"
    },
    "21190": {
      "op": "JUMPDEST"
    },
    "21191": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21193": {
      "op": "DUP3"
    },
    "21194": {
      "op": "PUSH2",
      "value": "0x52D5"
    },
    "21197": {
      "op": "JUMPI"
    },
    "21198": {
      "op": "PUSH2",
      "value": "0x52D5"
    },
    "21201": {
      "op": "PUSH2",
      "value": "0x5125"
    },
    "21204": {
      "jump": "i",
      "op": "JUMP"
    },
    "21205": {
      "op": "JUMPDEST"
    },
    "21206": {
      "op": "POP"
    },
    "21207": {
      "op": "DIV"
    },
    "21208": {
      "op": "SWAP1"
    },
    "21209": {
      "jump": "o",
      "op": "JUMP"
    },
    "21210": {
      "op": "JUMPDEST"
    },
    "21211": {
      "op": "DUP2"
    },
    "21212": {
      "op": "DUP2"
    },
    "21213": {
      "op": "SUB"
    },
    "21214": {
      "op": "DUP2"
    },
    "21215": {
      "op": "DUP2"
    },
    "21216": {
      "op": "GT"
    },
    "21217": {
      "op": "ISZERO"
    },
    "21218": {
      "op": "PUSH2",
      "value": "0x85B"
    },
    "21221": {
      "op": "JUMPI"
    },
    "21222": {
      "op": "PUSH2",
      "value": "0x85B"
    },
    "21225": {
      "op": "PUSH2",
      "value": "0x509F"
    },
    "21228": {
      "jump": "i",
      "op": "JUMP"
    },
    "21229": {
      "op": "JUMPDEST"
    },
    "21230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21232": {
      "op": "DUP3"
    },
    "21233": {
      "op": "PUSH2",
      "value": "0x52FC"
    },
    "21236": {
      "op": "JUMPI"
    },
    "21237": {
      "op": "PUSH2",
      "value": "0x52FC"
    },
    "21240": {
      "op": "PUSH2",
      "value": "0x5125"
    },
    "21243": {
      "jump": "i",
      "op": "JUMP"
    },
    "21244": {
      "op": "JUMPDEST"
    },
    "21245": {
      "op": "POP"
    },
    "21246": {
      "op": "MOD"
    },
    "21247": {
      "op": "SWAP1"
    },
    "21248": {
      "jump": "o",
      "op": "JUMP"
    },
    "21249": {
      "op": "JUMPDEST"
    },
    "21250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21252": {
      "op": "DUP1"
    },
    "21253": {
      "op": "DUP3"
    },
    "21254": {
      "op": "MSTORE"
    },
    "21255": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "21257": {
      "op": "SWAP1"
    },
    "21258": {
      "op": "DUP3"
    },
    "21259": {
      "op": "ADD"
    },
    "21260": {
      "op": "MSTORE"
    },
    "21261": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F20746865207A65726F206164"
    },
    "21294": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21296": {
      "op": "DUP3"
    },
    "21297": {
      "op": "ADD"
    },
    "21298": {
      "op": "MSTORE"
    },
    "21299": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "21305": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "21307": {
      "op": "SHL"
    },
    "21308": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "21310": {
      "op": "DUP3"
    },
    "21311": {
      "op": "ADD"
    },
    "21312": {
      "op": "MSTORE"
    },
    "21313": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "21315": {
      "op": "ADD"
    },
    "21316": {
      "op": "SWAP1"
    },
    "21317": {
      "jump": "o",
      "op": "JUMP"
    },
    "21318": {
      "op": "JUMPDEST"
    },
    "21319": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21321": {
      "op": "DUP1"
    },
    "21322": {
      "op": "DUP3"
    },
    "21323": {
      "op": "MSTORE"
    },
    "21324": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "21326": {
      "op": "SWAP1"
    },
    "21327": {
      "op": "DUP3"
    },
    "21328": {
      "op": "ADD"
    },
    "21329": {
      "op": "MSTORE"
    },
    "21330": {
      "op": "PUSH32",
      "value": "0x455243313135353A20696E73756666696369656E742062616C616E636520666F"
    },
    "21363": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21365": {
      "op": "DUP3"
    },
    "21366": {
      "op": "ADD"
    },
    "21367": {
      "op": "MSTORE"
    },
    "21368": {
      "op": "PUSH10",
      "value": "0x39103A3930B739B332B9"
    },
    "21379": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "21381": {
      "op": "SHL"
    },
    "21382": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "21384": {
      "op": "DUP3"
    },
    "21385": {
      "op": "ADD"
    },
    "21386": {
      "op": "MSTORE"
    },
    "21387": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "21389": {
      "op": "ADD"
    },
    "21390": {
      "op": "SWAP1"
    },
    "21391": {
      "jump": "o",
      "op": "JUMP"
    },
    "21392": {
      "op": "JUMPDEST"
    },
    "21393": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21395": {
      "op": "DUP2"
    },
    "21396": {
      "op": "MSTORE"
    },
    "21397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21399": {
      "op": "PUSH2",
      "value": "0x53A3"
    },
    "21402": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21404": {
      "op": "DUP4"
    },
    "21405": {
      "op": "ADD"
    },
    "21406": {
      "op": "DUP6"
    },
    "21407": {
      "op": "PUSH2",
      "value": "0x4912"
    },
    "21410": {
      "jump": "i",
      "op": "JUMP"
    },
    "21411": {
      "op": "JUMPDEST"
    },
    "21412": {
      "op": "DUP3"
    },
    "21413": {
      "op": "DUP2"
    },
    "21414": {
      "op": "SUB"
    },
    "21415": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21417": {
      "op": "DUP5"
    },
    "21418": {
      "op": "ADD"
    },
    "21419": {
      "op": "MSTORE"
    },
    "21420": {
      "op": "PUSH2",
      "value": "0x4E73"
    },
    "21423": {
      "op": "DUP2"
    },
    "21424": {
      "op": "DUP6"
    },
    "21425": {
      "op": "PUSH2",
      "value": "0x4912"
    },
    "21428": {
      "jump": "i",
      "op": "JUMP"
    },
    "21429": {
      "op": "JUMPDEST"
    },
    "21430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21434": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "21436": {
      "op": "SHL"
    },
    "21437": {
      "op": "SUB"
    },
    "21438": {
      "op": "DUP3"
    },
    "21439": {
      "op": "DUP2"
    },
    "21440": {
      "op": "AND"
    },
    "21441": {
      "op": "DUP3"
    },
    "21442": {
      "op": "DUP3"
    },
    "21443": {
      "op": "AND"
    },
    "21444": {
      "op": "SUB"
    },
    "21445": {
      "op": "SWAP1"
    },
    "21446": {
      "op": "DUP1"
    },
    "21447": {
      "op": "DUP3"
    },
    "21448": {
      "op": "GT"
    },
    "21449": {
      "op": "ISZERO"
    },
    "21450": {
      "op": "PUSH2",
      "value": "0x511E"
    },
    "21453": {
      "op": "JUMPI"
    },
    "21454": {
      "op": "PUSH2",
      "value": "0x511E"
    },
    "21457": {
      "op": "PUSH2",
      "value": "0x509F"
    },
    "21460": {
      "jump": "i",
      "op": "JUMP"
    },
    "21461": {
      "op": "JUMPDEST"
    },
    "21462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "21468": {
      "op": "SHL"
    },
    "21469": {
      "op": "SUB"
    },
    "21470": {
      "op": "DUP5"
    },
    "21471": {
      "op": "AND"
    },
    "21472": {
      "op": "DUP2"
    },
    "21473": {
      "op": "MSTORE"
    },
    "21474": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "21479": {
      "op": "DUP4"
    },
    "21480": {
      "op": "AND"
    },
    "21481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21483": {
      "op": "DUP3"
    },
    "21484": {
      "op": "ADD"
    },
    "21485": {
      "op": "MSTORE"
    },
    "21486": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "21488": {
      "op": "DUP2"
    },
    "21489": {
      "op": "ADD"
    },
    "21490": {
      "op": "PUSH2",
      "value": "0xDCA"
    },
    "21493": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21495": {
      "op": "DUP4"
    },
    "21496": {
      "op": "ADD"
    },
    "21497": {
      "op": "DUP5"
    },
    "21498": {
      "op": "DUP1"
    },
    "21499": {
      "op": "MLOAD"
    },
    "21500": {
      "op": "DUP3"
    },
    "21501": {
      "op": "MSTORE"
    },
    "21502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21506": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21508": {
      "op": "SHL"
    },
    "21509": {
      "op": "SUB"
    },
    "21510": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21512": {
      "op": "DUP3"
    },
    "21513": {
      "op": "ADD"
    },
    "21514": {
      "op": "MLOAD"
    },
    "21515": {
      "op": "AND"
    },
    "21516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21518": {
      "op": "DUP4"
    },
    "21519": {
      "op": "ADD"
    },
    "21520": {
      "op": "MSTORE"
    },
    "21521": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21523": {
      "op": "DUP2"
    },
    "21524": {
      "op": "ADD"
    },
    "21525": {
      "op": "MLOAD"
    },
    "21526": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21528": {
      "op": "DUP4"
    },
    "21529": {
      "op": "ADD"
    },
    "21530": {
      "op": "MSTORE"
    },
    "21531": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "21533": {
      "op": "DUP2"
    },
    "21534": {
      "op": "ADD"
    },
    "21535": {
      "op": "MLOAD"
    },
    "21536": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "21538": {
      "op": "DUP4"
    },
    "21539": {
      "op": "ADD"
    },
    "21540": {
      "op": "MSTORE"
    },
    "21541": {
      "op": "POP"
    },
    "21542": {
      "op": "POP"
    },
    "21543": {
      "op": "JUMP"
    },
    "21544": {
      "op": "JUMPDEST"
    },
    "21545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "21551": {
      "op": "SHL"
    },
    "21552": {
      "op": "SUB"
    },
    "21553": {
      "op": "DUP7"
    },
    "21554": {
      "op": "DUP2"
    },
    "21555": {
      "op": "AND"
    },
    "21556": {
      "op": "DUP3"
    },
    "21557": {
      "op": "MSTORE"
    },
    "21558": {
      "op": "DUP6"
    },
    "21559": {
      "op": "AND"
    },
    "21560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21562": {
      "op": "DUP3"
    },
    "21563": {
      "op": "ADD"
    },
    "21564": {
      "op": "MSTORE"
    },
    "21565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "21567": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21569": {
      "op": "DUP3"
    },
    "21570": {
      "op": "ADD"
    },
    "21571": {
      "op": "DUP2"
    },
    "21572": {
      "op": "SWAP1"
    },
    "21573": {
      "op": "MSTORE"
    },
    "21574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21576": {
      "op": "SWAP1"
    },
    "21577": {
      "op": "PUSH2",
      "value": "0x5454"
    },
    "21580": {
      "op": "SWAP1"
    },
    "21581": {
      "op": "DUP4"
    },
    "21582": {
      "op": "ADD"
    },
    "21583": {
      "op": "DUP7"
    },
    "21584": {
      "op": "PUSH2",
      "value": "0x4912"
    },
    "21587": {
      "jump": "i",
      "op": "JUMP"
    },
    "21588": {
      "op": "JUMPDEST"
    },
    "21589": {
      "op": "DUP3"
    },
    "21590": {
      "op": "DUP2"
    },
    "21591": {
      "op": "SUB"
    },
    "21592": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "21594": {
      "op": "DUP5"
    },
    "21595": {
      "op": "ADD"
    },
    "21596": {
      "op": "MSTORE"
    },
    "21597": {
      "op": "PUSH2",
      "value": "0x5466"
    },
    "21600": {
      "op": "DUP2"
    },
    "21601": {
      "op": "DUP7"
    },
    "21602": {
      "op": "PUSH2",
      "value": "0x4912"
    },
    "21605": {
      "jump": "i",
      "op": "JUMP"
    },
    "21606": {
      "op": "JUMPDEST"
    },
    "21607": {
      "op": "SWAP1"
    },
    "21608": {
      "op": "POP"
    },
    "21609": {
      "op": "DUP3"
    },
    "21610": {
      "op": "DUP2"
    },
    "21611": {
      "op": "SUB"
    },
    "21612": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "21614": {
      "op": "DUP5"
    },
    "21615": {
      "op": "ADD"
    },
    "21616": {
      "op": "MSTORE"
    },
    "21617": {
      "op": "PUSH2",
      "value": "0xBEE"
    },
    "21620": {
      "op": "DUP2"
    },
    "21621": {
      "op": "DUP6"
    },
    "21622": {
      "op": "PUSH2",
      "value": "0x456E"
    },
    "21625": {
      "jump": "i",
      "op": "JUMP"
    },
    "21626": {
      "op": "JUMPDEST"
    },
    "21627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21631": {
      "op": "DUP3"
    },
    "21632": {
      "op": "DUP5"
    },
    "21633": {
      "op": "SUB"
    },
    "21634": {
      "op": "SLT"
    },
    "21635": {
      "op": "ISZERO"
    },
    "21636": {
      "op": "PUSH2",
      "value": "0x548C"
    },
    "21639": {
      "op": "JUMPI"
    },
    "21640": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21642": {
      "op": "DUP1"
    },
    "21643": {
      "op": "REVERT"
    },
    "21644": {
      "op": "JUMPDEST"
    },
    "21645": {
      "op": "DUP2"
    },
    "21646": {
      "op": "MLOAD"
    },
    "21647": {
      "op": "PUSH2",
      "value": "0x24A3"
    },
    "21650": {
      "op": "DUP2"
    },
    "21651": {
      "op": "PUSH2",
      "value": "0x4403"
    },
    "21654": {
      "jump": "i",
      "op": "JUMP"
    },
    "21655": {
      "op": "JUMPDEST"
    },
    "21656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21658": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "21660": {
      "op": "RETURNDATASIZE"
    },
    "21661": {
      "op": "GT"
    },
    "21662": {
      "op": "ISZERO"
    },
    "21663": {
      "op": "PUSH2",
      "value": "0x54B0"
    },
    "21666": {
      "op": "JUMPI"
    },
    "21667": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "21669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21671": {
      "op": "DUP1"
    },
    "21672": {
      "op": "RETURNDATACOPY"
    },
    "21673": {
      "op": "POP"
    },
    "21674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21676": {
      "op": "MLOAD"
    },
    "21677": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "21679": {
      "op": "SHR"
    },
    "21680": {
      "op": "JUMPDEST"
    },
    "21681": {
      "op": "SWAP1"
    },
    "21682": {
      "jump": "o",
      "op": "JUMP"
    },
    "21683": {
      "op": "JUMPDEST"
    },
    "21684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21686": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "21688": {
      "op": "RETURNDATASIZE"
    },
    "21689": {
      "op": "LT"
    },
    "21690": {
      "op": "ISZERO"
    },
    "21691": {
      "op": "PUSH2",
      "value": "0x54C1"
    },
    "21694": {
      "op": "JUMPI"
    },
    "21695": {
      "op": "SWAP1"
    },
    "21696": {
      "jump": "o",
      "op": "JUMP"
    },
    "21697": {
      "op": "JUMPDEST"
    },
    "21698": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21700": {
      "op": "MLOAD"
    },
    "21701": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "21703": {
      "op": "NOT"
    },
    "21704": {
      "op": "RETURNDATASIZE"
    },
    "21705": {
      "op": "DUP2"
    },
    "21706": {
      "op": "ADD"
    },
    "21707": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "21709": {
      "op": "DUP4"
    },
    "21710": {
      "op": "RETURNDATACOPY"
    },
    "21711": {
      "op": "DUP2"
    },
    "21712": {
      "op": "MLOAD"
    },
    "21713": {
      "op": "RETURNDATASIZE"
    },
    "21714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21718": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21720": {
      "op": "SHL"
    },
    "21721": {
      "op": "SUB"
    },
    "21722": {
      "op": "DUP2"
    },
    "21723": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "21725": {
      "op": "DUP5"
    },
    "21726": {
      "op": "ADD"
    },
    "21727": {
      "op": "GT"
    },
    "21728": {
      "op": "DUP2"
    },
    "21729": {
      "op": "DUP5"
    },
    "21730": {
      "op": "GT"
    },
    "21731": {
      "op": "OR"
    },
    "21732": {
      "op": "ISZERO"
    },
    "21733": {
      "op": "PUSH2",
      "value": "0x54F0"
    },
    "21736": {
      "op": "JUMPI"
    },
    "21737": {
      "op": "POP"
    },
    "21738": {
      "op": "POP"
    },
    "21739": {
      "op": "POP"
    },
    "21740": {
      "op": "POP"
    },
    "21741": {
      "op": "POP"
    },
    "21742": {
      "op": "SWAP1"
    },
    "21743": {
      "jump": "o",
      "op": "JUMP"
    },
    "21744": {
      "op": "JUMPDEST"
    },
    "21745": {
      "op": "DUP3"
    },
    "21746": {
      "op": "DUP6"
    },
    "21747": {
      "op": "ADD"
    },
    "21748": {
      "op": "SWAP2"
    },
    "21749": {
      "op": "POP"
    },
    "21750": {
      "op": "DUP2"
    },
    "21751": {
      "op": "MLOAD"
    },
    "21752": {
      "op": "DUP2"
    },
    "21753": {
      "op": "DUP2"
    },
    "21754": {
      "op": "GT"
    },
    "21755": {
      "op": "ISZERO"
    },
    "21756": {
      "op": "PUSH2",
      "value": "0x5508"
    },
    "21759": {
      "op": "JUMPI"
    },
    "21760": {
      "op": "POP"
    },
    "21761": {
      "op": "POP"
    },
    "21762": {
      "op": "POP"
    },
    "21763": {
      "op": "POP"
    },
    "21764": {
      "op": "POP"
    },
    "21765": {
      "op": "POP"
    },
    "21766": {
      "op": "SWAP1"
    },
    "21767": {
      "jump": "o",
      "op": "JUMP"
    },
    "21768": {
      "op": "JUMPDEST"
    },
    "21769": {
      "op": "DUP5"
    },
    "21770": {
      "op": "RETURNDATASIZE"
    },
    "21771": {
      "op": "DUP8"
    },
    "21772": {
      "op": "ADD"
    },
    "21773": {
      "op": "ADD"
    },
    "21774": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21776": {
      "op": "DUP3"
    },
    "21777": {
      "op": "DUP6"
    },
    "21778": {
      "op": "ADD"
    },
    "21779": {
      "op": "ADD"
    },
    "21780": {
      "op": "GT"
    },
    "21781": {
      "op": "ISZERO"
    },
    "21782": {
      "op": "PUSH2",
      "value": "0x5522"
    },
    "21785": {
      "op": "JUMPI"
    },
    "21786": {
      "op": "POP"
    },
    "21787": {
      "op": "POP"
    },
    "21788": {
      "op": "POP"
    },
    "21789": {
      "op": "POP"
    },
    "21790": {
      "op": "POP"
    },
    "21791": {
      "op": "POP"
    },
    "21792": {
      "op": "SWAP1"
    },
    "21793": {
      "jump": "o",
      "op": "JUMP"
    },
    "21794": {
      "op": "JUMPDEST"
    },
    "21795": {
      "op": "PUSH2",
      "value": "0x5531"
    },
    "21798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21800": {
      "op": "DUP3"
    },
    "21801": {
      "op": "DUP7"
    },
    "21802": {
      "op": "ADD"
    },
    "21803": {
      "op": "ADD"
    },
    "21804": {
      "op": "DUP8"
    },
    "21805": {
      "op": "PUSH2",
      "value": "0x4477"
    },
    "21808": {
      "jump": "i",
      "op": "JUMP"
    },
    "21809": {
      "op": "JUMPDEST"
    },
    "21810": {
      "op": "POP"
    },
    "21811": {
      "op": "SWAP1"
    },
    "21812": {
      "op": "SWAP6"
    },
    "21813": {
      "op": "SWAP5"
    },
    "21814": {
      "op": "POP"
    },
    "21815": {
      "op": "POP"
    },
    "21816": {
      "op": "POP"
    },
    "21817": {
      "op": "POP"
    },
    "21818": {
      "op": "POP"
    },
    "21819": {
      "jump": "o",
      "op": "JUMP"
    },
    "21820": {
      "op": "JUMPDEST"
    },
    "21821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21823": {
      "op": "DUP1"
    },
    "21824": {
      "op": "DUP3"
    },
    "21825": {
      "op": "MSTORE"
    },
    "21826": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "21828": {
      "op": "SWAP1"
    },
    "21829": {
      "op": "DUP3"
    },
    "21830": {
      "op": "ADD"
    },
    "21831": {
      "op": "MSTORE"
    },
    "21832": {
      "op": "PUSH32",
      "value": "0x455243313135353A204552433131353552656365697665722072656A65637465"
    },
    "21865": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21867": {
      "op": "DUP3"
    },
    "21868": {
      "op": "ADD"
    },
    "21869": {
      "op": "MSTORE"
    },
    "21870": {
      "op": "PUSH8",
      "value": "0x6420746F6B656E73"
    },
    "21879": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "21881": {
      "op": "SHL"
    },
    "21882": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "21884": {
      "op": "DUP3"
    },
    "21885": {
      "op": "ADD"
    },
    "21886": {
      "op": "MSTORE"
    },
    "21887": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "21889": {
      "op": "ADD"
    },
    "21890": {
      "op": "SWAP1"
    },
    "21891": {
      "jump": "o",
      "op": "JUMP"
    },
    "21892": {
      "op": "JUMPDEST"
    },
    "21893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21897": {
      "op": "DUP3"
    },
    "21898": {
      "op": "DUP5"
    },
    "21899": {
      "op": "SUB"
    },
    "21900": {
      "op": "SLT"
    },
    "21901": {
      "op": "ISZERO"
    },
    "21902": {
      "op": "PUSH2",
      "value": "0x5596"
    },
    "21905": {
      "op": "JUMPI"
    },
    "21906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21908": {
      "op": "DUP1"
    },
    "21909": {
      "op": "REVERT"
    },
    "21910": {
      "op": "JUMPDEST"
    },
    "21911": {
      "op": "DUP2"
    },
    "21912": {
      "op": "MLOAD"
    },
    "21913": {
      "op": "PUSH2",
      "value": "0x24A3"
    },
    "21916": {
      "op": "DUP2"
    },
    "21917": {
      "op": "PUSH2",
      "value": "0x4436"
    },
    "21920": {
      "jump": "i",
      "op": "JUMP"
    },
    "21921": {
      "op": "JUMPDEST"
    },
    "21922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "21928": {
      "op": "SHL"
    },
    "21929": {
      "op": "SUB"
    },
    "21930": {
      "op": "DUP7"
    },
    "21931": {
      "op": "DUP2"
    },
    "21932": {
      "op": "AND"
    },
    "21933": {
      "op": "DUP3"
    },
    "21934": {
      "op": "MSTORE"
    },
    "21935": {
      "op": "DUP6"
    },
    "21936": {
      "op": "AND"
    },
    "21937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21939": {
      "op": "DUP3"
    },
    "21940": {
      "op": "ADD"
    },
    "21941": {
      "op": "MSTORE"
    },
    "21942": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21944": {
      "op": "DUP2"
    },
    "21945": {
      "op": "ADD"
    },
    "21946": {
      "op": "DUP5"
    },
    "21947": {
      "op": "SWAP1"
    },
    "21948": {
      "op": "MSTORE"
    },
    "21949": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "21951": {
      "op": "DUP2"
    },
    "21952": {
      "op": "ADD"
    },
    "21953": {
      "op": "DUP4"
    },
    "21954": {
      "op": "SWAP1"
    },
    "21955": {
      "op": "MSTORE"
    },
    "21956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "21958": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "21960": {
      "op": "DUP3"
    },
    "21961": {
      "op": "ADD"
    },
    "21962": {
      "op": "DUP2"
    },
    "21963": {
      "op": "SWAP1"
    },
    "21964": {
      "op": "MSTORE"
    },
    "21965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21967": {
      "op": "SWAP1"
    },
    "21968": {
      "op": "PUSH2",
      "value": "0x4311"
    },
    "21971": {
      "op": "SWAP1"
    },
    "21972": {
      "op": "DUP4"
    },
    "21973": {
      "op": "ADD"
    },
    "21974": {
      "op": "DUP5"
    },
    "21975": {
      "op": "PUSH2",
      "value": "0x456E"
    },
    "21978": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "d21dd0a13ee89c0ee8ee410abb300e274883cadf",
  "source": "pragma solidity ^0.8.0;\n\n// SPDX-License-Identifier: MIT\n\n/**\n *\n * This contract is a part of the House of Panda project.\n *\n * House of Panda is an NFT-based real estate investment platform that gives you access to yield, short-term loans.\n * This contract is built with BlackRoof engine.\n *\n * https://www.houseofpanda.co\n */\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nimport \"./interfaces/ICoin.sol\";\nimport \"./types/ProjectInfo.sol\";\nimport \"./types/HoldingInfo.sol\";\nimport \"./types/StakeInfo.sol\";\nimport \"./HasAdmin.sol\";\nimport \"./SigVerifier.sol\";\nimport \"./Staker.sol\";\n\ncontract HouseOfPanda is\n    ERC1155Tradable,\n    IProjectMan,\n    HasAdmin,\n    SigVerifier,\n    ReentrancyGuard\n{\n    using SafeERC20 for ICoin;\n    using Strings for uint256;\n\n    ICoin internal stableCoin;\n    uint32 public projectIndex;\n    IStaker public staker;\n\n    mapping(uint32 => uint128) private _supplyFor;\n\n    bool public paused = false;\n\n    event ProjectCreated(uint32 indexed id);\n    event ProjectStatusChanged(uint32 indexed projectId, bytes1 indexed status);\n    event Mint(\n        uint32 indexed projectId,\n        uint128 indexed qty,\n        address minter,\n        address indexed to\n    );\n    event Burn(\n        uint32 indexed projectId,\n        uint128 indexed qty,\n        address indexed burner\n    );\n\n    /**\n     * Constructor for the HouseOfPanda contract, which inherits from the\n     * ERC1155Tradable and Stake contracts.\n     * Set the contract's base URI and proxy address and set the admin address.\n     *\n     * @param _admin The contract's admin address.\n     * @param _baseUri The contract's base URI.\n     * @param _stableCoin The address of the stablecoin for calculating rewards.\n     * @param _proxyAddress The address of the proxy contract.\n     */\n    constructor(\n        address _admin,\n        string memory _baseUri,\n        address _stableCoin,\n        IStaker _staker,\n        address _proxyAddress\n    ) ERC1155Tradable(\"House of Panda\", \"HOPNFT\", _baseUri, _proxyAddress) {\n        _staker.setProjectMan(address(this));\n        staker = _staker;\n        stableCoin = ICoin(_stableCoin);\n        _setAdmin(_admin);\n    }\n\n    function changeAdmin(address newAdmin_) external onlyOwner {\n        _setAdmin(newAdmin_);\n    }\n\n    modifier onlyAdminOrOwner() {\n        require(_isAdmin(msg.sender) || _isOwner(msg.sender), \"!admin !owner\");\n        _;\n    }\n\n    /**\n     * This function checks if the parameter 'account' is the owner of the contract.\n     * @param account The address of the account to be checked.\n     * @return {bool} A boolean indicating whether the account is the owner or not.\n     */\n    function _isOwner(address account) internal view returns (bool) {\n        return owner() == account;\n    }\n\n    function min(uint64 a, uint64 b) internal pure returns (uint64) {\n        return a <= b ? a : b;\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal override {\n        if (from == address(0) && to == address(0)) {\n            return;\n        }\n\n        HoldingInfo memory holding;\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            ProjectInfo memory project = _getProject(uint32(id));\n\n            // cannot be transferred while staking\n            StakeInfo memory sti = staker.getStakingInfoRaw(from, uint32(id));\n            if (sti.qty > 0) {\n                require(balanceOf(from, uint32(id)) - amount >= sti.qty, \"in staking\");\n            }\n\n            uint64 prevStartTime = uint64(block.timestamp);\n\n            if (from != address(0)) {\n                holding = staker.getHoldingInfoRaw(from, uint32(id));\n\n                // if already exists, then update holding info\n                if (holding.qty > 0) {\n\n                    uint64 endTime = min(uint64(block.timestamp), project.endTime);\n\n                    holding.qty -= amount;\n                    if (endTime > holding.startTime) {\n                        holding.accumRewards += staker.calculateRewards(\n                            holding.qty * project.price,\n                            holding.startTime,\n                            endTime,\n                            project.apy // regular\n                        );\n                    }\n                }\n\n                prevStartTime = holding.startTime;\n\n                holding.startTime = uint64(block.timestamp);\n\n                // update holding info for `from`\n                staker.setHoldingInfoData(from, uint32(id), holding);\n            }\n\n            if (to != address(0)) {\n                // update holding info for `to`\n                holding = staker.getHoldingInfoRaw(to, uint32(id));\n\n                uint64 endTime = min(uint64(block.timestamp), project.endTime);\n\n                if (holding.qty > 0 && endTime > holding.startTime) {\n                    holding.accumRewards += staker.calculateRewards(\n                        holding.qty * project.price,\n                        holding.startTime,\n                        endTime,\n                        project.apy // regular\n                    );\n                }\n\n                holding.qty += amount;\n                holding.startTime = prevStartTime;\n\n                staker.setHoldingInfoData(to, uint32(id), holding);\n            }\n        }\n    }\n\n    /**\n     * @dev Creates a new project. This can only be done by the contract admin or owner.\n     * @param typeId project type.\n     * @param title Title of the project.\n     * @param price Price to mint one NFT from this project (in wei). Cannot be zero if `authorizedOnly`=true.\n     * @param authorizedOnly If true the project only mintable by admin.\n     * @param supplyLimit Supply limit of the project. Minting will fail if max limit.\n     * @param term Term of the project in months.\n     * @param apy APY of the project.\n     * @param stakedApy APY for staked NFT.\n     * @param startTime Start time of the project.\n     * @param endTime End time of the project.\n     */\n    function createProject(\n        uint16 typeId,\n        string memory title,\n        uint256 price,\n        bool authorizedOnly,\n        uint128 supplyLimit,\n        uint16 term,\n        uint256 apy,\n        uint256 stakedApy,\n        uint64 startTime,\n        uint64 endTime\n    ) external onlyAdminOrOwner {\n        if (authorizedOnly) {\n            require(price > 0, \"price=0\");\n        }\n        require(term > 0 && term <= 60, \"x term\");\n\n        uint32 pid = projectIndex + 1;\n        ProjectInfo memory project = ProjectInfo({\n            id: pid,\n            title: title,\n            creator: msg.sender,\n            typeId: typeId,\n            price: price,\n            authorizedOnly: authorizedOnly,\n            status: ACTIVE,\n            supplyLimit: supplyLimit,\n            term: term,\n            apy: apy,\n            stakedApy: stakedApy,\n            startTime: startTime,\n            endTime: endTime\n        });\n        _projects[pid] = project;\n        projectIndex = pid;\n\n        emit ProjectCreated(project.id);\n    }\n\n    function _exists(uint32 projectId) internal view returns (bool) {\n        return _projects[projectId].id == projectId;\n    }\n\n    function projectExists(\n        uint32 projectId\n    ) public view override returns (bool) {\n        return _exists(projectId);\n    }\n\n    function _getProject(\n        uint32 projectId\n    ) internal view returns (ProjectInfo memory) {\n        require(projectId > 0, \"!projectId\");\n        require(_projects[projectId].id == projectId, \"!project\");\n        return _projects[projectId];\n    }\n\n    function getProject(\n        uint32 projectId\n    ) public view override returns (ProjectInfo memory) {\n        return _getProject(projectId);\n    }\n\n    /**\n     * @dev check is project exists\n     */\n    function _checkProject(ProjectInfo memory project) internal pure {\n        require(project.id > 0, \"!project\");\n    }\n\n    /**\n     * This function is used to set the status of a project.\n     * The caller of this function must be either the owner or an admin of the\n     * contract.\n     * It takes in two parameters: the projectId and a bytes1 status.\n     * It first checks to make sure the project exists, before setting the status\n     * and emitting a ProjectStatusChanged event.\n     *\n     * @param projectId The ID of the project to set the status for.\n     * @param status A bytes1 indicating the new status.\n     */\n    function setProjectStatus(\n        uint32 projectId,\n        bytes1 status\n    ) external onlyAdminOrOwner {\n        require(_exists(projectId), \"!project\");\n        _projects[projectId].status = status;\n        emit ProjectStatusChanged(projectId, status);\n    }\n\n    /**\n     * @dev Mint NFT for specific project. This payable function demands the exact amount of price,\n     *      except for the authorizedOnly project.\n     * @param projectId Project id.\n     * @param qty Quantity of NFTs to mint.\n     */\n    function mint(\n        uint32 projectId,\n        uint32 qty,\n        address to\n    ) external payable nonReentrant returns (bool) {\n        require(!paused, \"paused\");\n        ProjectInfo memory project = _projects[projectId];\n        _checkProject(project);\n        require(project.status == ACTIVE, \"!active\");\n        require(project.startTime <= block.timestamp, \"!start\");\n        require(project.endTime > block.timestamp, \"!ended\");\n\n        address _sender = _msgSender();\n\n        bool isAuthority = _isAdmin(_sender) || _isOwner(_sender);\n\n        if (project.authorizedOnly) {\n            require(isAuthority, \"unauthorized\");\n        } else {\n            require(\n                isAuthority ||\n                    stableCoin.balanceOf(_sender) >= qty * project.price,\n                \"balance <\"\n            );\n        }\n\n        // check max supply limit if configured (positive value).\n        uint128 supply = _supplyFor[projectId];\n        if (project.supplyLimit > 0) {\n            require(supply + qty <= project.supplyLimit, \"limit\");\n        }\n\n        _supplyFor[projectId] += qty;\n\n        // deduct stable coin from minter\n        if (!project.authorizedOnly && !isAuthority) {\n            stableCoin.safeTransferFrom(\n                _sender,\n                address(staker),\n                qty * project.price\n            );\n        }\n\n        _mint(to, projectId, qty, \"\");\n\n        emit Mint(projectId, qty, _msgSender(), to);\n\n        return true;\n    }\n\n    /**\n     * @dev Permissioned version of mint, use signature for verification,\n     *      Anyone with valid signature can mint NFTs.\n     */\n    function authorizedMint(\n        uint32 projectId,\n        uint32 qty,\n        address to,\n        uint64 nonce,\n        Sig memory sig\n    ) external payable nonReentrant returns (bool) {\n        require(nonce >= uint64(block.timestamp) / 60, \"x nonce\");\n        _checkAddress(to);\n\n        // require payment\n        ProjectInfo memory project = _projects[projectId];\n        _checkProject(project);\n\n        // check supply\n        uint128 supply = _supplyFor[projectId];\n        if (project.supplyLimit > 0) {\n            require(supply + qty <= project.supplyLimit, \"limit\");\n        }\n\n        address _sender = _msgSender();\n\n        bytes32 message = sigPrefixed(\n            keccak256(abi.encodePacked(projectId, _sender, to, qty, nonce))\n        );\n\n        require(_isSigner(admin, message, sig), \"x signature\");\n\n        bool isAuthority = _isAdmin(_sender) || _isOwner(_sender);\n\n        require(\n            isAuthority || stableCoin.balanceOf(_sender) >= qty * project.price,\n            \"balance <\"\n        );\n\n        _supplyFor[projectId] += qty;\n\n        // deduct stable coin from minter\n        stableCoin.safeTransferFrom(\n            _sender,\n            address(this),\n            qty * project.price\n        );\n\n        _mint(to, projectId, qty, \"\");\n\n        emit Mint(projectId, qty, _sender, to);\n\n        return true;\n    }\n\n    /**\n     * @dev check supply for specific item.\n     */\n    function supplyFor(uint32 projectId) external view returns (uint128) {\n        return _supplyFor[projectId];\n    }\n\n    /**\n     * Returns the URI of a given project.\n     * If the project has a custom URI (stored in the 'customUri' mapping),\n     * the custom URI is returned. Otherwise, the default uri defined in the super\n     * class is returned.\n     *\n     * @param _projectId The ID of the project.\n     * @return {string} The URI of the project.\n     */\n    function uri(\n        uint256 _projectId\n    ) public view override returns (string memory) {\n        require(_exists(uint32(_projectId)), \"!project\");\n        // We have to convert string to bytes to check for existence\n        bytes memory customUriBytes = bytes(customUri[_projectId]);\n        if (customUriBytes.length > 0) {\n            return customUri[_projectId];\n        } else {\n            // return super.uri(_projectId);\n            string memory baseURI = super.uri(_projectId);\n            return\n                bytes(baseURI).length > 0\n                    ? string(\n                        abi.encodePacked(\n                            baseURI,\n                            _projectId.toString(),\n                            \".json\"\n                        )\n                    )\n                    : \"\";\n        }\n    }\n\n    function _checkAddress(address addr) private pure {\n        require(addr != address(0), \"x addr\");\n    }\n\n    /**\n     * This function is used to pause or unpause contract.\n     * Caller of this function must be the owner of the contract.\n     * It updates the paused state of the contract and calls the pause function of\n     * the staker.\n     * @param _paused A boolean indicating whether staking should be paused or\n     * unpaused.\n     */\n    function pause(bool _paused) external onlyOwner {\n        paused = _paused;\n        staker.pause(_paused);\n    }\n\n    function _burnInternal(\n        uint32 projectId,\n        uint32 qty,\n        address to\n    ) private returns (bool) {\n        _checkAddress(to);\n        require(projectId > 0, \"!projectId\");\n        require(qty > 0, \"!qty\");\n\n        ProjectInfo memory project = _projects[projectId];\n        _checkProject(project);\n\n        // check max supply limit if configured (positive value).\n        uint128 supply = _supplyFor[projectId];\n        require(supply >= qty, \"exceed supply\");\n\n        // cannot be burned while staking\n        StakeInfo memory sti = staker.getStakingInfoRaw(to, projectId);\n        if (sti.qty > 0) {\n            require(balanceOf(to, projectId) - qty >= sti.qty, \"in staking\");\n        }\n\n        _supplyFor[projectId] -= qty;\n\n        _burn(to, projectId, qty);\n\n        if (project.authorizedOnly) {\n            // do nothing\n        } else {\n            uint256 amount = qty * project.price;\n            // payable(to).transfer(amount);\n            stableCoin.safeTransferFrom(address(staker), to, amount);\n        }\n\n        emit Burn(projectId, qty, to);\n\n        return true;\n    }\n\n    /**\n     * @dev Burn NFT and claim back the mint price to the NFT owner.\n     *      this will emit Burn event when success.\n     * @param projectId Project id.\n     * @param qty Quantity of NFTs to burn.\n     */\n    function burn(\n        uint32 projectId,\n        uint32 qty\n    ) external nonReentrant returns (bool) {\n        address _sender = _msgSender();\n        uint256 _ownedQty = balanceOf(_sender, projectId);\n        require(_ownedQty >= qty, \"qty >\");\n        return _burnInternal(projectId, qty, _sender);\n    }\n\n    /**\n     * @dev Burn NFT by admin and return the mint price to the NFT owner.\n     *      Caller of this function must be admin.\n     *      this will emit Burn event when success.\n     * @param projectId Project id.\n     * @param qty Quantity of NFTs to burn.\n     * @param to the owner of the NFT to be burned.\n     */\n    function adminBurn(\n        uint32 projectId,\n        uint32 qty,\n        address to\n    ) external payable onlyAdmin nonReentrant returns (bool) {\n        return _burnInternal(projectId, qty, to);\n    }\n\n    function getHoldingInfo(\n        address account,\n        uint32 projectId\n    ) external view returns (HoldingInfo memory) {\n        return staker.getHoldingInfo(account, uint32(projectId));\n    }\n\n    /**\n     * This function is used to update contract staker.\n     * It must be called by the owner of the contract. \n     * It checks that the staker's owner is the same as the contract's owner.\n     * @param _staker address of the staker.\n     */\n    function updateStaker(address _staker) external onlyOwner {\n        // check staker owner\n        require(IStaker(_staker).owner() == this.owner(), \"!owner\");\n        staker = IStaker(_staker);\n    }\n\n    /**\n     * This function allows users to retrieve the asset allocation and staking\n     * information of the given investor and project ID.\n     * It takes in two parameters: 'investor' (the address of the investor) and\n     * 'projectId' (the ID of the project).\n     * It first checks to make sure the investor address is valid and that a valid\n     * project ID was supplied.\n     * It then retrieves the holding information and staking information of the\n     * respective investor and project,\n     * and returns a tuple containing both pieces of information.\n     * \n     * @param investor The address of the investor.\n     * @param projectId The ID of the project.\n     * @return (HoldingInfo memory, StakeInfo memory) A tuple containing the asset\n     * allocation and staking information of the investor and project.\n     */\n    function getAssetAlloc(address investor, uint32 projectId)\n        external\n        view\n        returns (HoldingInfo memory, StakeInfo memory)\n    {\n        _checkAddress(investor);\n        require(projectId > 0, \"!projectId\");\n        HoldingInfo memory hld = staker.getHoldingInfo(investor, projectId);\n        StakeInfo memory stk = staker.getStakingInfo(investor, projectId);\n        return (hld, stk);\n    }\n}\n",
  "sourceMap": "612:18472:18:-:0;;;87:19:23;;;-1:-1:-1;;87:19:23;;;;;;938:26:18;;;;;;;;1816:375;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1101:304:16;;;;;;;;;;;;;-1:-1:-1;;;1101:304:16;;;;;;;;;;;;;;;;-1:-1:-1;;;1101:304:16;;;2019:8:18;2029:13;1254:4:16;1073:13:2;1081:4;1073:7;;;:13;;:::i;:::-;-1:-1:-1;867:23:0;666:10:11;867:9:0;:23::i;:::-;1270:4:16::1;:12;1277:5:::0;1270:4;:12:::1;:::i;:::-;-1:-1:-1::0;1292:6:16::1;:16;1301:7:::0;1292:6;:16:::1;:::i;:::-;-1:-1:-1::0;1318:20:16::1;:44:::0;;-1:-1:-1;;;;;;1318:44:16::1;-1:-1:-1::0;;;;;1318:44:16;;::::1;;::::0;;-1:-1:-1;1742:7:1;:22;2054:36:18::1;::::0;-1:-1:-1;;;2054:36:18;;2084:4:::1;2054:36;::::0;::::1;4608:51:30::0;2054:21:18;;::::1;::::0;-1:-1:-1;2054:21:18::1;::::0;-1:-1:-1;4581:18:30;;;-1:-1:-1;2054:36:18::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2100:6:18::1;:16:::0;;-1:-1:-1;;;;;2100:16:18;;::::1;-1:-1:-1::0;;;;;;2100:16:18;;::::1;;::::0;;;2126:10:::1;:31:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;2167:17:18::1;::::0;-1:-1:-1;2177:6:18;2167:9:::1;:17::i;:::-;1816:375:::0;;;;;612:18472;;8028:86:2;8094:4;:13;8101:6;8094:4;:13;:::i;:::-;;8028:86;:::o;2041:169:0:-;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;662:120:17:-;726:5;:15;;-1:-1:-1;;;;;;726:15:17;-1:-1:-1;;;;;726:15:17;;;;;;;;756:19;;;;-1:-1:-1;;756:19:17;662:120;:::o;14:131:30:-;-1:-1:-1;;;;;89:31:30;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:138::-;229:13;;251:31;229:13;251:31;:::i;:::-;150:138;;;:::o;293:127::-;354:10;349:3;345:20;342:1;335:31;385:4;382:1;375:15;409:4;406:1;399:15;425:1443;557:6;565;573;581;589;642:3;630:9;621:7;617:23;613:33;610:53;;;659:1;656;649:12;610:53;691:9;685:16;710:31;735:5;710:31;:::i;:::-;784:2;815:18;;;809:25;760:5;;-1:-1:-1;784:2:30;-1:-1:-1;;;;;883:14:30;;;880:34;;;910:1;907;900:12;880:34;948:6;937:9;933:22;923:32;;993:7;986:4;982:2;978:13;974:27;964:55;;1015:1;1012;1005:12;964:55;1044:2;1038:9;1066:2;1062;1059:10;1056:36;;;1072:18;;:::i;:::-;1147:2;1141:9;1115:2;1201:13;;-1:-1:-1;;1197:22:30;;;1221:2;1193:31;1189:40;1177:53;;;1245:18;;;1265:22;;;1242:46;1239:72;;;1291:18;;:::i;:::-;1331:10;1327:2;1320:22;1366:2;1358:6;1351:18;1406:7;1401:2;1396;1392;1388:11;1384:20;1381:33;1378:53;;;1427:1;1424;1417:12;1378:53;1449:1;1440:10;;1459:129;1473:2;1470:1;1467:9;1459:129;;;1561:10;;;1557:19;;1551:26;1530:14;;;1526:23;;1519:59;1484:10;;;;1459:129;;;1630:1;1625:2;1620;1612:6;1608:15;1604:24;1597:35;1651:6;1641:16;;;;;;;;1676:49;1721:2;1710:9;1706:18;1676:49;:::i;:::-;1666:59;;1744:49;1789:2;1778:9;1774:18;1744:49;:::i;:::-;1734:59;;1812:50;1857:3;1846:9;1842:19;1812:50;:::i;:::-;1802:60;;425:1443;;;;;;;;:::o;1873:380::-;1952:1;1948:12;;;;1995;;;2016:61;;2070:4;2062:6;2058:17;2048:27;;2016:61;2123:2;2115:6;2112:14;2092:18;2089:38;2086:161;;2169:10;2164:3;2160:20;2157:1;2150:31;2204:4;2201:1;2194:15;2232:4;2229:1;2222:15;2086:161;;1873:380;;;:::o;2384:545::-;2486:2;2481:3;2478:11;2475:448;;;2522:1;2547:5;2543:2;2536:17;2592:4;2588:2;2578:19;2662:2;2650:10;2646:19;2643:1;2639:27;2633:4;2629:38;2698:4;2686:10;2683:20;2680:47;;;-1:-1:-1;2721:4:30;2680:47;2776:2;2771:3;2767:12;2764:1;2760:20;2754:4;2750:31;2740:41;;2831:82;2849:2;2842:5;2839:13;2831:82;;;2894:17;;;2875:1;2864:13;2831:82;;;2835:3;;;2475:448;2384:545;;;:::o;3105:1352::-;3225:10;;-1:-1:-1;;;;;3247:30:30;;3244:56;;;3280:18;;:::i;:::-;3309:97;3399:6;3359:38;3391:4;3385:11;3359:38;:::i;:::-;3353:4;3309:97;:::i;:::-;3461:4;;3525:2;3514:14;;3542:1;3537:663;;;;4244:1;4261:6;4258:89;;;-1:-1:-1;4313:19:30;;;4307:26;4258:89;-1:-1:-1;;3062:1:30;3058:11;;;3054:24;3050:29;3040:40;3086:1;3082:11;;;3037:57;4360:81;;3507:944;;3537:663;2331:1;2324:14;;;2368:4;2355:18;;-1:-1:-1;;3573:20:30;;;3691:236;3705:7;3702:1;3699:14;3691:236;;;3794:19;;;3788:26;3773:42;;3886:27;;;;3854:1;3842:14;;;;3721:19;;3691:236;;;3695:3;3955:6;3946:7;3943:19;3940:201;;;4016:19;;;4010:26;-1:-1:-1;;4099:1:30;4095:14;;;4111:3;4091:24;4087:37;4083:42;4068:58;4053:74;;3940:201;-1:-1:-1;;;;;4187:1:30;4171:14;;;4167:22;4154:36;;-1:-1:-1;3105:1352:30:o;4462:203::-;612:18472:18;;;;;;",
  "sourcePath": "contracts/HouseOfPanda.sol",
  "type": "contract"
}